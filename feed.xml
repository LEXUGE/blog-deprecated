<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-07-25T16:07:33+08:00</updated><id>/</id><title type="html">BLOG|LEXUGE</title><subtitle>即使被全世界孤立，也要一个人笑得精彩！</subtitle><entry><title type="html">lib_blaster优化笔记</title><link href="/jekyll/update/2018/07/24/lib_blaster%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0.html" rel="alternate" type="text/html" title="lib_blaster优化笔记" /><published>2018-07-24T16:10:00+08:00</published><updated>2018-07-24T16:10:00+08:00</updated><id>/jekyll/update/2018/07/24/lib_blaster%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0</id><content type="html" xml:base="/jekyll/update/2018/07/24/lib_blaster%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0.html">&lt;p&gt;&lt;img src=&quot;/image/rust-logo.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;lib_blaster 是一个我用 Rust 编写的 SYN flood 概念验证（Proof of Concept） 的库。为追求极致的性能，我对它作了大量优化，达到了一定的效果。这是我对优化过程的记录。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;1-瓶颈分析与优化&quot;&gt;1. 瓶颈分析与优化&lt;/h2&gt;
&lt;p&gt;为了能够做好优化，首先得找出性能瓶颈所在。而其中一步就是回顾和进一步理解自己写的代码究竟在做什么。&lt;br /&gt;
（优化前的&lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt;目录↓）&lt;br /&gt;
&lt;img src=&quot;/image/optimization-log/v0.1.2.png&quot; alt=&quot;&quot; /&gt;
整个 lib 使用了&lt;a href=&quot;https://github.com/libpnet/libpnet&quot;&gt;libpnet&lt;/a&gt; (A cross-platform, low level network framework)作为网络部分的框架。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;builder.rs&lt;/code&gt; 实现了IP header和TCP header的构建&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sender.rs&lt;/code&gt; 包括了网络层（Network Layer）的Transport Channel的建立以及包的发送&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;collector.rs&lt;/code&gt; 包括了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt;来分装需要构建的包的信息&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tools.ts&lt;/code&gt; 包括了随机IP生成函数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为分析代码的性能瓶颈所在，我使用了火焰图（flamegraph）。使用了一个叫做&lt;a href=&quot;https://github.com/TyOverby/flame&quot;&gt;flame&lt;/a&gt;的Rust火焰图生成库。&lt;br /&gt;
以下是我第一次生成的结果：
&lt;img src=&quot;/image/optimization-log/flame1.png&quot; alt=&quot;&quot; /&gt;
可以看到 Create Collector的耗时非常的夸张。在这个操作中，我调用了&lt;code class=&quot;highlighter-rouge&quot;&gt;random::&amp;lt;u16&amp;gt;()&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;rand_ipv4()&lt;/code&gt;这两个函数。&lt;br /&gt;
其中，&lt;code class=&quot;highlighter-rouge&quot;&gt;rand_ipv4()&lt;/code&gt;的定义如下（&lt;code class=&quot;highlighter-rouge&quot;&gt;v0.1.2&lt;/code&gt;时）:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rand_ipv4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Ipv4Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;非常夸张地使用了4个&lt;code class=&quot;highlighter-rouge&quot;&gt;random&amp;lt;T&amp;gt;()&lt;/code&gt;。通过查看&lt;a href=&quot;https://docs.rs/crate/rand/&quot;&gt;rand的文档&lt;/a&gt;，可以看到&lt;code class=&quot;highlighter-rouge&quot;&gt;random&amp;lt;T&amp;gt;()&lt;/code&gt;的定义：&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Standard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Distribution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;thread_rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;而&lt;code class=&quot;highlighter-rouge&quot;&gt;thread_rng()&lt;/code&gt;所返回的&lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadRng&lt;/code&gt;（&lt;code class=&quot;highlighter-rouge&quot;&gt;rand::rngs::ThreadRng&lt;/code&gt;）按照文档所述：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Like StdRng, ThreadRng is a cryptographically secure PRNG.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;显然，因为是加密安全（cryptographically secure）的，所需的耗时也会相应增多。但是我在这里并不需要加密安全的随机数生成算法，我的目的是IP欺骗（IP spoofing），即使端口号和IP地址是递减的也没关系，只要不同即可。&lt;br /&gt;
这样的耗时显然是没有意义的，通过查阅资料发现，一种非常快的非加密安全的伪随机数生成（Pseudorandom number generator）算法——&lt;a href=&quot;https://en.wikipedia.org/wiki/Xorshift&quot;&gt;Xorshift算法&lt;/a&gt;。关于速度的介绍：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Xorshift generators are among the fastest non-cryptographically-secure random number generators, requiring very small code and state.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为&lt;code class=&quot;highlighter-rouge&quot;&gt;rand&lt;/code&gt;库已经提供了Xorshift算法的实现，所以我只需要调用即可。据此，我实现了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;fast_random&amp;lt;T&amp;gt;()&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fast_random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PartialOrd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SampleUniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Standard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Distribution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;XorShiftRng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;EntropyRng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;相应的，我用&lt;code class=&quot;highlighter-rouge&quot;&gt;fast_random&amp;lt;T&amp;gt;()&lt;/code&gt;重写了&lt;code class=&quot;highlighter-rouge&quot;&gt;rand_ipv4()&lt;/code&gt;。此时，重写生成的火焰图如下：&lt;br /&gt;
&lt;img src=&quot;/image/optimization-log/flame2.png&quot; alt=&quot;&quot; /&gt;
可以看到，&lt;code class=&quot;highlighter-rouge&quot;&gt;build_pkt()&lt;/code&gt;方法（method）的耗时非常的长。当时的代码中，&lt;code class=&quot;highlighter-rouge&quot;&gt;send_syn()&lt;/code&gt;的定义如下：&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;send_syn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;transport_channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Layer3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tcp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build_pkt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.send_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IpAddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;V4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.dst_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()),&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;每一次发包，都会用&lt;code class=&quot;highlighter-rouge&quot;&gt;collector&lt;/code&gt;提供的信息重新构建一个封包，但是绝大多是的内容是重复的，这就非常的多余。&lt;br /&gt;
因此，我把&lt;code class=&quot;highlighter-rouge&quot;&gt;build_pkt()&lt;/code&gt;写成了一个面向对象（Object-Oriented）的&lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt;。暴露了几个修改需要字段的方法。如下：&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/// The mutable packet container&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pkt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ipv4_pkt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MutableIpv4Packet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tcp_pkt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MutableTcpPacket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;src_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dst_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pkt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// Create a `Pkt` by providing `Collector`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// Convert `Pkt` to a immutable `TcpPacket`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_one_packet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TcpPacket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// set the source IP address of IP header&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_src_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// set the source port of TCP header&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_src_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// Get the destination IP address&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_dst_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_checksum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;进一步进行火焰图分析，我发现&lt;code class=&quot;highlighter-rouge&quot;&gt;send_syn&lt;/code&gt;中一直再重复创建TransportChannel对。这非常的多余且耗时，所以我也将它OO化（面向对象化）了。&lt;br /&gt;
&lt;strong&gt;至此，优化算是部分完成了。&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-benchmark&quot;&gt;2. Benchmark!&lt;/h2&gt;
&lt;p&gt;优化完毕后，就应该进行Benchmark了。&lt;br /&gt;
关于Benchmark，我这次走了不少弯路。从一开始单纯的使用&lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;来测试时间到后面的使用&lt;a href=&quot;https://github.com/japaric/criterion.rs&quot;&gt;Criterion库&lt;/a&gt;以及&lt;a href=&quot;https://en.wikipedia.org/wiki/Mock_object&quot;&gt;Mock object&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;一开始，我使用了非常简单粗暴的&lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;来测试，测试出来的数据也都不怎么稳定，没有什么意义。&lt;br /&gt;
后来，通过各Rustaceans的帮助，我发现了Criterion库，一个Benchmark用的库。配合&lt;code class=&quot;highlighter-rouge&quot;&gt;cargo bench&lt;/code&gt;，来进行Benchmark。&lt;br /&gt;
但是，测试出来的数据优化前后变化并不明显且波动较大。&lt;br /&gt;
经过&lt;code class=&quot;highlighter-rouge&quot;&gt;Criterion&lt;/code&gt;所做线性回归（Linear regression）得出的&lt;script type=&quot;math/tex&quot;&gt;R^{2}&lt;/script&gt;（&lt;a href=&quot;https://en.wikipedia.org/wiki/Coefficient_of_determination&quot;&gt;决定系数，Coefficient of determination&lt;/a&gt;），大约为0.06左右，非常的小。&lt;br /&gt;
其中，Wikipedia上决定系数的意义：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;In statistics, the coefficient of determination, denoted R2 or r2 and pronounced “R squared”, is the proportion of the variance in the dependent variable that is predictable from the independent variable(s).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这意味着，&lt;script type=&quot;math/tex&quot;&gt;R^{2}&lt;/script&gt;越小，相关方程的参考价值也就越低，反之，&lt;script type=&quot;math/tex&quot;&gt;R^{2}&lt;/script&gt;越接近于&lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt;，相关方程的参考价值也就越大。另外根据Criterion文档上所写的：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;If the R^2 value is low, this may indicate the benchmark isn’t doing the same amount of work on each iteration. You may wish to examine the plot output and consider improving the consistency of your benchmark routine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可以说每一个Iteration里，耗时十分不一致（consist）。那这是什么导致的呢？&lt;br /&gt;
整个库其实可以分为两个工作：拼包（build packet）和发包（send packet）。我认为这种耗时的不稳定和测试数据动辄30%的波动基本上都应该是由发包造成的。&lt;br /&gt;
那如何避免这个不确定因素呢？&lt;br /&gt;
这里就要用到一个单元测试（Unit test）中常用的方法——mock。mock测试的定义就不在这里详细展开了。在我的这个情况中，应该mock发包这个步骤。因为不需要mock对象（Mock object）做出返回，所以这里的mock非常简单——直接不发包就可以了!&lt;br /&gt;
为什么不发包呢？因为实际上网络的不稳定性是非常大的。而且发包往往是做内核调用的，因此，这里对发包行为做Benchmark反而是意义不大的。真正需要Benchmark的应该是我们自己写的代码，也就是拼包部分。&lt;br /&gt;
mock发包后，我们得到了测试数据：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/optimization-log/criterion result.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，&lt;script type=&quot;math/tex&quot;&gt;R^2&lt;/script&gt;的数值达到了0.9左右，算是实测中非常稳定的水平了。&lt;br /&gt;
进一步看Criterion生成的详细报告：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;↓概率密度函数（PDF, Probability Density Function）
&lt;img src=&quot;/image/optimization-log/pdf.svg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;↓线性回归（Linear regression）
&lt;img src=&quot;/image/optimization-log/regression.svg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为我也没有深入学习和了解过统计学（Statistics）和概率学（Probability theory），也就不在此分析上述图表以免误人子弟。&lt;br /&gt;
我们可以根据上述的Benchmark计算出拼包的速率，单位为pps（Packet Per Second），符号为&lt;script type=&quot;math/tex&quot;&gt;\mu'&lt;/script&gt;。&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{align}
\mu' &amp;= \frac{1s}{3.2731\mu{}s}\\
&amp;\approx{} 305530.094714329 pps
\end{align} %]]&gt;&lt;/script&gt;&lt;br /&gt;
当然，在不同的硬件条件下，速度也是不同的（甚至插拔笔记本的电源会对速度造成影响），感兴趣的可以自己做一下Benchmark。&lt;/p&gt;

&lt;p&gt;同时，我还对优化前的版本做了Benchmark（相同的测试条件和代码），得出如下数据：&lt;br /&gt;
&lt;img src=&quot;/image/optimization-log/compare.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
可以看到各方面数据相较于优化前的是全面落后的（无论是耗时还是数据的稳定性）&lt;/p&gt;

&lt;p&gt;实际上，上面的Benchmark并不能完全显示出优化的效果。上面的Benchmark只能体现出随机数算法优化后的效果。因为两个版本都完整地创建了一次包，但在实际情况中，大规模拼包时，优化后的&lt;code class=&quot;highlighter-rouge&quot;&gt;lib_blaster&lt;/code&gt;只需要小幅度地修改封包即可。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;可以计算一下这个差别在一定条件下的影响：（&lt;script type=&quot;math/tex&quot;&gt;t_{b}&lt;/script&gt;表示创建包的耗时，&lt;script type=&quot;math/tex&quot;&gt;t_{e}&lt;/script&gt;表示修改包所占的耗时，&lt;script type=&quot;math/tex&quot;&gt;t_{b},t_{e}\in\mathbb{N}^{+}&lt;/script&gt;）&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;优化后创建包时间所占总拼包时间的百分比：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\begin{align}t_{1}\%=\frac{t_{b}}{t_{b}+n\cdot{}t_{e}}\end{align}&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;优化前创建包时间所占总拼包时间的百分比：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\begin{align}t_{2}\%=\frac{n\cdot{}t_{b}}{n\cdot{}t_{b}}=100\%\end{align}&lt;/script&gt;&lt;br /&gt;
（↑因为优化前没有修改包的概念，故占拼包时间的&lt;script type=&quot;math/tex&quot;&gt;100\%&lt;/script&gt;）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当&lt;script type=&quot;math/tex&quot;&gt;n\to+\infty&lt;/script&gt;时，&lt;script type=&quot;math/tex&quot;&gt;t_{1}\%&lt;/script&gt;的极限为：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\begin{align}\lim\limits_{n\to+\infty}\frac{t_{b}}{t_{b}+n\cdot{}t_{e}}=0=0\%\end{align}&lt;/script&gt;&lt;br /&gt;
可以看出，当&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;趋于正无穷时，差别还是非常明显的（简直太明显了）&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;还可以计算一下两个拼包总耗时之比（当&lt;script type=&quot;math/tex&quot;&gt;n\to+\infty&lt;/script&gt;）：&lt;br /&gt;
（↓因为优化前没有修改包的概念，所以修改前的耗时为&lt;script type=&quot;math/tex&quot;&gt;n\cdot{}(t_{b}+t_{e})&lt;/script&gt;）&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{align}
k&amp;=\frac{t_{b}+n\cdot{}t_{e}}{n\cdot{}(t_{b}+t_{e})}
\end{align} %]]&gt;&lt;/script&gt;&lt;br /&gt;
求当&lt;script type=&quot;math/tex&quot;&gt;n\to+\infty&lt;/script&gt;时的极限：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{align}
\lim\limits_{n\to+\infty}k&amp;=\lim\limits_{n\to+\infty}[\frac{t_{b}}{n\cdot{}(t_{b}+t_{e})}+\frac{n\cdot{}t_{e}}{n\cdot{}(t_{b}+t_{e})}]\\
&amp;=\lim\limits_{n\to+\infty}\frac{t_{b}}{n\cdot{}(t_{b}+t_{e})}+\lim\limits_{n\to+\infty}\frac{n\cdot{}t_{e}}{n\cdot{}(t_{b}+t_{e})}\\
&amp;=0+\frac{t_{e}}{t_{b}+t_{e}}\\
&amp;=\frac{t_{e}}{t_{b}+t_{e}}\\
\end{align} %]]&gt;&lt;/script&gt;&lt;br /&gt;
显然，根据实际，&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
t_{e}&lt;t_{b} %]]&gt;&lt;/script&gt;，所以这个耗时之比的比值是非常小的。&lt;/p&gt;

&lt;p&gt;所以&lt;code class=&quot;highlighter-rouge&quot;&gt;lib_blaster&lt;/code&gt;在实际中的发包速度&lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt;是多少呢？（&lt;script type=&quot;math/tex&quot;&gt;t_{network}&lt;/script&gt;表示发包耗时）&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{align}
\mu&amp;=\frac{1s}{\frac{1s}{\mu'}+t_{network}}
\end{align} %]]&gt;&lt;/script&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;3-总结&quot;&gt;3. 总结&lt;/h2&gt;
&lt;p&gt;根据上述演算，可以基本得出本次优化的结果已经达成了。当然，这只是拼包部分的优化，在发包部分，还可以使用&lt;a href=&quot;https://www.dpdk.org/&quot;&gt;DPDK&lt;/a&gt;和&lt;a href=&quot;http://info.iet.unipi.it/~luigi/netmap/&quot;&gt;netmap&lt;/a&gt;等黑魔法优化，达到无与伦比的速度。&lt;br /&gt;
但是限于这些方法过于底层，相关的Rust Binding还不成熟以及自身水平，所以这次并没有优化。&lt;/p&gt;</content><author><name></name></author><category term="Rust笔记" /><category term="项目" /><category term="网络" /><category term="Linux" /><summary type="html">lib_blaster 是一个我用 Rust 编写的 SYN flood 概念验证（Proof of Concept） 的库。为追求极致的性能，我对它作了大量优化，达到了一定的效果。这是我对优化过程的记录。</summary></entry><entry><title type="html">几件伤心事</title><link href="/jekyll/update/2018/04/27/%E5%87%A0%E4%BB%B6%E4%BC%A4%E5%BF%83%E4%BA%8B.html" rel="alternate" type="text/html" title="几件伤心事" /><published>2018-04-27T20:38:00+08:00</published><updated>2018-04-27T20:38:00+08:00</updated><id>/jekyll/update/2018/04/27/%E5%87%A0%E4%BB%B6%E4%BC%A4%E5%BF%83%E4%BA%8B</id><content type="html" xml:base="/jekyll/update/2018/04/27/%E5%87%A0%E4%BB%B6%E4%BC%A4%E5%BF%83%E4%BA%8B.html">&lt;blockquote&gt;
  &lt;p&gt;以下几段文字力求真实表现出考试一步步走向失败，以及揭晓结果时的复杂心态。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;自语道：“还剩下20分钟左右的时间，不要慌张，稳定下来！“&lt;br /&gt;
然而实际上，已是按捺不住内心的躁动了。20分钟的时间，却居然还有几道大题的答案写得毫无底气。&lt;br /&gt;
“我究竟怎么了？为什么算出来是这样的？”，我抱着这个问题仔细翻查了过程，可是毫无问题。&lt;br /&gt;
就这样，7分钟离去。&lt;br /&gt;
几分钟过后，我猛然发现了自己自始至终的一个读题疏漏。一看表，已经只剩10分钟的时间了。&lt;br /&gt;
可这一看错，就意味着两道题。10分钟？
只够改一小题了，我听得到心脏的加速跳动以及颈动脉舒张的声音。 
“这一步千万不能算错”，我近乎祈求地对自己喊道。&lt;br /&gt;
当然，戏剧性地，还是错了。此时，铃响了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;刚离开考场，我的心跳才缓缓平复。来到教室，我随意翻看了同学的答案，大概看了几道我毫无自信的题。不出所料，错了。&lt;br /&gt;
当然，我并没有什么太多的心理变化，大概算了一下，认定与自己的目标有一定距离。&lt;br /&gt;
“千万不能崩，否则你就真的没机会了。”，这句话重复在我脑海中回想。&lt;br /&gt;
随即我就开始复习下一门科目了，周围人一个个喜出望外，我麻木不仁地看着课本，味同嚼蜡。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下午的考试还算顺利，但是，当考完时，我就开始无休止的回忆了。&lt;br /&gt;
我并没有准备明天的科目，亦或说是敷衍了事地翻了一下。在周围同学背单词的嘈杂声中，我托着头，两眼空洞端视前方。&lt;br /&gt;
我越想越后悔，有点发懵。随后又有点想哭，可又哭不出来，想哭的冲动一次又一次被掩盖又重新唤起。
终于，下课了。&lt;br /&gt;
我仿佛沉浸在一天考试带给我的宿醉中，头痛且喜怒无常。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;跌跌撞撞得跑到寝室，我趴在桌面上。四周寂静无声，只留下窗外风吹树的沙沙声与我的喘气声。&lt;br /&gt;
一开始，我还麻木不仁，渐渐地，气息平静了，泪水夺眶而出——却没有温度——那正是内心的凄凉。
泪水流了几滴便止住了，可真切的痛觉却蔓延开来。痛——如魔爪，掐住我的咽喉；如利刃，绞割我的心脏；如……，攫人魂魄。我被它摆弄着，无力地仰面在桌上，静静忍受消散不尽的痛。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;熄灯后，寂冷的月光蒙在地上，我的思绪又不禁游离起来，同样的过程，同样的忍受，不一样的只有更多的悔恨吧。&lt;br /&gt;
曾几何时，我看见过人心痛时，会产生物理上的痛觉。
我紧紧地抓抱着被子，似在包扎伤口似地裹在心口。翻来覆去，痛苦发遍全身。
抓狂，绝望，痛苦，失眠。&lt;br /&gt;
听着室友的鼾声，我真是不禁叹惋：“这是故意的吗？！”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;英语考试结束——全部结束了。&lt;br /&gt;
我毫无心理上的波动，因为我知道这已经无能为力了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;中午，我还是按捺不住自己的好奇，去对了一下英语的答案，结果必然，我也只能失望地接受。那感觉如同你咽不下最后一口气，全身还努力拽着它时，它——溜了。&lt;br /&gt;
我坐在座位上，呆滞地看着《闪灵》，可自己却再也进入不了看书的状态了，再也不了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数学成绩揭晓了，我自然而然不想知道。&lt;br /&gt;
可是我必将面对的，我还是问了同学。&lt;br /&gt;
我把他叫出门外。&lt;br /&gt;
搭着他的双肩，仿佛接受判决似的：“告诉我吧，到底多少？”&lt;br /&gt;
他刻意回避了我的目光，没说什么。&lt;br /&gt;
我追问道：“有80分吗？”，80是我预估的最低分数了。&lt;br /&gt;
他目光游离了一会，似乎做错了什么似的，尔后又摇摇头。
又追加道：“个十位之和是14”&lt;br /&gt;
此时的我是多么希望自己听错，算错？可是偏偏就是这样。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;语文课之后，一切都落下帷幕了。&lt;br /&gt;
周围的同学正紧张得讨论着自己的分数与排名。好似市场里要价的人们。&lt;br /&gt;
我呆呆地望着窗外，没有任何想法，留下了眼泪。&lt;br /&gt;
“所有的努力都白费了，这是故意的吗？！”&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/image/星空.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;有一个夜晚我烧毁了所有的记忆，从此我的梦就透明了；有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。如果你感到委屈，证明你还有底线 。如果你感到迷茫，证明你还有追求 。如果你感到痛苦，证明你还有力气 。如果你感到绝望，证明你还有希望 。 ——泰戈尔&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">以下几段文字力求真实表现出考试一步步走向失败，以及揭晓结果时的复杂心态。</summary></entry><entry><title type="html">《挪威的森林》读书笔记</title><link href="/jekyll/update/2018/03/23/%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html" rel="alternate" type="text/html" title="《挪威的森林》读书笔记" /><published>2018-03-23T21:03:00+08:00</published><updated>2018-03-23T21:03:00+08:00</updated><id>/jekyll/update/2018/03/23/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0</id><content type="html" xml:base="/jekyll/update/2018/03/23/%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html">&lt;blockquote&gt;
  &lt;p&gt;这是我第一次读村上春树的书，从《挪》中短窥一般社会、青春与现实。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;日本作家的作品，是我所涉猎最少的一类，也正因如此，我知道的并不多，便从众选择了村上的《挪威的森林》。&lt;/p&gt;

&lt;p&gt;所以，这究竟是一部怎样的作品呢？我很难对此妄下定论，有人说这是“恋爱小说”或“言情小说”。的确，村上自己也这样说过，但是，我却并不这样认为。因为《挪》既不如恋爱般粗浅，也不落言情的俗套华丽。因此，译者认为它是“成长小说”或是“青春小说”。但我私以为之所以难下定论，正是因为村上写的真实，才使《挪》拥有了生活般单薄又多变的面貌。所以，我暂称它为“生活小说”。&lt;/p&gt;

&lt;p&gt;书中描述了许多复杂的异性关系，主人公也比较多杂。我并不打算对此讨论或回味过多。或许，一般这样的安排下主角可能会不够地道，但通过上下文可以看出——相反，主角『渡边彻』是一个有些深陷混沌沼泽的典型文艺青年。&lt;/p&gt;

&lt;p&gt;渡边彻高中时有着一个要好的朋友木月，他与直子从小青梅竹马，自然而然地成为了恋人。他们两人对渡边彻也是交心的真朋友。就这样，他们一直维持着三人的朋友关系。然而，没有任何事由的，木月在渡边彻17岁那年自杀了。这给两人带来了失真却沉重打击。&lt;/p&gt;

&lt;p&gt;随后，就高中毕业了，渡边彻似乎对生活缺失任何热情，来到了东京一所中下等的私立大学，却又天天翘课。过得日子也简单：喝酒看书，约会。但同时，也面对来自生活的压力。就这样，日子有一日没一日地过着。就是这样一个文艺青年，并没有什么成就。整日——看无用之书，无缘有地喝酒，却又过着看起来还挺丰富的生活——尽管在我看来是浪费。&lt;/p&gt;

&lt;p&gt;而直子，则深深地挣扎与被撕裂在对木月的忠诚与对渡边彻的爱中。她在她20岁生日次日去了一个疗养医院。可想而知，这样下去人一下子就失去了目标，生活在自我迷茫的煎熬中，却又无法自拔。最终，不知是偶然还是必然，她在症状逐渐严重后自杀了。&lt;/p&gt;

&lt;p&gt;此外，通过渡边彻的眼，还可以看到各色人等。印象最深的便是永泽，家境好自不必言说。事业与学业上成就丰硕——得到了外务省的录取并且精通多门外语，但是，毕竟他是极为不地道且自私的人。动作虽然不多，但是基本上都是些绝情的手段。他的自私早已根深蒂固，在他脑海中，“自己”与“他人”泾渭分明。当然，谁知道事业上的成就是不是他自私的附属品呢？&lt;/p&gt;

&lt;p&gt;小说的最后，渡边彻问了”我在哪“这样一个终极的哲学问题。我想，于现实，于青春，这个问题不知道被多少人问过，当然也从未得到过解答。渡边彻看似颓废，但他或多或少的在我们身上都有呈现，这是成长不可避免的镇痛。&lt;/p&gt;

&lt;p&gt;现实的青春并不是几碗鸡汤就能振奋的，现实就是刻薄的，逃不过那些错与迷茫。对于这些，我只想说——成长是痛，但也是幸运！&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><category term="读书笔记" /><summary type="html">这是我第一次读村上春树的书，从《挪》中短窥一般社会、青春与现实。</summary></entry><entry><title type="html">远去的年味</title><link href="/jekyll/update/2018/02/23/%E8%BF%9C%E5%8E%BB%E7%9A%84%E5%B9%B4%E5%91%B3.html" rel="alternate" type="text/html" title="远去的年味" /><published>2018-02-23T19:44:00+08:00</published><updated>2018-02-23T19:44:00+08:00</updated><id>/jekyll/update/2018/02/23/%E8%BF%9C%E5%8E%BB%E7%9A%84%E5%B9%B4%E5%91%B3</id><content type="html" xml:base="/jekyll/update/2018/02/23/%E8%BF%9C%E5%8E%BB%E7%9A%84%E5%B9%B4%E5%91%B3.html">&lt;blockquote&gt;
  &lt;p&gt;　　春节，一直是中国人最重要的节日。但近年来，随着经济发展，过年的『年味』却愈渐寡淡。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　小时候，过年在我脑海中烙下最深的记忆就是每年除夕去外婆家吃年夜饭。各式各样新鲜的家常菜摆满了整张圆桌，桌子虽然不大，但是一家人在一起却使热闹的氛围格外突出，让我特别有过年的新鲜感。吃完饭，放鞭炮。鞭炮虽然种类不多，玩法也比较单一，但点燃时的期待与害怕却在我脑海中挥之不去。对于我来说——鞭炮一响，春节就真正开始了。&lt;br /&gt;
　　尔后的初一到初七，就有各方的亲戚要走。尽管我从没有搞清楚过谁是谁，但游走在各方亲戚间，与伙伴们玩耍的片刻瞬间都能感受到热闹与喜庆，一种自然的，流淌在我血液里的兴奋。而这一切的感受，都是春节这一年中不可替代的特殊日子带来的。&lt;br /&gt;
　　如今，过年的『年味』几乎快要消失殆尽了。前些年马路上的灯笼都消失了，取而代之的仅是家门口的灯笼。往年的对联也不再贴了，我甚至都不再见过。往年必玩的鞭炮今年我连碰都没碰。走亲戚，全家福之类的更是被极度简化，直至消失。终于，一年又一年后，今年过年只剩下年夜饭，春晚以及简单的家族聚餐。聚餐上也是各玩各的，除了人到齐了，春节与任何一个节日几乎没有任何区别。&lt;br /&gt;
　　往常过年的热闹劲与兴奋感永远的定格在了记忆中，成为了我对年的念想。春节也渐渐开始失去它原有的魔力了。它开始与平常的日子没什么不同，而放长假成为了它唯一的谈资。&lt;br /&gt;
　　我想念那烟花绚丽多彩的图案，我又何尝不想再望着它痴迷一次呢？它还回的来吗？但愿。&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">　　春节，一直是中国人最重要的节日。但近年来，随着经济发展，过年的『年味』却愈渐寡淡。</summary></entry><entry><title type="html">XCH白皮书</title><link href="/jekyll/update/2018/02/20/XCH%E7%99%BD%E7%9A%AE%E4%B9%A6.html" rel="alternate" type="text/html" title="XCH白皮书" /><published>2018-02-20T22:21:00+08:00</published><updated>2018-02-20T22:21:00+08:00</updated><id>/jekyll/update/2018/02/20/XCH%E7%99%BD%E7%9A%AE%E4%B9%A6</id><content type="html" xml:base="/jekyll/update/2018/02/20/XCH%E7%99%BD%E7%9A%AE%E4%B9%A6.html">&lt;blockquote&gt;
  &lt;p&gt;XCH白皮书&lt;/p&gt;
&lt;/blockquote&gt;

&lt;iframe src=&quot;/download/xch-principle.pdf&quot; style=&quot;width:718px; height:700px;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><category term="项目" /><summary type="html">XCH白皮书</summary></entry><entry><title type="html">特殊的年夜饭</title><link href="/jekyll/update/2018/02/20/%E7%89%B9%E6%AE%8A%E7%9A%84%E5%B9%B4%E5%A4%9C%E9%A5%AD.html" rel="alternate" type="text/html" title="特殊的年夜饭" /><published>2018-02-20T14:30:00+08:00</published><updated>2018-02-20T14:30:00+08:00</updated><id>/jekyll/update/2018/02/20/%E7%89%B9%E6%AE%8A%E7%9A%84%E5%B9%B4%E5%A4%9C%E9%A5%AD</id><content type="html" xml:base="/jekyll/update/2018/02/20/%E7%89%B9%E6%AE%8A%E7%9A%84%E5%B9%B4%E5%A4%9C%E9%A5%AD.html">&lt;blockquote&gt;
  &lt;p&gt;　　农历戊戌年的新年将至，雪也飘了几场，终于，快要到除夕了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　而近年来外公病重，妈妈也三番五次地去看望、照顾他，此时，过年它似乎也有了另一层特殊的含义。当我向妈妈问起年夜饭的安排，妈妈答道去外公的病房吃，我心头黯了几分。尽管我有几分不情愿，但为了陪陪外公，也就答应了。&lt;br /&gt;
　　这几年，年味越来越淡了，往年路上还有些灯笼挂着，今年没了。作为在城里过年的人，不回乡下，自然也不热闹。更不用说年关将至，城市里人愈加稀少，往常拥挤的马路没见有几辆车。&lt;br /&gt;
　　夹杂着略微的失望与无奈，我盼到了过年。妈妈在厨房里忙活了一整天——这是少有的几年自己做年夜饭。傍晚到了，提着各色饭菜——甚至还有桌子，我们赶往了医院。&lt;br /&gt;
　　除夕夜，医院里已无多少人。走进这间不大的单人病房，这时，哥哥他们也赶到了。铺开桌子，摆上汤、菜等，置上碗筷。此时的外公还在熟睡。在病床一旁贴上大红的福字，打开电视，春晚欢腾的音乐一扫医院萧杀冷清的气氛，终于有了几分年味与热闹了。&lt;br /&gt;
　　吃了好一会，外公终于醒来了。看着外公像小孩一样被搀扶着做起来，我心里既好笑，又为外公感到惋惜与可怜。外公闻着菜香，沙哑地嚷嚷着要吃，但是又怎么能吃呢，他全身上下插满了各种医疗器械，脸瘦得皮包骨头，双腿无力得蜷缩着。尽管替他感到可怜，但又有何办法？&lt;br /&gt;
　　人到晚年，卧倒病床，享不了晚年之福也罢，还得忍受病痛之苦。&lt;br /&gt;
　　中国人过的是团圆年，团圆就是家人的团聚，而家又是什么？无非是一群人，无时无刻都不抛下任何一人于不顾。这就是家的意义。而过年，也并不是表面上的红火与热闹，任何时候，只要人团圆了，家就在了，家在了，年就到了。正如妈妈所说：过年，过得是舒坦。&lt;br /&gt;
　　尽管菜并不是那么好吃，桌子也很小，但这一次，却让我格外有“年味”，也有家的味道。我想，这才是过年本该有的样子吧。&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">　　农历戊戌年的新年将至，雪也飘了几场，终于，快要到除夕了。</summary></entry><entry><title type="html">#Music UP# Day 1</title><link href="/jekyll/update/2018/01/31/Music-UP-Day-1.html" rel="alternate" type="text/html" title="#Music UP# Day 1" /><published>2018-01-31T10:47:00+08:00</published><updated>2018-01-31T10:47:00+08:00</updated><id>/jekyll/update/2018/01/31/#Music%20UP%23%20Day%201</id><content type="html" xml:base="/jekyll/update/2018/01/31/Music-UP-Day-1.html">&lt;blockquote&gt;
  &lt;p&gt;浩瀚；璀璨；缥缈；清澈 ——空灵问候&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1-faded&quot;&gt;1. Faded&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/MusicUP_image/faded.jpg&quot; /&gt;&lt;/p&gt;
&lt;audio src=&quot;/music/Faded.mp3&quot; controls=&quot;controls&quot; loop=&quot;loop&quot; preload=&quot;meta&quot;&gt;&lt;/audio&gt;
&lt;h4 id=&quot;iselin-solheim清澈动人的声音电音多样的音色与富有张力的表现力很全面地表现出了寻觅的迷茫渴求无助窗外的雪和它更配哦&quot;&gt;　　Iselin Solheim清澈动人的声音，电音多样的音色与富有张力的表现力。很全面地表现出了“寻觅”的迷茫，渴求，无助。窗外的雪和它更配哦!&lt;/h4&gt;

&lt;h3 id=&quot;2-a-sky-full-of-stars&quot;&gt;2. A Sky Full of Stars&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/MusicUP_image/A Sky Full of Stars.jpg&quot; /&gt;&lt;/p&gt;
&lt;audio src=&quot;/music/A Sky Full of Stars.mp3&quot; controls=&quot;controls&quot; loop=&quot;loop&quot; preload=&quot;meta&quot;&gt;&lt;/audio&gt;
&lt;h4 id=&quot;coldplay的歌曲似乎都具有向全宇宙表白的胸怀尤其是这一首chris-martin的声音很具有磁性开头渐强恰到好处得推向高潮全歌词不多与一般的流行歌曲相比更有宏大的感觉愿你徜徉在宇宙中&quot;&gt;　　Coldplay的歌曲似乎都具有向全宇宙表白的胸怀，尤其是这一首。Chris Martin的声音很具有磁性，开头渐强，恰到好处得推向高潮。全歌词不多，与一般的流行歌曲相比更有宏大的感觉。愿你徜徉在宇宙中！&lt;/h4&gt;

&lt;h3 id=&quot;3-across-the-stars&quot;&gt;3. Across The Stars&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/MusicUP_image/Across The Stars.jpg&quot; /&gt;&lt;/p&gt;
&lt;audio src=&quot;/music/Across The Stars.mp3&quot; controls=&quot;controls&quot; loop=&quot;loop&quot; preload=&quot;meta&quot;&gt;&lt;/audio&gt;
&lt;h4 id=&quot;star-wars不解释&quot;&gt;　　Star Wars不解释&lt;/h4&gt;</content><author><name></name></author><summary type="html">浩瀚；璀璨；缥缈；清澈 ——空灵问候</summary></entry><entry><title type="html">关于“数列的通项解法的研究”</title><link href="/jekyll/update/2018/01/30/%E5%85%B3%E4%BA%8E-%E6%95%B0%E5%88%97-%E7%9A%84%E9%80%9A%E9%A1%B9%E8%A7%A3%E6%B3%95%E7%9A%84%E7%A0%94%E7%A9%B6.html" rel="alternate" type="text/html" title="关于“数列的通项解法的研究”" /><published>2018-01-30T16:01:00+08:00</published><updated>2018-01-30T16:01:00+08:00</updated><id>/jekyll/update/2018/01/30/%E5%85%B3%E4%BA%8E%E2%80%9C%E6%95%B0%E5%88%97%E2%80%9D%E7%9A%84%E9%80%9A%E9%A1%B9%E8%A7%A3%E6%B3%95%E7%9A%84%E7%A0%94%E7%A9%B6</id><content type="html" xml:base="/jekyll/update/2018/01/30/%E5%85%B3%E4%BA%8E-%E6%95%B0%E5%88%97-%E7%9A%84%E9%80%9A%E9%A1%B9%E8%A7%A3%E6%B3%95%E7%9A%84%E7%A0%94%E7%A9%B6.html">&lt;blockquote&gt;
  &lt;p&gt;关于“数列”的通项解法的研究 PDF&lt;/p&gt;
&lt;/blockquote&gt;

&lt;iframe src=&quot;/download/mathpaper.pdf&quot; style=&quot;width:718px; height:700px;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;</content><author><name></name></author><category term="数学证明" /><summary type="html">关于“数列”的通项解法的研究 PDF</summary></entry><entry><title type="html">追逐</title><link href="/jekyll/update/2018/01/20/%E8%BF%BD%E9%80%90.html" rel="alternate" type="text/html" title="追逐" /><published>2018-01-20T19:01:00+08:00</published><updated>2018-01-20T19:01:00+08:00</updated><id>/jekyll/update/2018/01/20/%E8%BF%BD%E9%80%90</id><content type="html" xml:base="/jekyll/update/2018/01/20/%E8%BF%BD%E9%80%90.html">&lt;p&gt;&lt;img src=&quot;/image/running-turing.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;青春是追——追随远方，追寻梦想，追悔过失，追求成就，以及追探青春的意义。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　难忘的事情常有发生，有些事情就如青春本身般奇妙——过程中你期望逃脱，尔后又不禁回忆——长跑就是其中之一。这个学期的运动会，我参加了1500米长跑。对于长跑，我对其有一种敬而生畏的情愫。毕竟，那不是一件轻松的事情，而我却又对其充满向往。&lt;br /&gt;
　　但毕竟我并没有任何长跑的实战经验，这又是比赛，无疑是对体能与心理的双重煎熬。随着比赛日期的不断邻近，我更是临阵磨枪。朝夕晨暮中，总能看见我跑完全程后又拼搏冲刺的身影。同时，作为新手，我总是忐忑地向副班长讨教经验。“如何起跑、冲刺”总是被我反复提及，就仿佛我不会跑步了。而答复总是“享受过程即可，适合自己就行”。这反令我陷入困惑。&lt;br /&gt;
　　就这样，我带着茫然与紧张站在了起跑线上。这是一天中最后一个项目，跑道周围占满了加油的人。我的眼里只有跑道只有前方，瞬间我觉得跑道凹陷了下去，平时并不觉得有多大的操场变得无边无际，愈加像罗马斗兽场——正当我在神游时，发令枪响划破了天空，我条件反射地冲出起跑线。先前预想的起跑慢等问题都没有出现。我几乎是在百米冲刺，处在领先位置。&lt;br /&gt;
　　但是，可想而知，这样跑下去是不长久的，我过了第一圈就开始有点体力下降——这只是全程的四分之一。我却顾不得多想，只能继续坚持。这时，陆续有人冲上来，我开始了心理上的煎熬——不忍与内心的挣扎错乱地交织在脑海中。渐渐地，简单的抬腿动作也有如举重般难度。我尽我所能地喘息与抬腿，空气几近凝固。我仿佛跑在无尽的原野间，唯有天空和路，永远没有起点与终点，只有脚下——正如脚下的青春，成功与失败都不值得留恋，也永远不知道终点在何方。&lt;br /&gt;
　　我逐渐意识到，我需要追逐的并不是这里的任何一个人，而是自己的节奏。海明威也曾说过：对于长期重复的工作，应当持之以恒，不乱节奏。所以，何必纠结，只需向前！从而，我迈出的每一步都更坚定。因为我追逐的每一步，实现的每一步都在拉近与终点的距离。&lt;br /&gt;
　　终于，我冲过终点，但追逐不止。&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">青春是追——追随远方，追寻梦想，追悔过失，追求成就，以及追探青春的意义。</summary></entry><entry><title type="html">New Year’s Resolution</title><link href="/jekyll/update/2017/12/31/New-Year's-Resolution.html" rel="alternate" type="text/html" title="New Year's Resolution" /><published>2017-12-31T14:24:00+08:00</published><updated>2017-12-31T14:24:00+08:00</updated><id>/jekyll/update/2017/12/31/New%20Year's%20Resolution</id><content type="html" xml:base="/jekyll/update/2017/12/31/New-Year's-Resolution.html">&lt;blockquote&gt;
  &lt;p&gt;今天是2017年的最后一天，总结一下这一年干过什么，以及明年的目标。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;概述&quot;&gt;概述：&lt;/h3&gt;
&lt;p&gt;2017年的前半年过的并不是怎样顺利，在前半年的博客中都有写到。&lt;br /&gt;
后半年的过的时好时坏，也就不做什么评价吧。&lt;br /&gt;
这一年来明显可以感觉到自己不如以前那么稳重了，与同学也有摩擦，心态在前半年也是完全崩溃。&lt;br /&gt;
2018年决定重塑一下自己的性格。让自己变得沉稳与成熟一点。&lt;/p&gt;
&lt;h3 id=&quot;性格与做事&quot;&gt;性格与做事：&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;尽量少去做一些嘻嘻哈哈的事情&lt;/li&gt;
  &lt;li&gt;提高一下自己的修养，不要沉迷于低级趣味&lt;/li&gt;
  &lt;li&gt;表达之前经过思考&lt;/li&gt;
  &lt;li&gt;做一个负责任的人&lt;/li&gt;
  &lt;li&gt;考虑一下别人的感受&lt;/li&gt;
  &lt;li&gt;大方而不失尊严&lt;/li&gt;
  &lt;li&gt;永远不要拐弯抹角地办事&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;能力与技能&quot;&gt;能力与技能：&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;在数学与语文上能有所进步&lt;/li&gt;
  &lt;li&gt;实现少而精的项目&lt;/li&gt;
  &lt;li&gt;在新的一年里读完20本书&lt;/li&gt;
  &lt;li&gt;看完10部电影（当然要有《Star Wars》)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="年终总结" /><summary type="html">今天是2017年的最后一天，总结一下这一年干过什么，以及明年的目标。</summary></entry></feed>