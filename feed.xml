<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-08-27T16:05:42+08:00</updated><id>/</id><title type="html">BLOG|LEXUGE</title><subtitle>即使被全世界孤立，也要一个人笑得精彩！</subtitle><entry><title type="html">中式监管</title><link href="/jekyll/update/2018/08/27/%E4%B8%AD%E5%BC%8F%E7%9B%91%E7%AE%A1.html" rel="alternate" type="text/html" title="中式监管" /><published>2018-08-27T14:06:00+08:00</published><updated>2018-08-27T14:06:00+08:00</updated><id>/jekyll/update/2018/08/27/%E4%B8%AD%E5%BC%8F%E7%9B%91%E7%AE%A1</id><content type="html" xml:base="/jekyll/update/2018/08/27/%E4%B8%AD%E5%BC%8F%E7%9B%91%E7%AE%A1.html">&lt;blockquote&gt;
  &lt;p&gt;　　一切拥有权力的人都有滥用权力为自己谋求私利的倾向；任何专制的国家的教育目的都是在极力降低国民的心智。  ——孟德斯鸠&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　在枯燥乏味的国际新闻和政治新闻里，能听出很多导向。我对比了央视和的国际报道和美国媒体的报道，发现央视一直奉行“假话不能说，真话可以只讲一半的原则”。如果你认真的看完每天的新闻联播，你会发现——虽然在其中的国际新闻报道中没有参杂半点评述性文字，也没有说半句美国的坏话。但看完就是能让你燃起对美国的怒火。&lt;br /&gt;
　　从课本到新闻，处处体现着习近平对“思想宣传”，“意识形态工作”做出“重要”指示以及相应的结果。每当新闻联播放到这，我就想关电视。因为我从未听说过一个国家的政府对内宣传自己意识形态的。就这一点上来说，也没有什么古已有之。&lt;br /&gt;
　　以互联网来看，全世界排名前二十的网站没有几个是能够在中国访问的。互联网的存在本应该是加速信息融合和自由流通的，但是在中国却被道而弛。硬的科技实力没有提升，但在如何审查互联网，如何封锁网站上的技术倒是炉火纯青，将近30年来，我们已经研发出了大量先进的信息检测和封锁技术，互联网不但没有促进意识自由的，反而倒行逆施。&lt;br /&gt;
　　再来看政治教育，它最令我头疼的是我无法理解这门课存在的意义。一门仅仅背书的课，不引发学生对于现有制度的思考，也不对比别的国家。那这门课既不实用，也不加强辩证思维，更没有文学艺术价值，究竟为何？我能想到的唯一解释就是从小种下意识形态的种子。小学尚早，于是就从初中抓起。&lt;br /&gt;
　　而且书中的内容也让我很是不解，明明人大是独立的立法机关，为什么还要听党指挥？而且非常令人可怕的是，书中处处体现了共产党在司法，立法，行政领域的全权渗透。在这个三权合一的体制下，尽管表面体现了三权分力，但我坚信真正的最高权利在共产党手里，而不是所谓的人大。当其它的同学在老师说完“三权分力”的巧妙，并连声惊叹时。我暗自惋惜——惋惜民主进程的倒退，也惋惜共产党把初中生想得太傻。&lt;br /&gt;
　　记得有一次政治课，老师给我们看一个视频，视频里反复重复“西方的宪政民主不是民主”诸如此类的话语。看完视频后还要发表看法。当时的我只感到了恐惧和可笑，别无其它。我想没有一个人会去相信某人无理由的职责。但是还是有许多人相信了。&lt;br /&gt;
　　如果说只是监管意识形态，实行新时代的文字狱，那也罢了。中国式监管还有一个让人深恶痛绝的特点——多管闲事，放任作恶。&lt;br /&gt;
　　环境质量，食品安全，质量监督……有数不清的漏洞可以等着我们去监管和打击，怎么不去管管这些？我不相信管不了是理由，我们的舆论监管能力如此强大，是我们真的做不到吗？我们对这些所做的只有打压舆论。&lt;br /&gt;
　　现在所反应出的不安恰似朱元璋农民起义成功后的多疑，历史总是惊人的相似。而监管，只是这多疑中小小的一面而已。&lt;br /&gt;
　　可悲&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;宗教上最深的误解——认为坏人没有宗教。    ——尼采&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">　　一切拥有权力的人都有滥用权力为自己谋求私利的倾向；任何专制的国家的教育目的都是在极力降低国民的心智。 ——孟德斯鸠</summary></entry><entry><title type="html">吃掉半条命</title><link href="/jekyll/update/2018/08/27/%E5%90%83%E6%8E%89%E5%8D%8A%E6%9D%A1%E5%91%BD.html" rel="alternate" type="text/html" title="吃掉半条命" /><published>2018-08-27T12:48:00+08:00</published><updated>2018-08-27T12:48:00+08:00</updated><id>/jekyll/update/2018/08/27/%E5%90%83%E6%8E%89%E5%8D%8A%E6%9D%A1%E5%91%BD</id><content type="html" xml:base="/jekyll/update/2018/08/27/%E5%90%83%E6%8E%89%E5%8D%8A%E6%9D%A1%E5%91%BD.html">&lt;blockquote&gt;
  &lt;p&gt;一切混乱如外卖。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　食品安全，是悬在十三亿人头上的达摩克利斯之剑，人民很少注意到它的存在，偶尔看见了，也就抱怨了事。但当真的遇到了呢？&lt;br /&gt;
　　一开始我也是前者，直到本月中旬的一天。那天夜里，已是晚上七点左右，我和爸爸还为吃过晚饭，因懒得外出，于是就决定点次外卖了事。这次点的外卖还据称是某高级酒店旗下的。然而，第二天早上，我就开始全身乏力，腹部绞痛，头晕目眩，全身仿佛是中了邪似的。&lt;br /&gt;
　　那外卖盒十分气派，薄层瓦楞纸制作的一个大箱子里固定着饭盒和几个小本地特色的菜品。尽管不是特别令人作恶，但我还是觉得气味有些令人难言的异样。只可惜我没能留下进一步的证据来追溯究竟是什么具体的问题，但这还是再度勾起了我对外卖的恐惧。&lt;br /&gt;
　　我一向是不倾向于点外卖的，即使点，我只会选择那些吃过的实体店。谁都知道，我是一个会在烈日当空的正午十分，舍近求远地徒步走到一些诸如麦当劳之类的快餐店去，而不是选择外送服务。  &lt;br /&gt;
　　这源于一眼震惊。&lt;br /&gt;
　　我曾在上一个暑假一直吃一家外卖，觉得也挺好吃的。但是偶然在一次散步的途中我发现了一家破烂不堪的店面——窄小的门面，透过满是水渍，积灰的玻璃，你可以隐约看见里面堆放着电饭锅，锅子等厨具和一些原料。地面也满是油渍，透过半掩着的门，你甚至可以嗅到那劣质原料与油烟散发出来的恶臭。而这家店的名字正是我点的外卖，我亲眼见到了新闻中的场景。当时我是震惊的，尽管没有夸张到把“前面几天的饭吐出来”，但我还是不敢想象我前几天吃了什么。&lt;br /&gt;
　　而十分富有戏剧性的是，这家外卖的评分还挺高。&lt;br /&gt;
　　与这样的环境相比，尽管麦当劳之类的并不健康，但他们的后厨是安全的——至少看起来是。而一些小餐馆在资本的趋势和利润的压迫下，很难会在意卫生。正是因此，我再也不会轻易点外卖，外出就餐也会先选择卫生环境而不是味道。&lt;br /&gt;
　　很多人会问，不是有相关部门的监管吗？不是需要相关的执照吗？但是相关的逃脱监管的情况已经被报道了多次，要知道资本：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;如果有10%的利润,它就保证到处被使用；有20%的利润,它就活跃起来；有50%的利润,它就铤而走险；为了100%的利润,它就敢践踏一切人间法律；有300%的利润,它就敢犯任何罪行,甚至绞首的危险。　　　　——马克思&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　外卖，作为食品界的淘宝，你能相信它吗？&lt;br /&gt;
　　食品，健康，尽管我们在各个网络平台疯狂的转发类似“XX是癌细胞的帮凶，吃了它不长命，赶紧转走”这类的文章，也疯狂报道类似问题，但我们为什么就是解决不了这个食品安全问题呢？&lt;br /&gt;
　　食品安全其实并不是孤立存在的，它其实是一个产品质量问题，和我们其它的质量问题，比如毒奶粉、假疫苗、有害物质超标等一样，都存在着这个人人知晓，人人喊打，却没人去打的问题。&lt;br /&gt;
　　这种奇特的现象与中国公众的持续关注不够有直接关系。研究发现，密集关注一般只持续3天，3天后，关注度就大幅下跌。&lt;br /&gt;
　　那为何注意力如此不集中呢？&lt;br /&gt;
　　除了食品安全，还有污染的地下水、土壤、空气，还有各种造假的食品和药品，还有P2P跑路等，导致了人们更多的是关注眼前的发生在自己身上的问题。外因来说，关注公共事件成本很高，轻则被维稳部门警告，重则拘留甚至坐牢。除了这些，被政府控制下的媒体发布的信息都是经过精心筛选出来的舆论导向所用的信息，导致大部分公众对食品安全的来龙去脉和危害性了解不多，没有认识到公众参与的必要性。&lt;br /&gt;
　　早在1816年，美国国父杰弗逊就说过：“如果一个国家期望在国民无知的情况下却拥有自由，那么这种期望无论在历史上，还是未来都绝不会实现。如果我们打算抵御无知和捍卫自由，每位美国人都有责任了解一件公共事务的来龙去脉。”。而何时，我们中国人能意识到这一点呢？&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;　　专制政治的原理就是恐怖。            ——孟德斯鸠&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">一切混乱如外卖。</summary></entry><entry><title type="html">迭代</title><link href="/jekyll/update/2018/08/26/%E8%BF%AD%E4%BB%A3.html" rel="alternate" type="text/html" title="迭代" /><published>2018-08-26T19:24:00+08:00</published><updated>2018-08-26T19:24:00+08:00</updated><id>/jekyll/update/2018/08/26/%E8%BF%AD%E4%BB%A3</id><content type="html" xml:base="/jekyll/update/2018/08/26/%E8%BF%AD%E4%BB%A3.html">&lt;blockquote&gt;
  &lt;p&gt;伴随着“Updating”的字样，昨天，我完成了一个我迭代了两年的项目第一阶段的所有预期。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　两年前的一次课外补习班上，原本就心猿意马的我呆滞地听着老师讲化学方程式的配平——不知超纲多少了。&lt;br /&gt;
　　“观察法，有时方程式中会出现一种化学式比较复杂的物质，我们可通过这个复杂的分子去推其它……但是和其它一样，这也有限制……”，这已经是老师讲述的第四种方法了，而且还有八种。当别的同学都认真听老师讲述各种各样的奇淫异巧时，我却想：这都什么破方法，毫无学习意义，如果一种方法有缺陷，那它就不足以被拿出来误人子弟，甚至不能被称为方法！化学作为一门自然科学，它应当是符合数学的简洁之美的，至少也是部分符合。既然是方程式，我一定能够通过数学以一敌众，研究出没有缺陷的方法！&lt;br /&gt;
　　于是，接下来的所有时间，我就一直在作业纸的背面演算。因为质量守恒，所以我就想能否通过相对原子质量作为突破口来解。于是我列了一堆数字复杂的方程组，却很难下手解决。我托腮冥想怎么化简，却没头绪。翻过来看作业纸上一大堆的方程式，我萌生出了用程序强解的念头。&lt;br /&gt;
　　一路上，我望着车窗外黑漆漆的夜，摇摇晃晃中构思出了简陋的原型。&lt;br /&gt;
　　一回到家，我马上赶工，不到20分钟就写出了第一个版本——手动输入方程组的系数——杂乱无章的相对原子质量，然后使用暴力搜索解决。我兴奋地验证了它的正确性，然后不停查表，缓慢输入，最终用它完成了我的作业。妈妈似懂非懂地观望着，只留下一句“太慢了，还不如自己算来的快。”与我在黑夜中&lt;br /&gt;
　　往后的日子里，我不断对它做了改进。&lt;br /&gt;
　　但是，它存在两个严重缺陷：无法“理解”正常的方程式，而是要手动输入复杂的系数，严重拖慢效率。且使用了耗时费力的暴力搜索来解方程，速度慢。&lt;br /&gt;
　　我在接下来的几个月里发着呆，想摸出方程的规律，让程序能理解它。&lt;br /&gt;
　　断断续续地想着又写着，推倒重来了许多次。终于，当一晚躺在床上苦想时，我理顺了所有的逻辑，一条条清晰明了的规则与定义浮现在我眼前。我知道，过去我认为不可能的任务要实现了！一朵笼罩在头顶上的乌云将就此消逝！&lt;br /&gt;
　　后续的很长时间，我都只是修修补补。&lt;br /&gt;
　　直到去年寒假，我开始关注头上的第二朵阴云，研究如何高效地解决方程组。这是一个数学问题，我开始不断地翻找查阅所有相关的资料，并下了狠功夫理解了相关领域的大多数概念。这相当于我自学了矩阵以及其它部分的线性代数内容。在一次次搜寻的无果与生硬的概念下，我依然坚持着，因为我热爱。研读了近半个月，写出了相对稳定的算法。尽管多次面临失败和不理解的懊恼，但我终究战胜了这些，成就了我的目标。这再次印证了——“我想成，定能就”。&lt;br /&gt;
　　直到今年的五月，我偶遇了一位前辈，他也曾在初中时做着和我一样的项目，并一直到了大学，因此斩获了诸多奖项也得到了青睐。但他因为对国内的失望，最终没有再做下去，决定将他的项目送给一个他认可的人。&lt;br /&gt;
　　而这个人，正是我。&lt;br /&gt;
　　再他过去在此方面撰写的论文和收集的资料中，我重新认识到了不足，并再度燃起了热爱之火。他为我指明方向后，通过暑假中再度的苦学，我填补了过去的空白。前瞻性的架构，优越的算法以及无可比拟的速度，使两年前这一20分钟的项目成为了全开源社区乃至整个互联网中公开同类项目中最为出色的，没有之一！&lt;br /&gt;
　　迭代，是路在走，心不变；是无可比拟的勇气，也是踏实跃进的每一步。这是我迭代着它，更是自我的迭代。&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">伴随着“Updating”的字样，昨天，我完成了一个我迭代了两年的项目第一阶段的所有预期。</summary></entry><entry><title type="html">幕后 第六章</title><link href="/jekyll/update/2018/08/25/%E5%B9%95%E5%90%8E-%E7%AC%AC%E5%85%AD%E7%AB%A0.html" rel="alternate" type="text/html" title="幕后 第六章" /><published>2018-08-25T19:43:00+08:00</published><updated>2018-08-25T19:43:00+08:00</updated><id>/jekyll/update/2018/08/25/%E5%B9%95%E5%90%8E%20%E7%AC%AC%E5%85%AD%E7%AB%A0</id><content type="html" xml:base="/jekyll/update/2018/08/25/%E5%B9%95%E5%90%8E-%E7%AC%AC%E5%85%AD%E7%AB%A0.html">&lt;p&gt;坐标：地球-开拓舰队-主舰船-北约总部 地球纪元2036年秋&lt;br /&gt;
　　马克·瑟里奇坐在休息大厅里的原木色躺椅上，翻看着左手边杂志架上的旧杂志——2030年来就没有纸质杂志了。不过他手上的杂志也确实够旧了，是2008年的，上面写了当时科学家打算使用硅28球来重新定义千克，因为硅28是同位素中最稳定的一种……&lt;/p&gt;

&lt;p&gt;　　这时，刘辉跑了进来，把一大叠的打印资料抛在他面前的茶几上。
　　“小心点，哥们！这是撒切尔夫人用过的私人办公桌改制而成的，老古董了！”说着，马克把脚搁在茶几上。&lt;br /&gt;
　　“这是国际度量衡局（BIPM）5分钟前传来的”，刘辉没注意马克，说“当时2008年制造的硅28球现在质量又减轻了，这次我们对硅球做了仔细的检测，发现它的表面出现了非常细微的裂纹。”，刘辉指着文件上的极其模糊的图片说：“并且，我们在其周围发现了一下非常细微的硅原子”。&lt;br /&gt;
　　“并且，我们对周围的一些常见物体也作了检查，发现，都出现了裂纹。且定期检查发现，呈几何级数增长态势。所以，……“&lt;br /&gt;
　　”……我们周围的常量在发生改变，而这个量就是：”，马克打断了刘辉。&lt;br /&gt;
　　“圆周率”，两人异口同声道。&lt;br /&gt;
　　“与其说圆周率被改变了，倒不如说“圆”这个形状的定义被改变了。圆不再圆之后，因为圆是“平衡”的，所有原来圆形的分子都想恢复到原先的圆形，但是，这样一来就会造成体积的损耗，于是，物体缩小，不稳定之类的问题都会产生。”&lt;br /&gt;
　　“所以说这样一来，再强大的材料都有被攻破的可能。”&lt;br /&gt;
　　“这还不是最糟糕的，马克，更可怕的是，我们的地球是圆的。”&lt;/p&gt;

&lt;p&gt;坐标：GN-z11星系-GNR-《宇宙》与S-M系统控制中心 时间：GN纪元后世代26943年&lt;br /&gt;
　　各团队以及设计团队和元首再次汇聚在一起。&lt;br /&gt;
　　安全团队直截了当道：“我们已经检测到了地球发生了大规模的变化，在近地轨道有大量的舰队”。说着，指着报告上的舰队的图片。&lt;br /&gt;
　　“诸位，所以，我们决定通过修改物理参数来进行内在的，毁灭式的打击。”&lt;br /&gt;
　　“通过改变我们目前定义的原子等的形状，就可以使地球上所有的材料乃至地球全部毁灭……”。还未等安全团队讲完，设计团队习惯性的就打断了，理由依旧是不可妄动，因为这个系统有非常重大的意义。&lt;br /&gt;
　　众人征求元首的意见。元首表示，可以进行小规模的修改，众人就不再多语。&lt;/p&gt;

&lt;p&gt;(未完待续)&lt;/p&gt;</content><author><name></name></author><category term="幕后系列" /><category term="随笔" /><summary type="html">坐标：地球-开拓舰队-主舰船-北约总部 地球纪元2036年秋 　　马克·瑟里奇坐在休息大厅里的原木色躺椅上，翻看着左手边杂志架上的旧杂志——2030年来就没有纸质杂志了。不过他手上的杂志也确实够旧了，是2008年的，上面写了当时科学家打算使用硅28球来重新定义千克，因为硅28是同位素中最稳定的一种……</summary></entry><entry><title type="html">孤独的造梦者</title><link href="/jekyll/update/2018/08/25/%E5%AD%A4%E7%8B%AC%E7%9A%84%E9%80%A0%E6%A2%A6%E8%80%85.html" rel="alternate" type="text/html" title="孤独的造梦者" /><published>2018-08-25T16:13:00+08:00</published><updated>2018-08-25T16:13:00+08:00</updated><id>/jekyll/update/2018/08/25/%E5%AD%A4%E7%8B%AC%E7%9A%84%E9%80%A0%E6%A2%A6%E8%80%85</id><content type="html" xml:base="/jekyll/update/2018/08/25/%E5%AD%A4%E7%8B%AC%E7%9A%84%E9%80%A0%E6%A2%A6%E8%80%85.html">&lt;blockquote&gt;
  &lt;p&gt;“黑黑的窗口里面输入几个字，再跳出来几个字，这有什么用啊。”，“切，这种黑白的垃圾玩意一看就知道没有技术含量。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　有一次，妈妈说：“你在做的有什么用，别人认可吗？你以为你会注册两下很厉害啊！？”。如别人将你的成果践踏后又吐上几口唾沫，这一句话深深的扎透了我的心，让我生起了无名业火，我想：她根本不理解我在做什么，我难道在注册会员吗？。尔后，怒火渐渐转为了伤心，当你的母亲也带着轻视，蔑视，鄙视的态度来伤害你时，你会怎么想？当那个我最亲的人，突然恶言相逼时，我感到了伤心和无助；当我的付出没人认可甚至别人随意践踏时，我感到伤心和无助。而我又恨那些被别人所承认，却实际没有真本事的人。我憎恨他们在我和别人面前招摇过市，我却无从出口，只留下别人对我的嘲讽与我在每个黑暗的角落晃晃度日。&lt;br /&gt;
　　带着旁人的劝说，嘲笑，鄙夷，不解，以及种种的种种，不知不觉中，我在这键盘上已经敲了五年。&lt;br /&gt;
　　去年的三月，我阴差阳错地找到了一项“创新”大赛，我为当时的一个项目编写了非常详细的文档并配以了视频解说，并抱着满怀的获奖的期望——据称这个项目几乎没人参加。十分戏剧性的，我什么都没有收获。虽然，这件事本身并没有给我带来多大的打击，但是却勾起了心头的痛处——从未被承认。尽管浓厚的兴趣和对知识的强烈渴求支撑着我五年来不断地学习，研究，更新我的项目。但是，每个人都渴求被别人承认。承认是什么，比赛获奖吗？证书吗？如何获取别人的认可？这些问题曾困扰我多时。&lt;br /&gt;
　　《模仿游戏》里图灵对那些认为他在做无用功的人说过：“My machine will work!”。他带着颤抖的声音说下这句话，话中包含愤怒，与伤心，悔恨，正如我所经历的那样。不论别人如何对我，怎么看我。我都默声念下这句话，然后不作理睬，因为惟沉默是最高蔑视。&lt;br /&gt;
　　尽管认可是昂贵的，但孤独却更致命。&lt;br /&gt;
　　我曾费劲心思想找一个与我从事相同领域研究的组织，或人来面对面的交流，一起合作，但都无果。那些拥有真正黑客文化的组织只存在于北上广等发达地区，至于在我的居住地，根本不存在。我身边的人也觉得我不知所云。你能想象你没人和你打球，只是终日练习投篮吗？我就是如此，或许更糟。&lt;br /&gt;
　　当你被周围的人当作完完全全另类时，无法融入，甚至被别人施以语言暴力，就像在打一款没有人玩的单机游戏，却又受人唾弃。这时你会怎么想？我想：Sometimes it is the people who no one imagines anything of who do the things that no one can imagine.（有时，恰是被世人遗弃之人，成无人能就之事）&lt;br /&gt;
　　我为我的兴趣付出了许多别人毫无概念的事，我学习了矩阵、线性代数、面向对象、函数式编程等的相关概念，并学习了多编程范式的语言（这门语言的入门难度十分之高，这是公认的），实现并优化了抽象语法树和高斯消元。尽管那些自以为在“学”算法的人时刻鄙视着我，那又如何？因为五年来，只要是我想要实现的目标，无论中间有多大的知识跨度，最终我都能拿下。只要是我想实现的，他们都实现了。&lt;br /&gt;
　　正是因此，我快速地成长着，每一天都比过去优秀。伴随着我正确的学习态度与强大的学习能力，My machine will work!&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">“黑黑的窗口里面输入几个字，再跳出来几个字，这有什么用啊。”，“切，这种黑白的垃圾玩意一看就知道没有技术含量。”</summary></entry><entry><title type="html">中国的野心，美国的反击——我看贸易战何去何从</title><link href="/jekyll/update/2018/08/11/%E4%B8%AD%E5%9B%BD%E7%9A%84%E9%87%8E%E5%BF%83-%E7%BE%8E%E5%9B%BD%E7%9A%84%E5%8F%8D%E5%87%BB-%E6%88%91%E7%9C%8B%E8%B4%B8%E6%98%93%E6%88%98%E4%BD%95%E5%8E%BB%E4%BD%95%E4%BB%8E.html" rel="alternate" type="text/html" title="中国的野心，美国的反击——我看贸易战何去何从" /><published>2018-08-11T13:03:00+08:00</published><updated>2018-08-11T13:03:00+08:00</updated><id>/jekyll/update/2018/08/11/%E4%B8%AD%E5%9B%BD%E7%9A%84%E9%87%8E%E5%BF%83,%E7%BE%8E%E5%9B%BD%E7%9A%84%E5%8F%8D%E5%87%BB%E2%80%94%E2%80%94%E6%88%91%E7%9C%8B%E8%B4%B8%E6%98%93%E6%88%98%E4%BD%95%E5%8E%BB%E4%BD%95%E4%BB%8E</id><content type="html" xml:base="/jekyll/update/2018/08/11/%E4%B8%AD%E5%9B%BD%E7%9A%84%E9%87%8E%E5%BF%83-%E7%BE%8E%E5%9B%BD%E7%9A%84%E5%8F%8D%E5%87%BB-%E6%88%91%E7%9C%8B%E8%B4%B8%E6%98%93%E6%88%98%E4%BD%95%E5%8E%BB%E4%BD%95%E4%BB%8E.html">&lt;blockquote&gt;
  &lt;p&gt;3月22日特朗普签署备忘录以来，关于挑起贸易战的动机的猜测众说纷纭——美国不甘心被超越？能源大国梦？在我看来这些都不是根本原因。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;本文仅代表个人观点，我个人不支持美国或中国任何一方的发展&lt;/strong&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;　　“&lt;em&gt;公然恶意破坏WTO规则，又去WTO告状，美国的混乱逻辑令人费解&lt;/em&gt;”，“&lt;em&gt;7月6日，中国在世贸组织就美国对华301调查项下正式实施的征 …&lt;/em&gt;”，“&lt;em&gt;世界贸易组织（WTO）异常繁忙。除了举行3场贸易救济相关的会议外，还召开了WTO争端解决机构（DSB）例会。&lt;/em&gt;”。&lt;br /&gt;
　　几个月来，在《人民日报》与CCTV铺天盖地的头版头条中，许多人无数次“被听说”了这个世贸组织（WTO）。实际上，贸易战的导火索深埋在18年前。&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;中国的野心&quot;&gt;中国的野心&lt;/h2&gt;
&lt;p&gt;　　时光退回到2000年5月9日，华盛顿特区的约翰霍普金斯大学。当克林顿总统对美国人民宣布中国加入世贸组织时，说道：“如果你相信对中国人民而言，未来更加的自由与开放是件好事的话，你便会支持这项协定；如果你相信这会让美国人民更加繁荣幸福，那你当然也会支持这项协定；如果你相信未来亚洲和世界会更加和平、安全，那你更应该要支持这项协定。这是正确且必要的事情，是历史的机遇和美国一个影响世界的深远的责任……”&lt;br /&gt;
　　我们加入世贸组织之后经济得到了飞速的增长，这是有目共睹的。我们的出口额度非常惊人，是全球第一，比美国高出约37%，但进口额比美国少26%，顺差可谓巨大。&lt;br /&gt;
　　这是为什么呢？不知你有没有发现，你手中的货币一直在时缓时急地贬值，或者说物价在时缓时急地上涨。实际上，政府一直在实行固定汇率制度，并且将对美元的汇率调整在一个较低的水平（0.15左右）。本币贬值有什么作用呢？扩大出口。在正常的开放经济情况下，本币一旦贬值，外国就有更多对本国产品的购买力，就能买更多的本国产品，此时本国出口上升。另一方面，由于本国货币购买力下降，需求减少（内需减少），所以为了平衡供给，需要扩大出口（增加外需）。当时，温家宝直接承认了这一做法的存在。当然，近期美方声称我们调整汇率来扩大出口时，外交部并不承认，并表示：“人民币汇率主要由市场供需决定，有贬有升，双向浮动。目前中国经济基本面持续向好，为人民币汇率保持基本稳定提供了有力支撑。此外，中方无意通过货币竞争性贬值刺激出口，这是中方的一贯立场。”&lt;br /&gt;
　　其次，我们的政府一直在进行出口补贴政策。鼓励你以低廉的价格出口，并通过补贴的方式来弥补你的损失。因为价格低廉，自然会吸引国外资本，也就扩大了出口。出口补贴很重要的实施原因是为保持经济增长，调节产能过剩
。通过增加国民收入核算恒等式（&lt;script type=&quot;math/tex&quot;&gt;Y=C+I+G+NX&lt;/script&gt;）中的净出口&lt;script type=&quot;math/tex&quot;&gt;NX&lt;/script&gt;（出口补贴刺激了净出口，固定汇率也起到了一定作用）来最终实现GDP的增长。&lt;br /&gt;
　　再者，由于政府对市场的干预过多，中国经济存在很严重的产能过剩（比如之前的钢铁产业），促进出口，缓解产能过剩，也能帮助企业摆脱亏损阴影。可以说是政府用财政帮助国内企业生存下来，要是大批民营企业倒了，GDP怎么办，就业率怎么办，社会矛盾怎么办？&lt;br /&gt;
　　所以，通过上述的两个措施，我们实现GDP的飞速增长。但对于国内自身的危害也是巨大的，物价飞涨，财产贬值等等。尽管城市在发展，但是我们却越来越消受不起。虽然《人民日报》之类的并没有报道出来，但是这些影响已经不必报道了。可以说，我们20年来GDP和经济的崛起是“揠苗助长”式的，畸形的。在这光鲜的数据背后，百姓也承受着压力，环境也被破坏，可谓是杀敌也自损了。&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;美国的心病&quot;&gt;美国的心病&lt;/h2&gt;
&lt;p&gt;　　再来看美国，我们加入WTO以来，大量的出口补贴商品销往美国。因为其价格低廉，很快就开始革美国产品的命。大量的美国制造业、工厂破产。随后，大量企业的生产部门开始搬迁（通用，波音，苹果等等）。中国制造使得这些美国企业获得高额利润，而普通的人民却面临失业，无所依靠。&lt;br /&gt;
　　如果中国产品物美价廉，或许还好一些，但是销往国外的产品尽管比国内的品质好，还是无法通过发达国家的标准。中国的食品，玩具，海鲜等在美国爆出安全事件，FDA也无能为力。&lt;br /&gt;
　　现在美国大量的产品全是中国制造（日本也是），在美国几乎没有美国鞋。可以见得，中国制造已经对美国产生了多大的渗透。&lt;br /&gt;
　　如果只是把生产车间搬迁到中国，那或许对美国还能忍受，因为他们还有技术制高点。但是要知道生产和设计是无法分离的。很快，波音、通用、苹果等都在中国或多或少的设立了研发部门。这让美国很担心他们的技术是否会被“如法炮制”。&lt;br /&gt;
　　大型的项目或许没有受害，但是一些不甚注意的企业就曾吃过苦头。一家美国企业曾与中国代工生产方面合作，一切很正常，但是几年后的一天，突然代工厂关闭了，并且后续他们在市场发现了和自己一模一样的中国制造。很快，因为价格，这家公司破产了。&lt;br /&gt;
　　或许知识产权的侵犯被美国政府有夸大，但作为中国人，我想我们不得不承认在盗版与版权的淡薄上，我们做的是有多嚣张。对待外国的专利，地方政府真的是“随它去”的态度。&lt;br /&gt;
　　也正是因此，美国让台积电生产芯片，关键的光刻机技术也只给台湾。因此我们在芯片制造方面是远远落后的。&lt;br /&gt;
　　这一切与克林顿在18年前的美好愿景是完全相背的，是美国人不想看到的。正是如此，美国及其希望寻求改变，想重振它的制造业，工业。做到美国制造。&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;美国的反击&quot;&gt;美国的反击&lt;/h2&gt;
&lt;p&gt;　　奥巴马时期，美国曾想通过出口来弥补贸易赤字，但是却失败了。实际上，美国的出口增速也是较大的。所以经济学家就认为应该进行内部贸易，进行一部分的贸易保护主义来逼迫企业与资本家的生产内迁。来解决困扰了美国人多年的就业问题，经济问题等。&lt;br /&gt;
　　而这正是特朗普所信仰的。&lt;br /&gt;
　　因此改变开始了。美国要重新收回对自己产业的掌控，全面的掌控。&lt;br /&gt;
　　甚至很多看似无关的问题也是美国对中国的反击。比如，退出伊核协定。甚至美国认为中国对巴基斯坦和伊朗等提供了核武上的支持，这项看似不合情理的退出，实质是对中国的变相制裁，不论中国有没有提供核武，都会对中国在伊朗的投资产生波动。可以瞥见，美国真的是要对中国下狠手。&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;未来何去何从&quot;&gt;未来何去何从&lt;/h2&gt;
&lt;p&gt;　　我们很可能变成过去的美国。&lt;br /&gt;
　　随着美国一步步技术的收紧和制裁，除非我们能真正在技术上超越他们，并拥有完善的监管与制造体系。那我们很可能在未来的长期失去我们过去20年积累的经济优势。&lt;br /&gt;
　　但是，最近的疫苗事件以及长期以来一些科研动向让我对此不大看好。我们始终在监管上无法形成美国FDA那样的完善体系，质量的缺失在长期以来必定会带来报应，而唯利是图以及疯狂盗版的中国式小聪明或许也在未来走不长久。而信息技术领域各黑心科研人员图快而抄袭开源软件却又堂而皇之地称为“自主知识产权”，还骗取大量经费，这种真是劣根性的做法如果不根除，我们必定一事无成。未来的中国人又有何脸面称自己是“龙的传人”？&lt;br /&gt;
　　尽管经济或许会崩塌，但是这会告诫我们：世界不是傻子，揠苗助长式的崛起必定建立在别国的受伤之上，最终只会自食其果。做任何事都得有真能力，健康发展才可长久。&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><category term="经济" /><category term="政治" /><summary type="html">3月22日特朗普签署备忘录以来，关于挑起贸易战的动机的猜测众说纷纭——美国不甘心被超越？能源大国梦？在我看来这些都不是根本原因。</summary></entry><entry><title type="html">关于中医和传统文化？</title><link href="/jekyll/update/2018/08/09/%E5%85%B3%E4%BA%8E%E4%B8%AD%E5%8C%BB%E5%92%8C%E4%BC%A0%E7%BB%9F%E6%96%87%E5%8C%96.html" rel="alternate" type="text/html" title="关于中医和传统文化？" /><published>2018-08-09T10:15:00+08:00</published><updated>2018-08-09T10:15:00+08:00</updated><id>/jekyll/update/2018/08/09/%E5%85%B3%E4%BA%8E%E4%B8%AD%E5%8C%BB%E5%92%8C%E4%BC%A0%E7%BB%9F%E6%96%87%E5%8C%96%3F</id><content type="html" xml:base="/jekyll/update/2018/08/09/%E5%85%B3%E4%BA%8E%E4%B8%AD%E5%8C%BB%E5%92%8C%E4%BC%A0%E7%BB%9F%E6%96%87%E5%8C%96.html">&lt;blockquote&gt;
  &lt;p&gt;最近毫无征兆地突然发烧，而这件整件事情却引发了我对中医和传统文化的思考。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;　　发烧前的那晚，正好是立秋。作为传统观念上秋天的开端，妈妈认为秋天到了。而『人烟寒橘柚,秋色老梧桐』，秋天到了天气转凉。于是妈妈说今晚就别开空调了。&lt;br /&gt;
　　我抱怨了一下，说立不立秋温度不降反升，怎么就不让人开空调了。也没多说什么，就照做了。&lt;br /&gt;
　　晚上，在电风扇的轰鸣中，我昏昏睡去。&lt;br /&gt;
　　第二天一早，才清晨5:10左右，我就突然被惊醒，只感觉没睡好，全身浑浑噩噩。我摇摇晃晃地走到妈妈那，抱怨了一下没睡好。但接下来我就逐渐感到浑身恶心，头痛头晕的症状接踵而至。尽管如此，我还是没有太在意，只觉是没睡好带来的后遗症罢了。&lt;br /&gt;
　　我胡乱吃了早饭，毫无食欲。&lt;br /&gt;
　　紧接着我就开始了忙碌的一天。早晨第一节课，我坐立不安。一会头趴在桌上，觉得脖子不舒服；正常得抬着头，又觉得头重得无法支撑。&lt;br /&gt;
　　在焦虑与煎熬中，我终于熬过了这一节课。宛如一具行尸走肉般上了车。我躺在车上闭着眼睛，祈求能摆脱这不在状态的感觉。&lt;br /&gt;
　　中午，症状更加严重了，开始全身乏力，整个人就像一团棉花。我逐渐开始意识到这可能不是简单的睡眠缺失。妈妈猜测是不是中暑而导致的，于是拿了勺子给我刮痧。刮了一会，或许是因为勺子来回挤压骨头的感觉疼痛得令我难以忍受，我就没有继续让妈妈刮下去。妈妈抱怨说她还没用力呢，没出痧。&lt;br /&gt;
　　或许是没刮完全，我的症状并没有感到丝毫缓解，我继续忍受着病痛的煎熬。而妈妈表示她要继续帮我刮痧，但却被我严辞拒绝了。&lt;br /&gt;
　　下午，妈妈给我泡了个热水澡，然后让我继续在房间里别开空调，扇扇电扇，休息一下，出出汗。于是我又睡去。迷迷糊糊地醒来以后，症状还是没能缓解，妈妈测了体温，上升了。&lt;br /&gt;
　　我实在无法忍受，提出要去医院。经过诊断，病因是免疫力下降，也只是配了些增强免疫力和退烧的药物。&lt;br /&gt;
　　后续的事情就不再赘述了。&lt;br /&gt;
　　&lt;br /&gt;
　　首先，我认为妈妈在认为秋天到了，就不应该再开空调的理念是正确的。但是她错误理解了『秋天』和『立秋』，这两个看起来相似的概念。立秋是古人所指的秋天开始，而按照现代气候学划分季节的标准，下半年日平均气温稳定降至22℃以下为秋季的开始。因此，除常年皆冬和春秋相连无夏区外，我国很少有在 “立秋”就进入秋季的地区。秋来最早的黑龙江和新疆北部地区也要到8月中旬入秋，而北京更是要在9月中旬入秋。&lt;br /&gt;
　　而立秋的那天，温度高达36℃，这个气温甚至比前几天温度还要高出少许，却在这个时候认为秋天到了，实在是从哪方面都说不通的。&lt;br /&gt;
　　二十四节气在现代还能产生的意义就是描述地球的日照长短变化，即便如此，那也是按照现代天文台测量才能得出的结论。所以说，古人的二十四节气是有误差的，而且还很大。从汉代开始，节气的计算方法就被更改了上百次，具体的结果自然也在改变。所以准确度可想而知。&lt;br /&gt;
　　因此，在此奉劝一句，传统文化固然有它的价值所在，但是如果想具体运用，那还是要做到『知其然，知其所以然』才行。&lt;br /&gt;
　　再来说说中医。首先我个人不赞同『西医』和『中医』的划分，这是不存在的。我认为医学只有一个，而中医应该是现代医学发展的历史进程中的一环。如果非要说有西医，那我认为&lt;a href=&quot;https://en.wikipedia.org/wiki/Hippocrates&quot;&gt;希波克拉底&lt;/a&gt;所创立的体液学说这类的才能被称为西医。当时希波克拉底作为古希腊医生也能治人，但你看了他的体液学说你敢让他治吗？我认为大多数都不敢吧。尽管他的学说很是荒唐，但是他还是奠定了医学发展基础。西方的医生就很崇拜他，崇拜他的历史贡献，我认为这一点上，我们应该向他们看齐。崇拜历史意义而不是盲目崇拜古人的学说的具体方法。
　　中医确实有一定的作用效果，这不可否认。但是我认为更多它只能更多的作为一种传统文化来保留。现代医学确实有他的不足，但我们应该遵从现代医学的论证规则，把有价值的中医理论（或者所谓的偏方）内化到现代医学中去。&lt;br /&gt;
　　所以说，我认为『中医』和『现代医学』不是并列的，这种错误的观念应当废除。&lt;br /&gt;
　　再来举个具体例子，比如上文提到的刮痧。根据已知的结论，皮肤表面的痧是毛细血管破裂引起的，而毛细血管破裂就会导致血细胞（红细胞，白细胞）等跑到组织等其它地方，而如果严重的话，就会引起溶血，肾小管阻塞而导致的肾衰竭等症状。这是非常危险的。不过刮痧确实在某些特定的症状中有已经论证的效果，比如治疗颈部肌肉酸痛。但是原理与按摩等是相似的（参见&lt;em&gt;Effectiveness of Traditional Chinese “Gua Sha” Therapy in Patients with Chronic Neck Pain: A Randomized Controlled Trial - Pain Medicine, Volume 12, Issue 3, 1 March 2011, Pages 362–369,&lt;/em&gt;）。&lt;br /&gt;
　　并且就我个人而言，在我中暑时，无论是自揪还是别人刮，我都没有感受到别人所说的那么好的效果。&lt;br /&gt;
　　至于刮完后神清气爽，那是因为在疼痛之后，人体分泌内啡肽而使大脑感受到快感，和具体疗效并无直接关联。&lt;br /&gt;
　　再说一些人打着“生命科学”的旗号搞现代中西医结合。这完全是无稽之谈，把生命科学和中医的经验学手法结合在一起，在我看来比中医馆还无耻。因为这使得尚有一点科学意识的心怀焦虑者也会上当受骗，比如我妈。
　　中医馆等之所以如此盛行，是因为顺应了人们生活水平提高导致的对健康的担忧以及人们对于传统以及神秘的事物过度地崇拜。中医现在打着传统文化的幌子，以各种方式商业化出现来谋财害命。正所谓『赚钱的不治病，给钱的图安慰』，我赞同『废医验药』的方式——知“部分中医疗法产生效果”的所以然，并归并到现代医学中。然后把中医作为一种历史文化看待就行了。&lt;br /&gt;
　　&lt;strong&gt;废医验药！&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">最近毫无征兆地突然发烧，而这件整件事情却引发了我对中医和传统文化的思考。</summary></entry><entry><title type="html">lib_blaster优化笔记</title><link href="/jekyll/update/2018/07/24/lib_blaster%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0.html" rel="alternate" type="text/html" title="lib_blaster优化笔记" /><published>2018-07-24T16:10:00+08:00</published><updated>2018-07-24T16:10:00+08:00</updated><id>/jekyll/update/2018/07/24/lib_blaster%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0</id><content type="html" xml:base="/jekyll/update/2018/07/24/lib_blaster%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0.html">&lt;p&gt;&lt;img src=&quot;/image/rust-logo.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;lib_blaster 是一个我用 Rust 编写的 SYN flood 概念验证（Proof of Concept） 的库。为追求极致的性能，我对它作了大量优化，达到了一定的效果。这是我对优化过程的记录。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;1-瓶颈分析与优化&quot;&gt;1. 瓶颈分析与优化&lt;/h2&gt;
&lt;p&gt;为了能够做好优化，首先得找出性能瓶颈所在。而其中一步就是回顾和进一步理解自己写的代码究竟在做什么。&lt;br /&gt;
（优化前的&lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt;目录↓）&lt;br /&gt;
&lt;img src=&quot;/image/optimization-log/v0.1.2.png&quot; alt=&quot;&quot; /&gt;
整个 lib 使用了&lt;a href=&quot;https://github.com/libpnet/libpnet&quot;&gt;libpnet&lt;/a&gt; (A cross-platform, low level network framework)作为网络部分的框架。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;builder.rs&lt;/code&gt; 实现了IP header和TCP header的构建&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sender.rs&lt;/code&gt; 包括了网络层（Network Layer）的Transport Channel的建立以及包的发送&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;collector.rs&lt;/code&gt; 包括了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt;来分装需要构建的包的信息&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tools.ts&lt;/code&gt; 包括了随机IP生成函数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为分析代码的性能瓶颈所在，我使用了火焰图（flamegraph）。使用了一个叫做&lt;a href=&quot;https://github.com/TyOverby/flame&quot;&gt;flame&lt;/a&gt;的Rust火焰图生成库。&lt;br /&gt;
以下是我第一次生成的结果：
&lt;img src=&quot;/image/optimization-log/flame1.png&quot; alt=&quot;&quot; /&gt;
可以看到 Create Collector的耗时非常的夸张。在这个操作中，我调用了&lt;code class=&quot;highlighter-rouge&quot;&gt;random::&amp;lt;u16&amp;gt;()&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;rand_ipv4()&lt;/code&gt;这两个函数。&lt;br /&gt;
其中，&lt;code class=&quot;highlighter-rouge&quot;&gt;rand_ipv4()&lt;/code&gt;的定义如下（&lt;code class=&quot;highlighter-rouge&quot;&gt;v0.1.2&lt;/code&gt;时）:&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rand_ipv4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;Ipv4Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;非常夸张地使用了4个&lt;code class=&quot;highlighter-rouge&quot;&gt;random&amp;lt;T&amp;gt;()&lt;/code&gt;。通过查看&lt;a href=&quot;https://docs.rs/crate/rand/&quot;&gt;rand的文档&lt;/a&gt;，可以看到&lt;code class=&quot;highlighter-rouge&quot;&gt;random&amp;lt;T&amp;gt;()&lt;/code&gt;的定义：&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Standard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Distribution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;thread_rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;而&lt;code class=&quot;highlighter-rouge&quot;&gt;thread_rng()&lt;/code&gt;所返回的&lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadRng&lt;/code&gt;（&lt;code class=&quot;highlighter-rouge&quot;&gt;rand::rngs::ThreadRng&lt;/code&gt;）按照文档所述：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Like StdRng, ThreadRng is a cryptographically secure PRNG.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;显然，因为是加密安全（cryptographically secure）的，所需的耗时也会相应增多。但是我在这里并不需要加密安全的随机数生成算法，我的目的是IP欺骗（IP spoofing），即使端口号和IP地址是递减的也没关系，只要不同即可。&lt;br /&gt;
这样的耗时显然是没有意义的，通过查阅资料发现，一种非常快的非加密安全的伪随机数生成（Pseudorandom number generator）算法——&lt;a href=&quot;https://en.wikipedia.org/wiki/Xorshift&quot;&gt;Xorshift算法&lt;/a&gt;。关于速度的介绍：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Xorshift generators are among the fastest non-cryptographically-secure random number generators, requiring very small code and state.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为&lt;code class=&quot;highlighter-rouge&quot;&gt;rand&lt;/code&gt;库已经提供了Xorshift算法的实现，所以我只需要调用即可。据此，我实现了一个&lt;code class=&quot;highlighter-rouge&quot;&gt;fast_random&amp;lt;T&amp;gt;()&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fast_random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PartialOrd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SampleUniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Standard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Distribution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;XorShiftRng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;EntropyRng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;相应的，我用&lt;code class=&quot;highlighter-rouge&quot;&gt;fast_random&amp;lt;T&amp;gt;()&lt;/code&gt;重写了&lt;code class=&quot;highlighter-rouge&quot;&gt;rand_ipv4()&lt;/code&gt;。此时，重写生成的火焰图如下：&lt;br /&gt;
&lt;img src=&quot;/image/optimization-log/flame2.png&quot; alt=&quot;&quot; /&gt;
可以看到，&lt;code class=&quot;highlighter-rouge&quot;&gt;build_pkt()&lt;/code&gt;方法（method）的耗时非常的长。当时的代码中，&lt;code class=&quot;highlighter-rouge&quot;&gt;send_syn()&lt;/code&gt;的定义如下：&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;send_syn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;transport_channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Layer3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Tcp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build_pkt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tx&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.send_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IpAddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;V4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;.dst_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()),&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;每一次发包，都会用&lt;code class=&quot;highlighter-rouge&quot;&gt;collector&lt;/code&gt;提供的信息重新构建一个封包，但是绝大多是的内容是重复的，这就非常的多余。&lt;br /&gt;
因此，我把&lt;code class=&quot;highlighter-rouge&quot;&gt;build_pkt()&lt;/code&gt;写成了一个面向对象（Object-Oriented）的&lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt;。暴露了几个修改需要字段的方法。如下：&lt;/p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/// The mutable packet container&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pkt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ipv4_pkt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MutableIpv4Packet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tcp_pkt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MutableTcpPacket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;src_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dst_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;impl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pkt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/// Create a `Pkt` by providing `Collector`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// Convert `Pkt` to a immutable `TcpPacket`&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_one_packet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TcpPacket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// set the source IP address of IP header&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_src_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// set the source port of TCP header&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_src_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src_port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;u16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/// Get the destination IP address&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pub&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_dst_ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ipv4Addr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;do_checksum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;进一步进行火焰图分析，我发现&lt;code class=&quot;highlighter-rouge&quot;&gt;send_syn&lt;/code&gt;中一直再重复创建TransportChannel对。这非常的多余且耗时，所以我也将它OO化（面向对象化）了。&lt;br /&gt;
&lt;strong&gt;至此，优化算是部分完成了。&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-benchmark&quot;&gt;2. Benchmark!&lt;/h2&gt;
&lt;p&gt;优化完毕后，就应该进行Benchmark了。&lt;br /&gt;
关于Benchmark，我这次走了不少弯路。从一开始单纯的使用&lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;来测试时间到后面的使用&lt;a href=&quot;https://github.com/japaric/criterion.rs&quot;&gt;Criterion库&lt;/a&gt;以及&lt;a href=&quot;https://en.wikipedia.org/wiki/Mock_object&quot;&gt;Mock object&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;一开始，我使用了非常简单粗暴的&lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;来测试，测试出来的数据也都不怎么稳定，没有什么意义。&lt;br /&gt;
后来，通过各Rustaceans的帮助，我发现了Criterion库，一个Benchmark用的库。配合&lt;code class=&quot;highlighter-rouge&quot;&gt;cargo bench&lt;/code&gt;，来进行Benchmark。&lt;br /&gt;
但是，测试出来的数据优化前后变化并不明显且波动较大。&lt;br /&gt;
经过&lt;code class=&quot;highlighter-rouge&quot;&gt;Criterion&lt;/code&gt;所做线性回归（Linear regression）得出的&lt;script type=&quot;math/tex&quot;&gt;R^{2}&lt;/script&gt;（&lt;a href=&quot;https://en.wikipedia.org/wiki/Coefficient_of_determination&quot;&gt;决定系数，Coefficient of determination&lt;/a&gt;），大约为0.06左右，非常的小。&lt;br /&gt;
其中，Wikipedia上决定系数的意义：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;In statistics, the coefficient of determination, denoted R2 or r2 and pronounced “R squared”, is the proportion of the variance in the dependent variable that is predictable from the independent variable(s).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这意味着，&lt;script type=&quot;math/tex&quot;&gt;R^{2}&lt;/script&gt;越小，相关方程的参考价值也就越低，反之，&lt;script type=&quot;math/tex&quot;&gt;R^{2}&lt;/script&gt;越接近于&lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt;，相关方程的参考价值也就越大。另外根据Criterion文档上所写的：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;If the R^2 value is low, this may indicate the benchmark isn’t doing the same amount of work on each iteration. You may wish to examine the plot output and consider improving the consistency of your benchmark routine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可以说每一个Iteration里，耗时十分不一致（consist）。那这是什么导致的呢？&lt;br /&gt;
整个库其实可以分为两个工作：拼包（build packet）和发包（send packet）。我认为这种耗时的不稳定和测试数据动辄30%的波动基本上都应该是由发包造成的。&lt;br /&gt;
那如何避免这个不确定因素呢？&lt;br /&gt;
这里就要用到一个单元测试（Unit test）中常用的方法——mock。mock测试的定义就不在这里详细展开了。在我的这个情况中，应该mock发包这个步骤。因为不需要mock对象（Mock object）做出返回，所以这里的mock非常简单——直接不发包就可以了!&lt;br /&gt;
为什么不发包呢？因为实际上网络的不稳定性是非常大的。而且发包往往是做内核调用的，因此，这里对发包行为做Benchmark反而是意义不大的。真正需要Benchmark的应该是我们自己写的代码，也就是拼包部分。&lt;br /&gt;
mock发包后，我们得到了测试数据：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/optimization-log/criterion result.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，&lt;script type=&quot;math/tex&quot;&gt;R^2&lt;/script&gt;的数值达到了0.9左右，算是实测中非常稳定的水平了。&lt;br /&gt;
进一步看Criterion生成的详细报告：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;↓概率密度函数（PDF, Probability Density Function）
&lt;img src=&quot;/image/optimization-log/pdf.svg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;↓线性回归（Linear regression）
&lt;img src=&quot;/image/optimization-log/regression.svg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为我也没有深入学习和了解过统计学（Statistics）和概率学（Probability theory），也就不在此分析上述图表以免误人子弟。&lt;br /&gt;
我们可以根据上述的Benchmark计算出拼包的速率，单位为pps（Packet Per Second），符号为&lt;script type=&quot;math/tex&quot;&gt;\mu'&lt;/script&gt;。&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{align}
\mu' &amp;= \frac{1s}{3.2731\mu{}s}\\
&amp;\approx{} 305530.094714329 pps
\end{align} %]]&gt;&lt;/script&gt;&lt;br /&gt;
当然，在不同的硬件条件下，速度也是不同的（甚至插拔笔记本的电源会对速度造成影响），感兴趣的可以自己做一下Benchmark。&lt;/p&gt;

&lt;p&gt;同时，我还对优化前的版本做了Benchmark（相同的测试条件和代码），得出如下数据：&lt;br /&gt;
&lt;img src=&quot;/image/optimization-log/compare.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
可以看到各方面数据相较于优化前的是全面落后的（无论是耗时还是数据的稳定性）&lt;/p&gt;

&lt;p&gt;实际上，上面的Benchmark并不能完全显示出优化的效果。上面的Benchmark只能体现出随机数算法优化后的效果。因为两个版本都完整地创建了一次包，但在实际情况中，大规模拼包时，优化后的&lt;code class=&quot;highlighter-rouge&quot;&gt;lib_blaster&lt;/code&gt;只需要小幅度地修改封包即可。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;可以计算一下这个差别在一定条件下的影响：（&lt;script type=&quot;math/tex&quot;&gt;t_{b}&lt;/script&gt;表示创建包的耗时，&lt;script type=&quot;math/tex&quot;&gt;t_{e}&lt;/script&gt;表示修改包所占的耗时，&lt;script type=&quot;math/tex&quot;&gt;t_{b},t_{e}\in\mathbb{N}^{+}&lt;/script&gt;）&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;优化后创建包时间所占总拼包时间的百分比：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\begin{align}t_{1}\%=\frac{t_{b}}{t_{b}+n\cdot{}t_{e}}\end{align}&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;优化前创建包时间所占总拼包时间的百分比：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\begin{align}t_{2}\%=\frac{n\cdot{}t_{b}}{n\cdot{}t_{b}}=100\%\end{align}&lt;/script&gt;&lt;br /&gt;
（↑因为优化前没有修改包的概念，故占拼包时间的&lt;script type=&quot;math/tex&quot;&gt;100\%&lt;/script&gt;）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当&lt;script type=&quot;math/tex&quot;&gt;n\to+\infty&lt;/script&gt;时，&lt;script type=&quot;math/tex&quot;&gt;t_{1}\%&lt;/script&gt;的极限为：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;\begin{align}\lim\limits_{n\to+\infty}\frac{t_{b}}{t_{b}+n\cdot{}t_{e}}=0=0\%\end{align}&lt;/script&gt;&lt;br /&gt;
可以看出，当&lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;趋于正无穷时，差别还是非常明显的（简直太明显了）&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;还可以计算一下两个拼包总耗时之比（当&lt;script type=&quot;math/tex&quot;&gt;n\to+\infty&lt;/script&gt;）：&lt;br /&gt;
（↓因为优化前没有修改包的概念，所以修改前的耗时为&lt;script type=&quot;math/tex&quot;&gt;n\cdot{}(t_{b}+t_{e})&lt;/script&gt;）&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{align}
k&amp;=\frac{t_{b}+n\cdot{}t_{e}}{n\cdot{}(t_{b}+t_{e})}
\end{align} %]]&gt;&lt;/script&gt;&lt;br /&gt;
求当&lt;script type=&quot;math/tex&quot;&gt;n\to+\infty&lt;/script&gt;时的极限：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{align}
\lim\limits_{n\to+\infty}k&amp;=\lim\limits_{n\to+\infty}[\frac{t_{b}}{n\cdot{}(t_{b}+t_{e})}+\frac{n\cdot{}t_{e}}{n\cdot{}(t_{b}+t_{e})}]\\
&amp;=\lim\limits_{n\to+\infty}\frac{t_{b}}{n\cdot{}(t_{b}+t_{e})}+\lim\limits_{n\to+\infty}\frac{n\cdot{}t_{e}}{n\cdot{}(t_{b}+t_{e})}\\
&amp;=0+\frac{t_{e}}{t_{b}+t_{e}}\\
&amp;=\frac{t_{e}}{t_{b}+t_{e}}\\
\end{align} %]]&gt;&lt;/script&gt;&lt;br /&gt;
显然，根据实际，&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
t_{e}&lt;t_{b} %]]&gt;&lt;/script&gt;，所以这个耗时之比的比值是非常小的。&lt;/p&gt;

&lt;p&gt;所以&lt;code class=&quot;highlighter-rouge&quot;&gt;lib_blaster&lt;/code&gt;在实际中的发包速度&lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt;是多少呢？（&lt;script type=&quot;math/tex&quot;&gt;t_{network}&lt;/script&gt;表示发包耗时）&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\begin{align}
\mu&amp;=\frac{1s}{\frac{1s}{\mu'}+t_{network}}
\end{align} %]]&gt;&lt;/script&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;3-总结&quot;&gt;3. 总结&lt;/h2&gt;
&lt;p&gt;根据上述演算，可以基本得出本次优化的结果已经达成了。当然，这只是拼包部分的优化，在发包部分，还可以使用&lt;a href=&quot;https://www.dpdk.org/&quot;&gt;DPDK&lt;/a&gt;和&lt;a href=&quot;http://info.iet.unipi.it/~luigi/netmap/&quot;&gt;netmap&lt;/a&gt;等黑魔法优化，达到无与伦比的速度。&lt;br /&gt;
但是限于这些方法过于底层，相关的Rust Binding还不成熟以及自身水平，所以这次并没有优化。&lt;/p&gt;</content><author><name></name></author><category term="Rust笔记" /><category term="项目" /><category term="网络" /><category term="Linux" /><summary type="html">lib_blaster 是一个我用 Rust 编写的 SYN flood 概念验证（Proof of Concept） 的库。为追求极致的性能，我对它作了大量优化，达到了一定的效果。这是我对优化过程的记录。</summary></entry><entry><title type="html">几件伤心事</title><link href="/jekyll/update/2018/04/27/%E5%87%A0%E4%BB%B6%E4%BC%A4%E5%BF%83%E4%BA%8B.html" rel="alternate" type="text/html" title="几件伤心事" /><published>2018-04-27T20:38:00+08:00</published><updated>2018-04-27T20:38:00+08:00</updated><id>/jekyll/update/2018/04/27/%E5%87%A0%E4%BB%B6%E4%BC%A4%E5%BF%83%E4%BA%8B</id><content type="html" xml:base="/jekyll/update/2018/04/27/%E5%87%A0%E4%BB%B6%E4%BC%A4%E5%BF%83%E4%BA%8B.html">&lt;blockquote&gt;
  &lt;p&gt;以下几段文字力求真实表现出考试一步步走向失败，以及揭晓结果时的复杂心态。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;自语道：“还剩下20分钟左右的时间，不要慌张，稳定下来！“&lt;br /&gt;
然而实际上，已是按捺不住内心的躁动了。20分钟的时间，却居然还有几道大题的答案写得毫无底气。&lt;br /&gt;
“我究竟怎么了？为什么算出来是这样的？”，我抱着这个问题仔细翻查了过程，可是毫无问题。&lt;br /&gt;
就这样，7分钟离去。&lt;br /&gt;
几分钟过后，我猛然发现了自己自始至终的一个读题疏漏。一看表，已经只剩10分钟的时间了。&lt;br /&gt;
可这一看错，就意味着两道题。10分钟？
只够改一小题了，我听得到心脏的加速跳动以及颈动脉舒张的声音。 
“这一步千万不能算错”，我近乎祈求地对自己喊道。&lt;br /&gt;
当然，戏剧性地，还是错了。此时，铃响了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;刚离开考场，我的心跳才缓缓平复。来到教室，我随意翻看了同学的答案，大概看了几道我毫无自信的题。不出所料，错了。&lt;br /&gt;
当然，我并没有什么太多的心理变化，大概算了一下，认定与自己的目标有一定距离。&lt;br /&gt;
“千万不能崩，否则你就真的没机会了。”，这句话重复在我脑海中回想。&lt;br /&gt;
随即我就开始复习下一门科目了，周围人一个个喜出望外，我麻木不仁地看着课本，味同嚼蜡。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下午的考试还算顺利，但是，当考完时，我就开始无休止的回忆了。&lt;br /&gt;
我并没有准备明天的科目，亦或说是敷衍了事地翻了一下。在周围同学背单词的嘈杂声中，我托着头，两眼空洞端视前方。&lt;br /&gt;
我越想越后悔，有点发懵。随后又有点想哭，可又哭不出来，想哭的冲动一次又一次被掩盖又重新唤起。
终于，下课了。&lt;br /&gt;
我仿佛沉浸在一天考试带给我的宿醉中，头痛且喜怒无常。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;跌跌撞撞得跑到寝室，我趴在桌面上。四周寂静无声，只留下窗外风吹树的沙沙声与我的喘气声。&lt;br /&gt;
一开始，我还麻木不仁，渐渐地，气息平静了，泪水夺眶而出——却没有温度——那正是内心的凄凉。
泪水流了几滴便止住了，可真切的痛觉却蔓延开来。痛——如魔爪，掐住我的咽喉；如利刃，绞割我的心脏；如……，攫人魂魄。我被它摆弄着，无力地仰面在桌上，静静忍受消散不尽的痛。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;熄灯后，寂冷的月光蒙在地上，我的思绪又不禁游离起来，同样的过程，同样的忍受，不一样的只有更多的悔恨吧。&lt;br /&gt;
曾几何时，我看见过人心痛时，会产生物理上的痛觉。
我紧紧地抓抱着被子，似在包扎伤口似地裹在心口。翻来覆去，痛苦发遍全身。
抓狂，绝望，痛苦，失眠。&lt;br /&gt;
听着室友的鼾声，我真是不禁叹惋：“这是故意的吗？！”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;英语考试结束——全部结束了。&lt;br /&gt;
我毫无心理上的波动，因为我知道这已经无能为力了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;中午，我还是按捺不住自己的好奇，去对了一下英语的答案，结果必然，我也只能失望地接受。那感觉如同你咽不下最后一口气，全身还努力拽着它时，它——溜了。&lt;br /&gt;
我坐在座位上，呆滞地看着《闪灵》，可自己却再也进入不了看书的状态了，再也不了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数学成绩揭晓了，我自然而然不想知道。&lt;br /&gt;
可是我必将面对的，我还是问了同学。&lt;br /&gt;
我把他叫出门外。&lt;br /&gt;
搭着他的双肩，仿佛接受判决似的：“告诉我吧，到底多少？”&lt;br /&gt;
他刻意回避了我的目光，没说什么。&lt;br /&gt;
我追问道：“有80分吗？”，80是我预估的最低分数了。&lt;br /&gt;
他目光游离了一会，似乎做错了什么似的，尔后又摇摇头。
又追加道：“个十位之和是14”&lt;br /&gt;
此时的我是多么希望自己听错，算错？可是偏偏就是这样。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;语文课之后，一切都落下帷幕了。&lt;br /&gt;
周围的同学正紧张得讨论着自己的分数与排名。好似市场里要价的人们。&lt;br /&gt;
我呆呆地望着窗外，没有任何想法，留下了眼泪。&lt;br /&gt;
“所有的努力都白费了，这是故意的吗？！”&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/image/星空.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;有一个夜晚我烧毁了所有的记忆，从此我的梦就透明了；有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。如果你感到委屈，证明你还有底线 。如果你感到迷茫，证明你还有追求 。如果你感到痛苦，证明你还有力气 。如果你感到绝望，证明你还有希望 。 ——泰戈尔&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="随笔" /><summary type="html">以下几段文字力求真实表现出考试一步步走向失败，以及揭晓结果时的复杂心态。</summary></entry><entry><title type="html">《挪威的森林》读书笔记</title><link href="/jekyll/update/2018/03/23/%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html" rel="alternate" type="text/html" title="《挪威的森林》读书笔记" /><published>2018-03-23T21:03:00+08:00</published><updated>2018-03-23T21:03:00+08:00</updated><id>/jekyll/update/2018/03/23/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0</id><content type="html" xml:base="/jekyll/update/2018/03/23/%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html">&lt;blockquote&gt;
  &lt;p&gt;这是我第一次读村上春树的书，从《挪》中短窥一般社会、青春与现实。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;日本作家的作品，是我所涉猎最少的一类，也正因如此，我知道的并不多，便从众选择了村上的《挪威的森林》。&lt;/p&gt;

&lt;p&gt;所以，这究竟是一部怎样的作品呢？我很难对此妄下定论，有人说这是“恋爱小说”或“言情小说”。的确，村上自己也这样说过，但是，我却并不这样认为。因为《挪》既不如恋爱般粗浅，也不落言情的俗套华丽。因此，译者认为它是“成长小说”或是“青春小说”。但我私以为之所以难下定论，正是因为村上写的真实，才使《挪》拥有了生活般单薄又多变的面貌。所以，我暂称它为“生活小说”。&lt;/p&gt;

&lt;p&gt;书中描述了许多复杂的异性关系，主人公也比较多杂。我并不打算对此讨论或回味过多。或许，一般这样的安排下主角可能会不够地道，但通过上下文可以看出——相反，主角『渡边彻』是一个有些深陷混沌沼泽的典型文艺青年。&lt;/p&gt;

&lt;p&gt;渡边彻高中时有着一个要好的朋友木月，他与直子从小青梅竹马，自然而然地成为了恋人。他们两人对渡边彻也是交心的真朋友。就这样，他们一直维持着三人的朋友关系。然而，没有任何事由的，木月在渡边彻17岁那年自杀了。这给两人带来了失真却沉重打击。&lt;/p&gt;

&lt;p&gt;随后，就高中毕业了，渡边彻似乎对生活缺失任何热情，来到了东京一所中下等的私立大学，却又天天翘课。过得日子也简单：喝酒看书，约会。但同时，也面对来自生活的压力。就这样，日子有一日没一日地过着。就是这样一个文艺青年，并没有什么成就。整日——看无用之书，无缘有地喝酒，却又过着看起来还挺丰富的生活——尽管在我看来是浪费。&lt;/p&gt;

&lt;p&gt;而直子，则深深地挣扎与被撕裂在对木月的忠诚与对渡边彻的爱中。她在她20岁生日次日去了一个疗养医院。可想而知，这样下去人一下子就失去了目标，生活在自我迷茫的煎熬中，却又无法自拔。最终，不知是偶然还是必然，她在症状逐渐严重后自杀了。&lt;/p&gt;

&lt;p&gt;此外，通过渡边彻的眼，还可以看到各色人等。印象最深的便是永泽，家境好自不必言说。事业与学业上成就丰硕——得到了外务省的录取并且精通多门外语，但是，毕竟他是极为不地道且自私的人。动作虽然不多，但是基本上都是些绝情的手段。他的自私早已根深蒂固，在他脑海中，“自己”与“他人”泾渭分明。当然，谁知道事业上的成就是不是他自私的附属品呢？&lt;/p&gt;

&lt;p&gt;小说的最后，渡边彻问了”我在哪“这样一个终极的哲学问题。我想，于现实，于青春，这个问题不知道被多少人问过，当然也从未得到过解答。渡边彻看似颓废，但他或多或少的在我们身上都有呈现，这是成长不可避免的镇痛。&lt;/p&gt;

&lt;p&gt;现实的青春并不是几碗鸡汤就能振奋的，现实就是刻薄的，逃不过那些错与迷茫。对于这些，我只想说——成长是痛，但也是幸运！&lt;/p&gt;</content><author><name></name></author><category term="随笔" /><category term="读书笔记" /><summary type="html">这是我第一次读村上春树的书，从《挪》中短窥一般社会、青春与现实。</summary></entry></feed>